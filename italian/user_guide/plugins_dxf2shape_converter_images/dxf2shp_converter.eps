%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (dxf2shp_converter.eps)
%%CreationDate: (Sat Jan 24 07:56:29 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800BFA100746200FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800CCAC00251F00FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
251F00FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800E6C200CCAC00E6C200251F00FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800857000BFA100BFA100514400251F00FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800635300BFA100FFD800FFD800FFD800251F00FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800251F00
CCAC00FFD800FFD800FFD800251F00FFD800FFD800FFD800D9B700CCAC00D9B700FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800251F00BFA100FFD800
FFD800E6C200251F00FFD800FFD8007462003C32003C3200251F00635300FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD8006353003C3200F3CD00FFD800947D00
251F00FFD800FFD800746200FFD800FFD800BFA100000000D9B700FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800635300251F00514400E6C2003C3200947D00
FFD800BFA100FFD800FFD800FFD800251F00CCAC00FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800E6C2003C3200FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
635300BFA100FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800A38A00A38A00FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800A38A00A38A00FFD800FFD800FFD800FFD800
FFD800D9B700CCAC00D9B700FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800A38A00746200CCAC00CCAC00CCAC00BFA100FFD800746200B19500
E6C200635300FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
E6C2003C32003C32003C32003C32003C3200635300FFD800251F00F3CD00FFD800F3CD00
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800746200251F003C3200746200FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800F3CD00FFD800BFA100514400857000FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800857000FFD800FFD800A38A00947D00FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
514400746200857000857000FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800FFD800
FFD800FFD800FFD800FFD800
end
%%PageTrailer
%%Trailer
%%EOF
