%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (icon_buffer.eps)
%%CreationDate: (Sat Jan 24 07:56:29 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff9CBBFE8EB2FE729FFE6B9AFE89AFFE99B9FE
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff93B5FE6B9AFE6A98FE7EA4FE96B3FE9FB9FE83A7FE6E9AFE6696FE91B3FE
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffABC5FE6C9BFE
6A98FE90AFFEBFCFFED0DCFED6E1FED8E1FED1DCFEC3D1FD94B2FC6F9AFC6495FCA2BFFD
ffffffffffffffffffffffffffffffffffffffffffACC6FE6697FE79A0FEAFC4FEC4D4FE
C9D8FECADBFECADDFECADCFEC8DAFCC8D7F6C1CDDBB2C0CD81A1DB6293F6A0BEFCffffff
ffffffffffffffffffffffffffffff6798FE739CFEA5BEFEB5CBFEB7CEFEB8D0FEB8D1FE
B8D1FEB7D1FCB7D0F3B2BBA9D8D26DE9DF66C3BF667992AD6193F7A8C3FDffffffffffff
ffffffffffff83ABFE6393FE92B1FEA2BEFEA4C2FEA5C4FEA6C4FEA6C4FDA5C4FBA6C4F4
9EABA4D9D161F8EB5CE9DC55F8EB5CB3B1676C95E477A2FDffffffffffffffffffffffff
6093FE739DFE8DB0FE90B4FE91B7FE92B7FC93B7F995B5E992A9C497A18ED2CA60F8EB5C
A59C3B474318F2E559C9C3617A9BDA5A8FFDA5C1FEffffffffffff89AEFE598DFE739DFE
7BA5FD7DAAFC7FACFA84ACF18BA3B9A7AA70D4CD5DF0E45EF8EB5BB1A73F25230CB5AB41
F7EB5DB0B270779DE85A8EFD7BA5FEffffffffffff78A3FE598DFE6695FC6B9CF775A2EA
85A4C3A4AE86D7D061F7EA5DECDF56C5BA47736D2828260DAAA03CF7EA5CD1CD687E9EBE
6292F8588DFD6899FEffffffffffff5E92FE548CFC6091EE8BA5ADB8BD79DDD663F5E95E
F4E759A99F3C2E2B0F0E0D04676224CDC24AF7EA5CD6D26A83A1B65A8FF5558CFC548CFE
568DFE99B9FE8FB2FE548CFE558DF788A3AEE3DB63F7EA5CECDF56AEA43E494519302D10
403C164D491BF4E759F1E65FC6C7737E9EBD588EF4548CFC548CFE548CFE548CFE8BB0FE
ffffff6295FD5A8FF1B1BA83F7EB5D978E35312E103A3714968E35E5D852635E238C8432
F8EB5DB2BA826A96DA568DF7548CFC548CFE548CFE548CFE598FFEA7C2FEffffff79A4FD
598EF2AAB68AF6EA5DC9BF49C5BA47F2E558FDEF5CE2D551322F11AFA53EF4E85F92A8A2
558CF8548CFD548CFE548CFE548CFE548CFE6C9BFEffffffffffff8DB1FE558CF97A9DC3
CFCD6DF0E560F5E95FFAED5EF4E759625C22605B21F3E659DDD766769BC7548CFA548CFE
548CFE548CFE548CFE548CFE82AAFEffffffffffffffffff6697FC578DF56F98D287A2AF
A6B289F2E65FD1C64B514C1CD3C84CF2E65F9DAE975A8FF1548CFC548CFE548CFE548CFE
548CFE5E92FEffffffffffffffffffffffff89AEFE548CFD548CFB548CF97098D0D3D06A
F7EA5CF6E95BF4E85EC1C4756A96DB548CFB548CFE548CFE548CFE548CFE548CFE80A8FE
ffffffffffffffffffffffffffffff709EFE548CFE588DFD6693F48DA4B3B6B771BEBB69
A5AC8683A2D26B98F86796FD6594FE6191FE598DFE548CFE6697FEffffffffffffffffff
ffffffffffffffffffffffff6D9CFE598DFE739BFC87A8F796B0EA9AB2E59AB4F195B1FA
93B0FD8FAEFE86A8FE769DFE5B8EFE6597FEB0C9FEffffffffffffffffffffffffffffff
ffffffffffffffffff76A2FE5B8FFE6C98FD97B3FDAAC0FDB6C7FDB7C8FEACC1FE9AB5FE
719BFE5C8FFE719EFEffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffA8C3FE75A1FE6193FE6997FE81A6FE86A9FE6B98FE6193FE709EFEA2BFFE
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff9DBCFE8CB1FE8CB1FE9ABAFEffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
