%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionAddOgrLayer.eps)
%%CreationDate: (Sat Jan 24 07:56:22 2009)
%%BoundingBox: 0 0 101 101
%%HiResBoundingBox: 0 0 101.471 101
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 101 101
userdict begin
DisplayImage
0 0
101.471 101.471
12.000000
31 31
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000030B030A1B0B
0E22111028120A1A0B051206000100ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0000000C1C0E1D5C22227B23258E2227932020901D1A791A113612
020E04000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000500153119206E24
287E232C84232F8B232F8F212E931F2D961C239619145F14061206000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0000000F2412216E272A76252A78233C893473AD6C73B16B62AB58
2E941E2D971C269818135D13030C03ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff061507215C28
2872282A74262A77255C9856F7F7F7F7F7F7C6DDC32F92202E951D2C961B1F96170C260D
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000143018256D2A2A70292A73272B75265C9657F7F7F7
F7F7F7C6DCC42F8F212E931F2D951D2B971A157415030E03ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
194620276C2B296E2A2A71292B73275D9558F7F7F7F7F7F7C6DBC42E8B222E90212E941F
2D961C1C8D18061707ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000100215928276A2CD6E1D6F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F773B66A22961B0B1E0Dffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000300215A2A26682CD6E0D6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F775B56B23951D0E230F000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff0000001B4E2226662CB6CAB7
D1DDD1D1DDD1DAE4DAF7F7F7F7F7F7EEF1EED1E0D0D1E1CFD2E2CF68AD5E218E1F091B0C
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000
000000000000000000000000153A1A24642D27662C286A2B286C2B5C905CF7F7F7F7F7F7
C5D8C42A79232C7F232E87232D8C221E7921061407ffffffffffffffffffffffffffffff
03050604080A0910150A12170A13190A141B0B161E0B17200C19230C1A250C1C270A1D0D
235E2C27652C28682C296A2B5C8E5CF7F7F7F7F7F7C5D7C42A77252B79232D8223258823
19411C000300ffffffffffffffffffffffffffffff0000000F1B2242676CC8DE229EBA3A
446F6E2D5C7E2B5D802A5E82295F84275F861F4E7014381B23622D26662C28682C5B8D5D
F7F7F7F7F7F7C5D7C42B75262A7724287C231E6923071408ffffffffffffffffffffffff
ffffffffffff00000002030439606FCBE120EDFF0CE8FB0F99B83E34657C295E83285F85
27608825608A0F2A331C502524632C27662C28692B296C2B296E2A2A71292B7327277625
1E68240E2212000000ffffffffffffffffffffffffffffffffffffffffff040709224055
305C7A6D9257CCE320EDFF0CD6EC1A477872275F872660896A985F83AD5010314014391B
22612C25672C266A2C276D2B2570292370281D522409190C000000ffffffffffffffffff
ffffffffffffffffffffffffffffff00000112222D2E5B7B2D5C7D2F607D89AD48EDFF0C
9BBD3E26608825618A699760EBFE0D4880781A50760A2418122E1818411F1C4A2316341A
0D2210040F04000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
0000000305072D5B7B2C5D7F2B5D812A5F82D7ED1AD5EC1B25608924618C23628EBDDA2B
ABCD371F64941E65961C6599175785124A7109283D010609ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff0306082347612B5D802A5E82
295F84B2CF30EAFD0E28638923628D22628F7CA955DCF2181E64961D65981B669A1A679C
19679E17669D051622010406ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0102031329382A5E81295E83285F86C2DC27E5F81124618C23628E
216390A4C83CB3D3331D65971C66991B669B19679D357C8D94C14A8DB94902090E000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000004090C
2A5E83285F85275F87B7D42EE8FB0F316C85226290206392A3C83DD5EE1ABFDD2AE5F912
DBF218B8D931D2EC1ECEE92265A26C0F5686010508000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff020507224E6D285F862660887AA554EDFF0C
C4DF272E6D89206493307289E6FA10D5EE1B669D6871A66299C34693C14A2D7A93146AA7
126BA90B446B010509000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffff02040514304327608725608A24618C92B847EDFF0CDBF11871A15E246A91518D75
EDFF0C40828318689F1768A11669A4146AA6136BA8126BAA106CAC062D47010609ffffff
ffffffffffffffffffffffffffffffffffffffffffffffff000000060E146B975E99BD41
4A817322628F72A15DDDF316EDFF0CE2F713B4D632EBFE0D31788D1768A01669A3156AA5
136AA7126BA9116CAB0F6DAD0E6BAD031726000406ffffffffffffffffffffffffffffff
ffffffffffffffffff000000020405689054C2DD27E9FC0F81AD522164922E6F8B7AAA58
C6E326EDFF0CEAFD0D95C04A77AC5F599974327E91136BA8116CAA106CAD0F6DAF0D6EB1
0B66A401090F000000ffffffffffffffffffffffffffffffffffffffffffffffff020608
14374F23628D75A25AE7FA11BAD82E6DA0612E738B1B669A99C346EDFF0CEDFF0CEDFF0C
EDFF0CEDFF0CCFEA2289BD55257C9D0E6EB00D6EB20B6FB4085A92000508000000ffffff
ffffffffffffffffffffffffffffffffffff00000008141E22628F21639146817AADCF36
E1F614E6FA11AACF3AEAFD0E78AC5D3F858650937A6BA6699BC747D6EF1DEDFF0CDAF21A
6CAC6A4D98831B7AA90970B8054775000509000000ffffffffffffffffffffffffffffff
ffffff0000000103051F5C862063921F64941D6597216A956EA363A6CC3C89B9501768A1
1669A4146AA6136BA8116BAA116DAB62A471E4F913EDFF0CEDFF0CE8FC1094C84F499A88
0E3A4C00060A000000ffffffffffffffffffffffffffffffffffff02070A153E5B1F6494
1E65961D65981B669A1A679C19679E1768A11669A3156AA5136AA7126BA9116CAB0F6DAE
0E6DB0207BA4509A826FAF6ABDE130EDFF0CEDFF0CAED93C011829000406ffffffffffff
ffffffffffffffffffffffff000000091C291F64951D65971C66991A669B19679E1868A0
1769A21569A4146AA6136BA8116CAB106CAD0F6DAF0D6EB10C6FB30B6FB50970B80871BA
42968E6DB16E479B8C036AB2000A10000000ffffffffffffffffffffffffffffff000000
010405000102000102000102000102000102000102000102000102000102000102000202
000202000202000202000203000203000203000203000203000203000203000203000203
00070C
end
%%PageTrailer
%%Trailer
%%EOF
