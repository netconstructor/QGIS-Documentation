%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (dynamicbuffer.eps)
%%CreationDate: (Sat Jan 24 07:56:40 2009)
%%BoundingBox: 0 0 106 103
%%HiResBoundingBox: 0 0 106.466 103
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 106 103
userdict begin
DisplayImage
0 0
106.466 103.139
12.000000
32 31
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
0000000000000000000416230F4165134C741856811D608E236B9C2975AA2B73A427628B
2251721B4059152D3F050A0E000000000000000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff00000000000000000003142011649D1B88D4
208BD6248ED82991DA2D95DC3298DE369BE03B9EE23FA1E444A4E748A7E94DAAEB499BD5
172F40000000000000000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000042841117CC61785D22F51A74A283B671521630A0F38388E
308EDB369BE03B9EE23FA1E444A4E748A7E94DAAEB51ADED56AFEE306081010102000000
000000000000ffffffffffffffffffffffffffffffffffffffffff000000000000000102
0C71B71282D02A56A7640A0D7707068E0606A202027A03042C59A93596DE3B9EE23FA1E4
44A4E748A7E94DAAEB51ADED56B0EF5AB3F1407BA4030608000000000000ffffffffffff
ffffffffffffffffffffffffffffff00000000000003233A0E7FCE1282D05C1633780401
7108087608089005059803033C1A34369BE03B9EE23FA1E444A4E748A7E946A5E740A1E5
49A7E957B1EF5FB6F333607F000000000000000000ffffffffffffffffffffffffffffff
ffffff00000000000004375A0E7FCE1282D067132D8202007807077008087A07078B0403
3C1C35369BE03B9EE23FA1E442A3E63E85CF4A3147671521630A0F4158A85FB6F35BAAE2
030608000000000000ffffffffffffffffffffffffffffffffffff00000000000003233A
0E7FCE1282D01E71C879112582060576070773080760080B2E75CB369BE03B9EE23C9FE3
2F66B4640A0D7707068E0606A2020276171F5DB3F063B9F5294A61000000000000ffffff
ffffffffffffffffffffffffffffff0000000000000000000848741282D01880D14D273A
7201026F01004F07072D7FD13298DE369BE03B9EE23097DD5C1633780401710808760808
90050598030349547B5AB3F1569CCD000000000000000000ffffffffffffffffffffffff
ffffff0000000000000000000000000A4B781268A51466A01768A01B6BA42483C52C94DB
3298DE369BE03B9EE23C9FE26517328202007807077008087A07078B04033C203A55AFEE
68BCF7192D3A000000000000ffffffffffffffffffffffffffffffffffff000000000000
0000000000000000000000000000000000000000000104060E2A3E256EA0379ADD3EA0E3
328CD87911258206057607077308075F1E2957ABEC63B9F568BCF7000001000000000000
ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000
000000050000290104070508000000000000040D13297BB3399CE14B2E447201026F0100
4F0F1253ABEC5FB6F363B9F50A1319000000000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffff3F01004E04072A0103ffffffffffffffffff8B0000
223E8C030A0E000000020609256B9B3C9FE346A5E748A7E94FABEB5AB3F15FB6F34F94C4
000000010304000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffA004048B0000223285ffffffffffffffffff000000020609000000
000102235D8542A3E550ACEC56B0EF5AB3F15FB6F3000000000000010203ffffff000000
ffffffffffffffffffffffffffffff000000000000000000000000000000000000000000
ffffffffffff000000000000ffffffffffff00000007131B0000000001012F79AC49A7E9
56B0EF5AB3F1010203000000000000ffffffffffffffffffffffffffffffffffff000000
000000000000000000000000000102000000000000000000000000ffffffffffff000000
000000ffffffffffffffffff0C1E2B000000040A0F419EDE56B0EF488FC1030709020507
68BCF7ffffffffffffffffffffffff00000000000000000101080C104264164D731C557D
225B8323577B153246050C11000000000000020506ffffff000000000000ffffffffffff
204F6F0000000000002D6E9A56B0EF3A739B010304000000000102ffffffffffffffffff
ffffff000000000001041C2C1875B72387CC2A90D63396DB3B9CE0419FE148A1E04A9CD5
326588000000000000020406ffffff000000ffffffffffff0001010000000D1E2A428FC4
56B0EF5AB3F1000000020506000101457AA0000000ffffffffffff00000000080D116DAD
1B83CB248DD62C93DB3498DF3C9EE243A3E64BA8EA52ADED5BB4F125475F000001000000
ffffffffffffffffff0000000000010104053E85DE45395950597E50A0D85FB6F3132531
0000000000000000000000000000000000000635561481CD1B86D2238BD3258DD51B71AE
18557F2978AF3898DA45A3E55AB3EF5CAEE7152633000000000000ffffff000000000000
0001021D435E5720367608079104035310154C92C363B9F5345E7B000000000000000000
000000000001095084137AC11B88D3238BD308456E212F395D5C5B990404527892286B9A
4BA8E762B8F4356280000102000000ffffff0000000000000205074F2A49710705700808
81070799040465171F5096C768BCF7000000000000000000000000000101095084137CC4
1B88D4238BD3353D427608087608087608088924315F8BBF3D90C962B8F3569CCC030609
000000ffffff00000000000003070A69122B7C05047408087008088806068F0302351837
4986B000000000000000000000000000060A095185137FCB218AD22489D0760808760808
7608087608087608082A2C2D3377A762B8F35EAADE0B151B000000ffffff000000000203
050D134C2B498404037B0707730808740807780708425691569BCB000000000000000000
00000000090F095185137FCB1B87D1277FC2760808760808760808760808760808990404
4CA0D962B8F360ACE10C171E090102ffffff000000020508000304459FDF6E2A397E0300
7504016507064426575DB0F21D344400000000000000000000000000060B095185137FCB
1B82C91C85CF222F3A7608087608087608087608085A707E55ADE962B8F35FAADE0C151B
0000005300000000000000000000002B648C447DBC53447352305B3D34662E5CB3234156
000000000000000000ffffff0000000002050951851380CB1B82C91B82C92080C31F82CA
760808970607323B42377BAB5AB3EF62B8F35CA7DB0A1218000000ffffff670000020103
00000000000003070A173143183243030608000000000000000000000000ffffffffffff
000000000000010D161380CC1B81CA1B82C51F85C94082B9528BBE51A6E24899D350AAE7
5BB4F263B9F54782A9020405000000ffffffffffffffffff000000000000000000000000
000000000000000000000000000000000000ffffffffffffffffff000000000000010B11
1A81CA1D6A9F226B9E3C86BB4287BA3F84B43E86BB4CA0DB53A4DC37698B081015000000
000000ffffffffffff322560ffffff000000000000000000000000000000000000ffffff
ffffffffffffffffffffffffffffffffffff00000000030600000001070C020A0F000000
000000060F15060F15060E14050A0F020405000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff00010100000000000000000001040702060903070B020507020407020406
000103000000000000551B44521D45ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
