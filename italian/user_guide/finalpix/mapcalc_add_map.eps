%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mapcalc_add_map.eps)
%%CreationDate: (Sat Jan 24 07:56:33 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22.005 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22.005 22.005
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777ffffffffffffffffffffffffffffff
777777FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF777777ffffffffffffffffffffffff777777FFFFFF
1B42601E48691E4B6D1E4A6B204F73215175215175215175215175325C7C37607E325C7C
215175215175FFFFFF000000ffffffffffffffffffffffff777777FFFFFF1E4B6D255B84
2964912964912964912964912964912964914D7CA06A90AB7697B06A90AB4D7CA0296491
FFFFFF000000ffffffffffffffffffffffff777777FFFFFF2351742C68943375A73375A7
3677A83677A83375A74E8BBA81ADCEAFCBE0C7DAE9AFCBE081ADCE42759DFFFFFF000000
ffffffffffffffffffffffff777777FFFFFF275478326D9B3C81B73C81B7447FAE5390BF
5994C25C95C292B8D6C8DBEAFFFFFFC8DBEA92B8D64D7EA4FFFFFF000000ffffffffffff
ffffffffffff777777FFFFFF2D5B80366E9D3974A3FFFFFF3368933D7DB05592C35792C3
89B3D5B4CFE4CADDECB4CFE489B3D54A7DA6FFFFFF000000ffffffffffffffffffffffff
777777FFFFFF3E668842749DFFFFFFBDBDBDFFFFFF3260884380B5396D996C9FCA8CB6D8
99BDDD8CB6D86EA2CE3C74A4FFFFFF000000ffffffffffffffffffffffff65696CA5ABAF
6D7F8D5B6368525A6164696E959595FFFFFF447AA5FFFFFF3D6B946198C96BA1D1639CCE
4E8FC84279A9FFFFFF000000ffffffffffffffffffffffff6E7276A8BFC9B5D3DBB8D5E0
86A6B74C52586363634848481E1E1E7A7A7AFFFFFF5C80A26594C170A5D66FA3D45E8AB4
F3F3F3000000ffffffffffffFFFFFFFFFFFF7A7C80B0CAD4BADDE69ED0E0629AB22F343B
3D3D3D0000005D5D5DB8B8B86A6A6A4C4C4C17171794BCE2205B071F5A06D6D6D6000000
ffffff7E8288676D7492979C92959AB2CED8A2D3E184C6D84E8EA80D141E262B322D3238
6D6E6E4545450505052B2B2B121212205B0736960D318A0C999999000000ffffffA3A7AC
8F98A1C4D4DBC1D5DEA7C9D582C5D779C2D64A8FAB19739713688C1333483B3C3D1B1B1B
0000001547002363085B5B5B5B5B5B5B5B5B000000585858ffffffA1A6AA9CA6AECFE4EC
B1D8E48FCADB73BED46CBDD441ABCA1397BE0F8EB60B3A541443032363082B780A31840E
36960D5B5B5BFFFFFFFFFFFF999999838383ffffff6C717783949CAAD3E187C8DA8ECCDD
76C0D65EB7D256B4D027A0C3138FB70B3B54286F0C31840E308C0936960D2F840B5B5B5B
FFFFFF999999585858ffffffffffff27303B3B5160578DA64588A55E9AB24DAFCC2CA2C4
3B88A53685A32172940A293EE9EAEBFFFFFFF6F6F6DFDFDF999999000000989898585858
ffffffffffffffffff141C28121B261A232D121C271E76991799BF0E96BE157296141E28
0D151C03060A010101000000000000000000000000565656838383ffffffffffffffffff
ffffffffffffffffffffffff05111E106E930E96BE0E96BE106E9305111Effffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff05111E0F5A7D107EA6107EA60F5A7D05111Effffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
06121F061828071C2D071C2D06182806121Fffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
