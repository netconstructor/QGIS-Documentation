%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionLowerItems.eps)
%%CreationDate: (Sat Jan 24 07:56:27 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffFF9200
FF9B00FF9B00F89500F28F00ED8B00E78600E28100DC7D00D67800D07200CC6C00C56800
BF6300B75A00ffffffffffffffffffffffffffffffffffffffffffFF9E00FFDB22FEEB63
FDE75CFCE255FBDE4EFAD947F8D440F7CF39F5C932F4C32BF2BD24F1B61DEEAE13B96000
ffffffffffffffffffffffffffffffffffffffffffFF9E00FEEB3FFFFBADFFF8A0FFF592
FFF17DFFEC6CFFE863FFE45AFFDE4EFFD840FFD132FFC81DFFBD05BA6100000000000000
ffffffffffffffffffffffffffffffF99800FDE73AFFF8A0FFF483FFE61EFFDE00FFDA00
FFD500FFD000FFCB00FFC600FFC100FFBC00FFB700B45C00000000000000ffffffffffff
ffffffffffffffffffF49300FDE235FFF593FFEB49FFDE00FFDA00FFD500FFD000FFCB00
FFC600FFC100FFBC00FFB700FFB200B05700000000000000ffffffffffffffffffffffff
ffffffEE8E00FCDE2FFFF286FFE42EFFDA00FFD500FFD000FFCB00FFC600FFC100FFBC00
FFB700FFB200FFAD00AA5301184DA11852AE1A5DC4175ABE0A46AAffffffffffffE88800
FBD92BFFEE79FFDF23FFD500FFD000FFCB00FFC600FFC100FFBC00FFB700FFB200FFAD00
FFA900A64F026B9ECC69A5DF68B3FE4AA2FE104EAEffffffffffffE38400FAD426FFEA6C
FFDC29FFD000FFCB00FFC600FFC100FFBC00FFB700FFB200FFAD00FFA900FFA709A14A02
4F8FCC4C95DF46A1FE3C9AFE0D4CAAffffffffffffDD7F00F9CF21FFE55FFFD82CFFCB00
FFC600FFC100FFBC00FFB700FFB200FFAD00FFA901FFA90DFFA8199B45023D84CC3B8CDF
3C9AFE3494FE0C49A4ffffffffffffD97A00F8CA1DFFDF52FFD42AFFC600FFC100FFBC00
FFB700FFB200FFAD00FFAA04FFAA10FFAA1CFFAA28974002367FCC3487DF3494FE2D8FFE
0A479FffffffffffffD37500F7C419FFD946FFCD20FFC100FFBC00FFB700FFB200FFAD00
FFAB07FFAB14FFAB20FFAB2CFFAC38923B02307BCC2D82DF2D8FFE268AFE084599ffffff
ffffffCE6F00F6BF15FFD339FFC717FFBC00FFB700FFB200FFAD00FFAD0BFFAC17FFAC23
FFAD2FFFAE3BFFAF478E36022976CC277DDF268AFE288BFE074293ffffffffffffC86B00
F5B910FFCC2CFFBF0BFFB700FFB200FFAE02FFAE0EFFAD1AFFAE27FFAE33FFAF3FFFB24E
FFBC6C8830022372CC247BDF2D8CFE2F8DFE06408EffffffffffffC36600F4B30CFFC112
FFB700FFB200FFAF06FFAF12FFAF1EFFAF2AFFAF36FFB042FFB657FFC075FFCC93832B02
2471CD2B7EE13490FE3690FE053D88ffffffffffffBA5D00C26A00C16A00BD6600B86201
B35D02AF5903AB5504A75105A24C059F47079C430998400B953D0D66180A2B76D03483E3
3B93FE4095FE043B83ffffffffffff9F4000A54200431C003D17003914001E3D816489B3
6388B34678B33B73B3356EB33069B32966B32E68B6346CBA357CD33C88E54698FE4B9AFE
04397Dffffffffffffffffffffffff0000000000000000000C439E5B9AD85998D83987D8
3282D82B7DD8287AD82D7DDA3280DC3883DE3F87DF4790EC55A0FE69AAFE043677ffffff
ffffffffffffffffffffffffffffffffffff0E4FBB5EAEFE52A6FE3A99FE3293FE3091FE
3592FE3993FE3E95FE4497FE4B9BFE5EA5FE79B3FE8DBBFE043471ffffffffffffffffff
ffffffffffffffffffffffff0D4DB53F94F2338DF22C88F12C86F02E87F03087EF3187EF
3588EF398AEE4791EF599CF16DA4F27AA8F2042F68ffffffffffffffffffffffffffffff
ffffffffffff0A49AC0D4AAC0B47A509459F08449A084194063F8E053C87053A8105377B
033676033470033169032E63022A59ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
