%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionAddLegend.eps)
%%CreationDate: (Sat Jan 24 07:56:22 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
0272FF127CFF2486FF4799FF61A7FFffffff0074FF3B93FF4D9CFF4E9DFF4F9DFF509EFF
519FFF52A0FF55A0FF5AA3FF5EA6FF63A8FF65A9FF6BABFF66A9FF66AAFF1F83FF70AFFF
D7E9FF519EFE86B6F2ffffff177EFF9CC7FEC7E0FFC2DDFFBFDAFFB9D7FFB5D6FFB0D3FF
ACD0FFA7CDFFA2CCFF99C7FF92C2FF8ABCFF7DB6FE7FB1E92F8BFE7AB6FF9DCAFF6BADFE
92ADCE0000002A89FF86BDFE87BBFF82B9FF7CB6FF78B4FF73B2FF6BADFF62A7FF55A0FF
4B9BFF4598FF4095FF3A92FF73B1FE768AA34094FE2E8AFF499AFF5CA4FEAFBBCE000000
4D9EFF61A6FE2C8AFF2586FF2083FF1E82FF157EFF0E7AFF0876FF0373FF0072FF0072FF
0072FF0072FF7DB6FE8E98A2549FFD69ABFE83BAFEADD2FEA6A6A6000000559FFF81B7FA
89BDFC8EBFFC93C2FC99C4FC9DC7FCA2CBFCA7CDFCACD0FCB2D3FCB7D5FCBCD8FCC1DCFC
D0E0F6525252000000000000000000000000000000000000ffffff000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
ffffff000000000000000000000000ffffffffffffffffff000000000000000000000000
000000000000000000000000000000000000000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff0072FF0E7AFF1E81FF4295FF
609FFFffffff006BFF147DFF197FFF1A81FF1C81FF1C81FF1F83FF2083FF2887FF308CFF
3790FF3F95FF4798FF4F9DFF58A3FF55AAFF1C82FF61A7FFC6DFFF509DFE89BBF8ffffff
137DFFA5CEFEE1EEFFE1EFFFE1EEFFE2EEFFE1EFFFDCEBFFD9E9FFD5E7FFD2E6FFCEE3FF
C9E1FFC5DEFF93C2FE87B7F32F8BFE84BBFFA9CFFF6CAEFE92ADCE0000002A89FFB1D4FE
C5DFFFC1DCFFBCDAFFB7D7FFB2D4FFADD1FFA8CEFF9FCAFF9AC7FF94C4FF8EC0FF88BDFF
93C2FE758CA54295FE3890FF54A0FF60A6FEAFBBCE0000004F9FFF8ABFFE7BB5FF75B1FF
70AFFF6DAEFF66AAFF5DA5FF57A2FF519EFF4B9BFF4598FF4095FF3A92FF8CBFFE8F99A3
57A1FD69ABFE82B9FEB1D4FEB5B5B50000005BA3FF88BCFD88BDFE8ABDFE8CBFFE8FC0FE
92C2FE93C3FE96C4FE99C7FE9DC8FEA1CAFEA5CCFEA9CFFEC5DEFC676767345B823B4D62
4D5762545858000000000000ffffff000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000ffffff000000000000000000
000000ffffffffffff000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff0072FF0E79FF1D80FF4096FF609FFFffffff0071FF147DFF
197FFF1A81FF1C81FF1C81FF1D82FF2083FF2888FF308BFF3790FF4094FF4799FF4E9DFF
57A2FF55AAFF1C82FF60A7FFC6DEFF509DFE80AFE7ffffff137DFFA5CDFEE1EEFFE0EEFF
E0EEFFE1EEFFE1EEFFDCEBFFD9E9FFD5E7FFD1E6FFCDE3FFC9E1FFC5DEFF93C1FE75A3D8
2F8BFE84BBFFA9CFFF6CAEFE92ADCE0000002A89FFB1D4FEC5DFFFC1DCFFBCDAFFB7D7FF
B2D4FFADD1FFA8CEFF9FCAFF9AC7FF94C4FF8EC0FF88BDFF93C2FE748AA34295FE3891FF
54A0FF60A7FEAFBBCE0000004F9FFF8ABFFE7BB5FF75B1FF70AFFF6DAEFF66AAFF5DA5FF
57A2FF519EFF4B9BFF4598FF4095FF3A92FF8CBFFE8E98A257A1FD69ABFE82B9FEB2D5FE
B5B5B50000005AA5FF89BCFD88BDFE8ABDFE8CBFFE8FC1FE92C2FE94C4FE96C4FE99C6FE
9DC8FEA1CAFEA5CCFEA9CFFEC7DFFC67676748739E3E5064505A64575A5A000000000000
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000
end
%%PageTrailer
%%Trailer
%%EOF
