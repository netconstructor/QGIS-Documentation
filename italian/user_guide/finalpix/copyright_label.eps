%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (copyright_label.eps)
%%CreationDate: (Sat Jan 24 07:56:28 2009)
%%BoundingBox: 0 0 25 25
%%HiResBoundingBox: 0 0 25.3164 25
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 25 25
userdict begin
DisplayImage
0 0
25.3164 25.3164
12.000000
32 32
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000000000000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000010203060F13030709020405060F12
061013020405030709061013010304000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000060E110711142253663C94B54EC2EE54D0FF52CBF952CAF854D0FF4FC3EF3D96B8
235669071216060F12000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000050D0F060E11327D9951C8F53C94B5
2253660A181D03080903080903080A03070909161B204E603A90B150C6F33583A1071115
050D10000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000050C0E1E4A5B4FC5F13582A0071115060F13000101000000000000ffffff
ffffff000000000000000000061013060E1131799450C6F3235669040B0D000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffff00000004090C2F748E4CBDE8
112A33050E11000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000060E110C1E2549B6DF34809D04090B000000ffffffffffffffffffffffff
ffffffffffffffffff000000040B0D3584A143A6CC07111503080Affffffffffffffffff
ffffffffffff000000000000000000000000000000000000ffffffffffffffffff020506
050D10409DC13A90B1040A0D000000ffffffffffffffffffffffffffffff000000050C0E
27617748B3DB050D10000000ffffffffffffffffff000000060E1103080A0813180F262F
15343F0E232B061013020506060F13000000000000ffffff000000050B0E45AAD12D6F88
050D0F000000ffffffffffffffffffffffff010303112B354FC3EF0A191F020506ffffff
ffffff000000050C0F0A191F34809D4DBFEA54D0FF54D0FF54D0FF54D0FF54D0FF50C7F4
398EAE14323E040B0Dffffffffffff0000000712164CBDE8173946030708ffffffffffff
ffffff00000004090C43A6CC23576B040B0Dffffffffffff000000040A0C27617753CEFD
54D0FF43A6CC245A6F14323D0712160A191F14333E23566A409DC1337E9A060F13ffffff
ffffffffffff03080A1C465647B1D9040A0D000000ffffffffffff0102031B435248B3DB
04090B000000ffffff000000050C0F2B6B8354D0FF52CAF827607504090C000000000000
000000000000000000020405060F13020405050D10ffffffffffffffffff000000040A0C
44A9CF215365030708ffffffffffff0610133C94B6225467030608ffffffffffff010202
132F3A54D0FF54D0FF1F4C5D040B0D000000ffffffffffffffffffffffffffffffffffff
ffffff000000000000ffffffffffffffffffffffff0102031D495941A1C5061013ffffff
00000003080A52CAF8071014000000ffffffffffff050D1042A4C954D0FF409FC3040A0D
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000040B0D52CCFA040B0D000000000000132E3945ABD2060E11
ffffffffffff000000050D1054D0FF54D0FF153440000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
060E1143A6CB1738440000000000001D4858398EAE071216ffffffffffff000000163743
54D0FF54D0FF071216000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff071114398DAD215265000000
000000276278317A95050E11ffffffffffff0000001F4D5F54D0FF52CAF8030608ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff050C0F3179942B6B830103040000002B6B832E718B04090B
ffffffffffff00000022556854D0FF4EC1ED040B0Dffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
03080A2E718B2E728C03090B0000002152653686A4071115ffffffffffff0000001A404F
54D0FF54D0FF04090B000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff060F133685A3255C71000000
0000001739463F9CBF071115ffffffffffff0000000C1F2654D0FF54D0FF0E2229000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff0610143E99BC1B435200000000000008131751C9F603080A
000000ffffff0000000307094EC1ED54D0FF2C6C84050D10ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
0307084FC3EF0B1B21000000ffffff050C0F46ADD4163743000000ffffffffffff050C0F
28637A54D0FF52CCFA0A191E000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000ffffffffffffffffffffffff000000122D374AB8E1040A0Cffffff
ffffff03080A2A6980398EAE050D0F000000ffffff00000004090C45AAD154D0FF42A3C8
061013050C0E000000ffffffffffffffffffffffff000000000000050E11030608ffffff
ffffffffffffffffff060E123583A1307792050D10ffffffffffff000000050B0E4FC4F0
102730010202ffffffffffff00000007111546AED554D0FF4FC5F1225467020607050C0F
081317081317060F13030708173845205062060F13ffffffffffffffffff0000000C1D23
50C7F4071115000000ffffffffffffffffff040A0C265E7343A6CC040A0D000000ffffff
ffffff01020204090C2D708A51C8F554D0FF54CFFE4AB7E03D96B83C94B646AED551C8F5
54CFFE2B6C84060F13ffffffffffff000000050C0E3F9CBF2C6C85050D10ffffffffffff
ffffffffffff00000004090B409EC23685A4040B0D000000ffffffffffff000000050C0F
040B0D1A404E2F7590388BAB3E99BB3788A72E738D1F4C5D050D11060E12020506ffffff
000000050C0F30779244A8CE040B0E000000ffffffffffffffffffffffffffffff000000
050D0F48B3DB2B6B83040A0D000000ffffffffffffffffff00000000000003080A060F12
061014060E11020405000000000000ffffffffffff000000050C0E255B704BBAE4071114
000000ffffffffffffffffffffffffffffffffffffffffff01030408151A47B1D93789A8
040A0C010102000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000040A0D327B974AB7E00B1B22030708ffffffffffffffffffffffff
ffffffffffffffffffffffffffffff010304040B0D3C94B646ADD414323E050C0F000000
000000ffffffffffffffffffffffffffffffffffff000000000000050D1010293242A4C9
409DC1050D10020506ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff00000004090B1F4D5F4CBCE63E9ABD193E4C04090C061013071115050B0E
040B0E07111506101303080A173A473B93B44DC0EB23566A04090B000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
03090B04090B255B6F409FC352CAF843A6CB3A90B0337E9A327D993A8FAF42A3C851C9F7
41A2C6265E74040A0C040A0C000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000020506060F12
04090B132F3A1D485828627828647A1E4A5A14303B040A0D060E11020607000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
