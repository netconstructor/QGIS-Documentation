%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionInOverview.eps)
%%CreationDate: (Sat Jan 24 07:56:23 2009)
%%BoundingBox: 0 0 101 101
%%HiResBoundingBox: 0 0 101.464 101
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 101 101
userdict begin
DisplayImage
0 0
101.464 101.464
12.000000
32 32
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff16581A16561Bffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
1B7D1C196E1Cffffffffffff185C1C1A641E1A68201A621Effffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff14511921981D22A01E1D811D20911F
2BA42735B22F36B4302DAB2A2189231B651Fffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff14581926AB1E2DB12444BD3C59C75269CE6271D26A6DD0665FCA58
4ABE432487261C6620ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff177219
2CB12348BF4065CC5D79D2735FB55F4294433D963F3F9F4250BF4B35AF321B651Fffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff134C181A7C1A2EAF274AC04264CC5C5CB959
17591Bffffffffffff195E1D1E70232AA8271C6B21ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff185F1Effffff
ffffffffffffffffff134D181456191B731C298E293CA838237B2617591Cffffffffffff
ffffff218A241F7723ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff1A611Effffffffffffffffffffffffffffff
ffffffffffffffffff16541A16591B17581Bffffffffffffffffff1B67201D7123ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0000001C6D211A661Affffffffffffffffff15581A15551B008000ffffffffffff
ffffffffffffffffffffffffffffff19601E1A621Effffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff000000000000218A251D6D20
ffffffffffffffffff185A1B1E891E1E8D1D1B771C145C1A164E1A00552Bffffffffffff
ffffff195F1D1A611Effffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff00000000000000000020852223962417601Bffffffffffffffffff
1D6E214ABE4345BD3D38B52F229E1C156218ffffffffffffffffffffffff000000303030
202020000000ffffffffffffffffffffffffffffffffffffffffffffffff000000000000
000000000000175D1A27AF1E2AA029298A2A237B2931883354AF5380D97970D16959C752
3DB636135718ffffffffffffffffffffffff313131303030131313000000ffffffffffff
000000020A0F020A10020A10020A0F020A0F01040601020402080C02080B06150827A125
46BE3E63CB5B7FD9789BE695AFEFA996E3907AD6735DC856319F2E15501Bffffffffffff
ffffff1E1E1E363636232323010101000000000000ffffff00000003111A1575B51779B9
187BBB104D740516211562921E86C7208ACA14557C1F7D802EA23051C14B69CE626DCD68
5ABB5741A0403393333FB8381C811Cffffffffffffffffff000000333333323232020202
000000000000000000ffffff000000010609187FC41E88CD1965970B1A23133E5A2386C3
2590D3259CE42083BE28A2EA299FDC248B8F238770258B932C9AC40C2B3B06160D1E8B1D
18661Bffffffffffff0000003636363C3C3C0B0B0B000000000000000000000000ffffff
ffffff02090C13496D1B588013263214232B1D4A661E4D6A215A7E2376A6258DCB29A3EA
2BA5EC2CA7ED2CA1E42C9FDF2FA4E52FA2E005121910401317531Affffffffffff2F2F2F
3F3F3F1F1F1F000000000000000000000000000000000000ffffff000000081C280A1D29
070A0D070D11080F13070A0D0A12161628331C42592478A82A92CF298BC2277BAB2777A4
2A7BA82C84B4277BA802080A000000ffffff222222424242323232010101000000000000
ffffff000000000000000000ffffff000000010406010507020305143D562166911E5A7F
112E3F0913180A0D0F172C38215471236081245F8121516B224F66224E6621506820516B
04080B000000464646454545070707000000000000ffffffffffffffffff000000ffffff
ffffffffffff02060902070A04080B2B8FCB33A4E833A5E935A7EA2D8AC0133244060A0C
0A1216091A220A171E040607060A0C06090A06090B101B2115262F0E11144848481A1A1A
000000000000000000ffffffffffffffffff000000ffffffffffff000000030303050C10
05080B2A8AC433A5E934A6E936A8EA37A9EB3193C90F2430010202020405050C0E193D50
276585286888235B771429340B11140F1315141617020202000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffff070707060707050A0D2984BB33A6E935A7EA
36A9EB37A7E8318ABC132E3C0613190812180A141841B2EF41B4F043B5F044B7F145B6EF
245168070C0D020303000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffff09090907090B04080A277DAE34A7EA36A8EA37AAEB37A3E23186B5122C3A
0B1F290B1A2208111541B2EE42B5F043B6F145B8F146B6ED3C93BD0B181E030709020305
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff0B0B0B080809
05070825719D35A8EA37A9EB38ABEB36A0DA3080AC122B371031440E222C080E113EADE7
43B5F044B7F146B8F245AEE13D88AE0D1B220A1E2728729503080A000000ffffffffffff
ffffffffffffffffffffffffffffffffffff0808080A0A0A0B0B0B215B7D3093CC3399D4
37A5E4379DD6307BA5102530184C68122B390A0E113CA4D944B6F145B8F247B9F245AEE0
3D89AE0D1A201D526D42BDF6215C77040A0D000000ffffffffffffffffffffffffffffff
ffffffffffff0A0A0A0C0C0C0E0E0E1B394A296C932A75A0308ABC3290C42C72970A1B24
20699117384A0C1011317EA743B1E845B7EF48B9F245ACDD3C87AA0B171D2A779B43BEF7
44BEF613344303080Bffffffffffffffffffffffffffffffffffffffffff131313101010
0C0C0C17222825516B24516A255C7C2764852357740A1C262A87B91D4B650F1315234F66
3991BE3D9FCF43ABDE43A6D53B84A60C191F2D81A944BFF745C0F843B7EA08161C010203
ffffffffffffffffffffffffffffffffffff0000001616160A0A0A1010101A313E1F3E4E
2041521E4155183C4E0A1E2831A2DE24668A1015191B313B2E6B88347A9C3889B03B93BB
387D9D0C1A20318AB345BFF846C1F848C2F93EA5D303090B000000ffffffffffffffffff
ffffffffffffffffff0000000909090505060A0E100A0D10080C0E080C0E080B0D0D2F3F
36B0F12E8CBE0F191E151E212951632E5C732F647D306D8A316B880D1B223493BD46C0F8
47C2F949C3F94AC5FA3589AE03080A000000ffffffffffffffffffffffffffffffffffff
000000020507113C5318567A164F6F174E6C1A57772F9AD536B1F137ADEA1D54700A0E10
1216181C292F24404D2C566A2F667F0B181E389BC847C1F848C3F949C4FA4BC6FA4CC7FB
26637C040A0D000000ffffffffffffffffffffffffffffffffffff00000006172030AAEE
31ACEF33ADF034AFF036B0F137B2F239B3F238AFEB2062800B1D260A0E100E1112101417
10191D0A161B41B3E747C2F949C4F94AC5FA4CC7FB4DC8FB4FC9FB16394704090Bffffff
ffffffffffffffffffffffffffffff0000000105072685BA2C97D12D98D22E9AD3309BD3
319DD4339DD5349FD535A0D53398C92A789E19445B0D25300A1C251F58703EAADA3FABDA
41ACDB42ADDB43AFDC44B0DC46B2DC43A8D0061013010203ffffffffffffffffffffffff
ffffffffffff030B0F02090C03090C03090C03090C03090C03090C03090C03090C03090C
03090C03090C03090C03090C030A0C030A0C040A0C040A0C040A0C040A0C040A0C040A0C
040A0D040A0D040A0D060F13
end
%%PageTrailer
%%Trailer
%%EOF
