%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionAddLayer.eps)
%%CreationDate: (Sat Jan 24 07:56:22 2009)
%%BoundingBox: 0 0 101 101
%%HiResBoundingBox: 0 0 101.471 101
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 101 101
userdict begin
DisplayImage
0 0
101.471 101.471
12.000000
31 31
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000030B030A1B0B
0E22111028120A1A0B051206000100ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0000000C1C0E1D5C22227B23258E2227932020901D1A791A113612
020E04000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000500153119206E24
287E232C84232F8B232F8F212E931F2D961C239619145F14061206000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0000000F2412216E272A76252A78233C893473AD6C73B16B62AB58
2E941E2D971C269818135D13030C03ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff061507215C28
2872282A74262A77255C9856F7F7F7F7F7F7C6DDC32F92202E951D2C961B1F96170C260D
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000143018256D2A2A70292A73272B75265C9657F7F7F7
F7F7F7C6DCC42F8F212E931F2D951D2B971A157415030E03ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
194620276C2B296E2A2A71292B73275D9558F7F7F7F7F7F7C6DBC42E8B222E90212E941F
2D961C1C8D18061707ffffffffffffffffffffffffffffffffffffffffffffffffffffff
0E39391A5A7B1E6D981F729A2075A1227BA60E3243215928276A2CD6E1D6F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F773B66A22961B0B1E0Dffffffffffff
ffffffffffffffffffffffffffffff144D691F6D99237DB12889C2288BC4288DC6298FC8
2992CA13455D215A2A26682CD6E0D6F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F775B56B23951D0E230F000000ffffffffffffffffffffffffffffff185475
267FB72785BF2787C12889C2288BC4288DC6298FC82992CA1E6E971B4E2226662CB6CAB7
D1DDD1D1DDD1DAE4DAF7F7F7F7F7F7EEF1EED1E0D0D1E1CFD2E2CF68AD5E218E1F091B0C
ffffffffffffffffffffffffffffffffffff123F502783BD2785BF2787C12889C2288BC4
288DC6298FC82992CA278DC2143A1B24642D27662C286A2B286C2B5C905CF7F7F7F7F7F7
C5D8C42A79232C7F232E87232D8C221E7921061407ffffffffffffffffffffffffffffff
ffffff1C5C801E6389206C992684BD2889C2288BC4288DC6298FC82992CA2994CC0B271B
235E2C27652C28682C296A2B5C8E5CF7F7F7F7F7F7C5D7C42A77252B79232D8223258823
19411C000300ffffffffffffffffffffffffffffffffffff1D61872786BF2683B71E6B93
1F6B931F6D961F6F972170981F72991F739B19618114381B23622D26662C28682C5B8D5D
F7F7F7F7F7F7C5D7C42B75262A7724287C231E6923071408ffffffffffffffffffffffff
ffffffffffffffffff1D61872786BF2889C2288BC4298EC72991CA2994CD2A97CF2A9AD2
2B9DD52BA0D711424F1C502524632C27662C28692B296C2B296E2A2A71292B7327277625
1E68240E2212000000ffffffffffffffffffffffffffffffffffffffffff1C60832786BF
2889C2288BC4298EC72991CA2994CD2A97CF2A9AD22B9DD52BA0D72CA3DA14506314391B
22612C25672C266A2C276D2B2570292370281D522409190C000000ffffffffffffffffff
ffffffffffffffffffffffffffffff154A602377A92889C2288BC4298EC72991CA2994CD
2A97CF2A9AD22B9DD52BA0D72CA3DA2CA6DD2487B20B2B1F122F1918411F1C4A2316341A
0D2210040F04000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
113E5021709F1E678F1E6C942788BE2991CA2994CD2A97CF2A9AD22B9DD52BA0D72CA3DA
2CA6DD2792BD217EA4227BA21C6B8D0E343F000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff1C60861D658B1E67902276A7206E99
206C941F6E9720719920739C20779D217AA1217BA4217BA3268CBB2280A8217CA22AA0CF
175D73ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff1D61872786BF2888C0237AAA1E6C94206E961F6F992071991F72991F749B
21769E2178A021799F217FA42BA4D62EAFE52EB2E7175D73ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff1D61872786BF2889C2
288BC4298EC72991CA2994CD2A97CF2A9AD22B9DD52BA0D72CA3DA2CA6DD2DA9DF2DACE2
2EAFE52EB2E7175D73ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff1C5B7F2786BF2889C2288BC4298EC72991CA2994CD2A97CF
2A9AD22B9DD52BA0D72CA3DA2CA6DD2DA9DF2DACE22EAFE52DADE114525Effffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff154B63
20719E2889C2288BC4298EC72991CA2994CD2A97CF2A9AD22B9DD52BA0D72CA3DA2CA6DD
2DA9DF2DACE22BA5D71D72900F3B42ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff1341552273A31E6A921E6D95227AA72991CA
2994CD2A97CF2A9AD22B9DD52BA0D72CA3DA2A9FD32284AA227DA22181A91E749416576A
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff1D62881F6D981E67901E6992206E991F6B931F6D971F719820739B1F769D2179A1
217BA42281AC2589B7217A9F207C9F2DAEE216596Cffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff1D62892786BF2889C2288AC2
247FB02070981F70992072991F749C20779F227AA3227DA5217CA32895C32DACE22EAFE5
2EB2E716596Cffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff1D62892786BF2889C2288BC4298EC72991CA2994CD2A97CF2A9AD2
2B9DD52BA0D72CA3DA2CA6DD2DA9DF2DACE22EAFE52EB2E716596Cffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1B5C7F2786BF
2889C2288BC4298EC72991CA2994CD2A97CF2A9AD22B9DD52BA0D72CA3DA2CA6DD2DA9DF
2DACE22EAFE52BA5D6134C5Affffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff1039491C62872888C0288BC4298EC72991CA2994CD
2A97CF2A9AD22B9DD52BA0D72CA3DA2CA6DD2DA9DF2DACE22898C6196278ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff020C0213455A1A5B7B1F6C932686B92992CB2A97CF2A9AD22B9DD52BA0D72B9ED3
2489B320799B1B67820E373Effffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff020C02
0821220D3139103E4C134A5D1347570F3C470D3339051611ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff
end
%%PageTrailer
%%Trailer
%%EOF
