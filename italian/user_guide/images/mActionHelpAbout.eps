%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionHelpAbout.eps)
%%CreationDate: (Sat Jan 24 07:56:23 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000200073E00073700000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff031800095000108100063200000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000F000847000F7F00
118C000E7800031B00000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff0E0E0B3B3B2F56564355553F4646321B35110B58010D71000E75000B6300
020F00000000ffffffffffffffffffffffffffffffffffffffffffffffff0404034E4E40
BABA93DEE0A485865F5D5E41BEC180C8CA853B70220C7A000D71000A5200010700ffffff
ffffffffffffffffffffffffffffffffffffffffff05050470705AEFEFB5F9FDAA91955E
080804000000545636B4D171299511107F01083501042400000200ffffffffffffffffff
ffffffffffffffffffffffffffffff565645F1F1B4F8FCA4DEE58E44462B000000ffffff
121B0B3186180F89003B7521545836050A03000100ffffffffffffffffffffffffffffff
ffffffffffff171712CACA98FAFEA8EFF799C7CE802021140000000002000741000E8900
23761095A25FCAD08230311F000000ffffffffffffffffffffffffffffffffffffffffff
555541F7F9AEF0F79AEFF799B4B97310110Affffff0422000F7F00178006708A45D9DF8B
ECF49774784A010100ffffffffffffffffffffffffffffffffffffffffff8C8C66FBFFA8
EDF598F0F89AA6AC6B090806010E000C66000E87003B6A22C8CC82EDF597EFF799A1A768
080805ffffffffffffffffffffffffffffffffffff0000009D9D6CF8FEA2EDF598F0F89A
A3A869070905084700118D00065300565B39F0F49CEDF598EFF79AB4BA740F100Affffff
ffffffffffffffffffffffffffffff0000009B9C67F6FD9FEDF598F0F89AA5AA6A0A2D04
0E81000D7000000D00626143F6FBA1EDF598EFF79AAFB5700E0E09ffffffffffffffffff
ffffffffffffffffffffffff7E8051F5FC9DEDF598EEF699BEC67A73995291C76991AA66
67664897976BF8FCA4EDF598EEF69991965E050503ffffffffffffffffffffffffffffff
ffffffffffff3F4229E3EB92EEF698EEF599DEE68F8098564E5E367B7D52E3E795F4F6A7
F3F99FEDF698E2EA91595D39000000ffffffffffffffffffffffffffffffffffffffffff
0B0B079DA265EEF699EEF699DAE38C3A59230005000F0F0AC5C980F4FB9DEEF598EDF598
B1B7721A1B11000000ffffffffffffffffffffffffffffffffffffffffffffffff2E2F1E
BEC77AECF498EAF396747B4B0000000F0F0BCACB89F3FA9DECF497CCD38347492E000000
ffffffffffffffffffffffffffffffffffff000100010B00042500094F003D8821ADC26E
E4EC92C8CF813537221E1E16D4D592F3FA9DDEE68E5A5D3A03030205050421211A020201
ffffffffffffffffffffffff0107000633000B5B000D6C000B6A00206210646E40A5AA6A
ACB170A6A779EAEDA2F0F89ADDE48E42442A0909076F6F59898A68030302ffffffffffff
ffffffffffff000000000200000400010B00073900084D000005000C0C08202115313220
C2C77DF2FA9BEAF296C5CA81B7B787DEE0A4494B32000000ffffffffffffffffffffffff
ffffffffffffffffffffffff052800084400000100ffffffffffff010000777B4DE1E890
ECF497F2F99CE0E59374774B070805000000ffffffffffffffffffffffffffffffffffff
ffffffffffff010D00052A00000000ffffffffffffffffff0C0C084D50327A7E4E7A7E4E
45482C090905000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
000100010700000000ffffffffffffffffffffffff000000000000000000000000000000
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
