%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionShowPluginManager.eps)
%%CreationDate: (Sat Jan 24 07:56:24 2009)
%%BoundingBox: 0 0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12.000000
16 16
0
0
7084D66C7FCE6373BBffffffffffffffffff5E58B15A52AE5B55ACffffffffffffffffff
ffffffffffffffffffffffff7B91E4798DD76169B9ffffffffffff5B53AF635DB57D7BC6
5A55AC524EA4ffffffffffffffffffffffffffffffffffff8097E98398DD6766BB5751A9
5C54AF8280C8BEC3EED0D8FD9CA0DC5450A648459Affffffffffffffffffffffffffffff
6B77CC6B73C38389D07473BFA9A8DDE2E8FEDEE6FED6DEFED5DDFEA0A6E1514FA1413F93
ffffffffffffffffffffffffffffff4D4DA06F72BEC3C4E9F0F6FEE2E7FEDCE2FED6DDFE
D1DAFED0DAFEABB2EB5959A73B3A8Dffffffffffffffffffffffff5550A8B8B6DEFBFDFE
EBEEFEE4E8FEDDE3FED7DEFED1DBFECCD6FECED7FEB3BDF35B5DA93D3D8Effffffffffff
544FA79996CCFEFEFEF3F6FEEBF0FEE6EBFEE1E4FEDAE0FED5DCFECFD7FEC6D3FECFDDFE
A4A9DB37378Bffffffffffff645FAFE8E8F3FEFEFEF3F6FEF0F2FEE9EDFEE2E7FEDCE2FE
D6DEFECEDAFED2C5C6F5BC74A9A1BB36378Fffffffffffff6160AFE8F1FEFCFCFEF7F8FE
F1F3FEEBEEFEE3E8FEDDE3FED7E1FEDDDBECF8A028FEA913C97620A66530ffffffffffff
5959A9C8D2FEE3E8FEF8F9FEF3F6FEECF1FEE7EBFEE0E7FEE8EEFEFDFCFBCF965CF1A623
FEBF2EFE8C00FE8500ffffff4443967275BDCBD3FBE9EEFEF5F6FEF0F3FEE8EDFEEDE6E8
F7F9FD99A0D82E3BAFD7730FFEAB1BFEC23AFE8E04FE8400ffffff38388B6A6DB5CFD5F8
EEF2FEF2F7FEF3C688FEAC2EC59369584770755256ffffffFE8300FEA318FE9E12FE8300
ffffffffffff39398C6567AED3D8F7FBFEFEFEAA35FEBC29F1A826E07808ffffffffffff
ffffffFE8300FE8400FE8600ffffffffffffffffff39398C5E5FA7BEC2E6857A9EE0800F
FECE40FEBC2BFE8500FE8500ffffffffffffffffffffffffffffffffffffffffffffffff
3A3A8E3C3B8E3139A2DA760FFE8B00FEC83FFEAB20FE8300ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffFE8500FE8904FE9208FE8600
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
