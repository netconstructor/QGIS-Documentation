%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (grass_add_raster.eps)
%%CreationDate: (Sat Jan 24 07:56:32 2009)
%%BoundingBox: 0 0 101 101
%%HiResBoundingBox: 0 0 101.471 101
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 101 101
userdict begin
DisplayImage
0 0
101.471 101.471
12.000000
31 31
0
0
ffffffffffffffffffffffffffffffffffff000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000040E04
0F23121639191B591E18521B102F130A1B0B010601ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff0000000A190C1B5120248223298A232D8F222C931F27951D
1E911A114012051004000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000D1F10
2067252778242B7E232D85232E8B232E90212E941F2D961C249718136514041105ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff0512062059262874272A76252A792386B480BFD8BC
BFD9BB65AD5B2E941E2D971B239717103E11010601ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
173A1D256F292A72282B74262A7725A9C7A5F7F7F7F7F7F77BB6742E92202E951D2C971A
1A8F16091A09000000000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000401215A29286D2A2A70292A73282A7526
A8C6A6F7F7F7F7F7F77BB4742E8F212E931F2D961C269719103E11000000010200030401
060A02030600ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff06190823612B38763983AA8484AB8284AD82CBDBCAF7F7F7F7F7F7B2D0AE86BB7F
86BD7F82BD792A961C1761170102010707020B12043D6615091003090E03ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff0B230F24662C4E834FF7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7ECF1EC2E951D1A791B041004
000000060B022B480F61A1210E1805070702ffffffffffffffffffffffff000000060A02
000000ffffffffffff081F0B23612C4D8250F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7ECF1EC2D93201B6D1D050B03060A020000000509025F9E2059941E
040701000000ffffffffffff101A051523070F1905000000ffffffffffff020C03235D2C
346F386F9A72709C71719D71C4D5C3F7F7F7F7F7F7A4C3A271A86C72AC6C6FAE672B9021
18501B0A100329440E080E03020401243C0C61A121325311050802ffffff0507021D300A
59931E0C1304ffffffffffffffffff0000001C502424642D27662C28692B2A6C2BA8C3A8
F7F7F7F7F7F779A8762A78232C80232E8723258C22132E1602030028440E0B1204000000
070C0361A1215F9E20060B020000000F1905609F212B480E000000ffffffffffffffffff
0000000C210E235E2D26652C28682C296A2BA8C2A8F7F7F7F7F7F779A6762A77252B7A23
2982231E64220718110A26350E180627410D000000090F035A951F61A1210B1204060A02
3A601361A1213C6315020300ffffffffffffffffff0000002E2818173F1D23622D26652C
28682B7CA47EB1C8B1B1C9B15D945C2A75262878242074230F24142A9CDD2FA8ED0B1A18
345712070B020406022F4E1061A121253D0C070C025F9E2061A121172708000000ffffff
000000000000ffffff0F110F504928183F1D23602C25662C28692B296C2B296E2A297129
2674272064251025151C6B962EA8EE2FAAEE237BAC243D0D0B1204000000131F0661A121
4D801A0A110361A1215F9E200E1705ffffffffffff080E03000000ffffff01060963583D
7F6A401027111D5225235E2B23652C23652A215D281A4620191C136A405422779C24799E
257A9D164658243D102B480F080D040A110361A12161A021101C0661A12161A121142007
ffffff050A02030501000000ffffff00000029400A43691041660F2A430A162A080F260D
1722114F25269A3C48E05868DF5867544E2A3A76223B77221A340F395F145F9E20111E06
0509025B971E61A121111D0661A12161A1211B2D090000000E1605132006ffffffffffff
0000001C2E084A75114C76124C76124C76124C76125B4D25E15968E15968E15968E15968
BA50573F60223B77221F3D11395F1461A121385E13070D02385C1361A121121D0661A121
61A121406A16080D03457218121F06ffffffffffffffffff0B1907426E0F4C76124C7612
4C76124C7612466C12AA4B4EE15968E15968E15968E159687F483C3A74212A54182C4A10
61A1215F9E200C16041A2C0961A121121E0661A12161A1215A951E1727085C991F101A06
ffffffffffffffffff0000002B450B44641344631344631344611444621461422CDF5669
DF5669DF5669DF5669DD55684C42302B5C2E182C0D61A12161A12114230A0A110361A121
131F0661A12161A12127410E4B7D19487719070C02ffffffffffffffffff00000012100C
B09257BA995DBC9C5EBF9E5FC19F608E7651BA5370DF5E7FDF5F7FE05F7FE05F7FB75876
3A8EC114302D61A12161A12139611B060902609F2113200761A1215B981F15230761A121
1F330A000000ffffffffffffffffffffffff020B107A6E4DC8A564C8A664C9A664C9A664
C9A665764F5DDF5F7FE05F7FE05F7FE05F7FE05F807C5977163D474C7E1A61A12161A121
040702568F1D13200761A1213557123A611461A1210F1805ffffffffffffffffffffffff
ffffff000000494534C8A664C9A664C9A664C9A665C9A6657B6952CC5876E05F7FE05F7F
E05F80E05F80DE5F7F42567116280F61A12161A121233A0C33531114210761A1211E320A
5F9E2057911E0C1404ffffffffffffffffffffffffffffff000000201D198872518B7553
8A74548A75538A75538A7554654852965162965163955262955262965262804D5D192823
4D801A61A12160A0211D310B17260861A121263E0D61A1212E4C10050B03ffffffffffff
ffffffffffffffffffffffff2525289585829D8B849D8B849D8B849D8B849D8B84928383
9F82879F83889F8388A08388A08388A083888F7E821D26155C991F61A121487818182A08
61A1215C991F61A1210D1605000000ffffffffffffffffffffffffffffffffffff080606
7A6E6D9D8B849D8B849D8B849D8B849D8B849C8A849581849F83889F8388A08388A08388
A083889F8387756D6F1E2B1361A02160A021192A0961A12161A1214B7D1A080E03ffffff
ffffffffffffffffffffffffffffffffffff0000004C43429C8B849D8B849D8B849D8B84
9D8B849D8B849282839F8387A08388A08388A08388A08388A083889B8286585757273F10
61A121263F0D61A12161A1211827092C292A000000ffffffffffffffffffffffffffffff
ffffffffffff1B1E216A5F508772588773578874588773578874577B6B54714D58915462
92546393546292536392546293546264525F17272546751833541161A1214D801B0B130C
39525F070D0F000000ffffffffffffffffffffffffffffffffffff010203525343C9A765
CAA765CAA765CAA765CAA765CAA76569555DE16080E16080E16080E16080E16180E26180
DF607E455975213B175B981F5D9A201D2F0C2053684FC9FC19404F040B0Effffffffffff
ffffffffffffffffffffffff0000001C1B14C7A361C9A562C9A562C9A562CAA562CAA662
917F56A8516BE05E7DE15E7DE15F7EE15F7EE15F7EE15F7EB557730B15113A6626101C0B
0000003382A348B7E446B1DB09161B020506ffffffffffffffffffffffffffffffffffff
030B0F211D13211D13201C121F1B121D1B121C19111B18112413172F151B2C141A291319
2612182411172111162010150A080A03060702050602050604090B040A0D040A0D040A0D
071014
end
%%PageTrailer
%%Trailer
%%EOF
