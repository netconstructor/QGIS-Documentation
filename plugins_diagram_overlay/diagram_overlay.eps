%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (diagram_overlay.eps)
%%CreationDate: (Tue Apr 28 23:39:47 2009)
%%BoundingBox: 0 0 25 25
%%HiResBoundingBox: 0 0 25.3164 25
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 25 25
userdict begin
DisplayImage
0 0
25.3164 25.3164
12.000000
32 32
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000000000000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000010203060F13030709020405060F12
061013020405030709061013010304000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000060E110711142253663C94B54EC2EE54D0FF52CBF952CAF854D0FF4FC3EF3D96B8
235669071216060F12000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000050D0F060E11327D9951C8F53C94B5
2253660A181D03080903080900000003070909161B204E603A90B150C6F33583A1071115
050D10000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000050C0E1E4A5B4FC5F13582A0071115060F13F30FE6F30FE6F30FE6000000
3F9CBF000000E8240AE8240A061013050D1031799450C6F3235669040B0D000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffff00000004090C2F748E4CBDE8
112A33050E11F30FE6F30FE6F30FE6F30FE6F30FE60000003F9CBF000000E8240AE8240A
E8240A76180C050D1006111549B6DF34809D04090B000000ffffffffffffffffffffffff
ffffffffffffffffff000000040B0D3584A143A6CC071115F30FE6F30FE6F30FE6F30FE6
F30FE6F30FE6F30FE61B435240A0C4000000E8240AE8240AE8240AE8240A76180D32110E
050D101C47573A90B1040A0D000000ffffffffffffffffffffffffffffff000000050C0E
27617748B3DB050D10F30FE6F30FE6F30FE6F30FE6F30FE6F30FE6F30FE6F30FE6061014
40A0C4061014E8240AE8240AE8240AE8240AE8240AE8240A050D10050C0F255B702D6F88
050D0F000000ffffffffffffffffffffffff010303112B354FC3EF0A191FF30FE6F30FE6
F30FE6F30FE6F30FE6F30FE6F30FE6F30FE6F30FE606101441A2C7061014E8240AE8240A
E8240AE8240AE8240AE8240AE8240AE8240A050D103E9ABD173946030708ffffffffffff
ffffff00000004090C43A6CC23576B040B0D09161BF30FE6F30FE6F30FE6F30FE6F30FE6
F30FE6F30FE6F30FE6112D3842A4CA000000E8240AE8240AE8240AE8240AE8240AE8240A
E8240AE8240AA91D0B07131747B1D9040A0D000000ffffffffffff0102031B435248B3DB
04090B3F9CBF307691060F12F30FE6F30FE6F30FE6F30FE6F30FE6F30FE6F30FE6215265
40A0C5000000E8240AE8240AE8240AE8240AE8240AE8240AE8240AE8240AD1210A040B0D
378AA9215365030708ffffffffffff0610133C94B62254670306080000003F9CBF3F9CBF
0C1E25000000F30FE6F30FE6F30FE6F30FE6F30FE60D202843A6CC000000E8240AE8240A
E8240AE8240AE8240AE8240AE8240AE8240AE8240AE8240A09181D41A1C5061013ffffff
00000003080A52CAF80710140CA4100CA410000000327C983F9CBF2E718B000000F30FE6
F30FE6F30FE6F30FE60000003F9CBF000000E8240AE8240AE8240AE8240AE8240AE8240A
E8240AE8240AE8240AE8240A040B0D52CCFA040B0D000000000000132E3945ABD2060E11
0CA4100CA4100CA4100CA4100C1E253F9CBF3F9CBF0C1E25F30FE6F30FE6F30FE6000000
3F9CBF000000E8240AE8240AE8240AE8240AE8240AE8240AE8240AE8240AE8240AE8240A
040B0D43A6CB1738440000000000001D4858398EAE0711150CA4100CA4100CA4100CA410
0CA4100000003F9CBF3F9CBF255C71000000F30FE60000003F9CBF000000E8240AE8240A
E8240AE8240AE8240AE8240AE8240AE8240AE8240AE8240A040B0D398DAD215265000000
000000276278317A950711150CA4100CA4100CA4100CA4100CA4100CA4100000001F4E5F
3F9CBF3F9CBF00000009161B3F9CBF000000E8240AE8240AE8240AE8240AE8240AE8240A
E8240AE8240AE8240AE8240A040B0D3179942B6B830103040000002B6B832E718B071115
0CA4100CA4100CA4100CA4100CA4100CA4100CA4100CA4100000003F9CBF3F9CBF317995
3F9CBF000000E8240AE8240AE8240AE8240AE8240AE8240AE8240AE8240AE8240AE8240A
040B0D2E718B2E728C03090B0000002152653686A40711150CA4100CA4100CA4100CA410
0CA4100CA4100CA4100CA4100CA4100000003D9ABC3F9CBF3F9CBF317894000000E8240A
E8240AE8240AE8240AE8240AE8240AE8240AE8240AE8240A040B0D3685A3255C71000000
0000001739463F9CBF0711150CA4100CA4100CA4100CA4100CA4100CA4100CA4100CA410
0CA4100CA4100000003B93B43E9BBD3B92B43F9CBF000000E8240AE8240AE8240AE8240A
E8240AE8240AE8240AE8240A040B0D3E99BC1B435200000000000008131751C9F6071115
0CA4100CA4100CA4100CA4100CA4100CA4100CA4100CA4100CA4100C1E253F9CBF307792
0000000000003F9CBF3F9CBF060F12E8240AE8240AE8240AE8240AE8240AE8240AE8240A
040B0D4FC3EF0B1B21000000ffffff050C0F46ADD41637430CA4100CA4100CA4100CA410
0CA4100CA4100CA4100CA4100C1E253B93B43077930000000000EB0000EB122D383686A5
3F9CBF0C1E25000000E8240AE8240AE8240AE8240AE8240A122D374AB8E1040A0Cffffff
ffffff03080A2A6980398EAE050D0F0CA4100CA4100CA4100CA4100CA410000000163643
3F9CBF3076910000000000EB0000EB0000EB0000EB040B0D0C1E253F9CBF30779209161B
E8240AE8240AE8240A060E123583A1307792050D10ffffffffffff000000050B0E4FC4F0
1027300CA4100CA4100CA4100CA4100000003584A23F9CBF0C1E2509161B0000EB0000EB
0000EB0000EB0000EB0000EB0000EB0C1E253F9CBF307691000000E8240AE8240A0C1D23
50C7F4071115000000ffffffffffffffffff040A0C265E7343A6CC040A0D0CA4100CA410
0000003F9CBF3685A40000000000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB
0000EB0000EB0000003B92B33F9CBF000000050C0E3F9CBF2C6C85050D10ffffffffffff
ffffffffffff00000004090B409EC23685A4040B0D0B1C223F9CBF3F9CBF0000000000EB
0000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB000000
3E9BBD050C0F30779244A8CE040B0E000000ffffffffffffffffffffffffffffff000000
050D0F48B3DB2B6B833E9BBE3E9ABD0000000000EB0000EB0000EB0000EB0000EB0000EB
0000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB000000255B704BBAE4071114
000000ffffffffffffffffffffffffffffffffffffffffff01030408151A47B1D93A93B4
040A0C0000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB
0000EB0000EB0000EB040A0D327B974AB7E00B1B22030708ffffffffffffffffffffffff
ffffffffffffffffffffffffffffff010304040B0D3C94B646ADD414323E050C0F0000EB
0000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB0000EB050D1010293242A4C9
409DC1050D10020506ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff00000004090B1F4D5F4CBCE63E9ABD193E4C04090C04090C04090C04090C
04090C04090C04090C04090C04090C3B93B44DC0EB23566A04090B000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
03090B04090B255B6F409FC352CAF843A6CB3A90B0337E9A327D993A8FAF42A3C851C9F7
41A2C6265E74040A0C040A0C000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000020506060F12
04090B132F3A1D485828627828647A1E4A5A14303B040A0D060E11020607000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
