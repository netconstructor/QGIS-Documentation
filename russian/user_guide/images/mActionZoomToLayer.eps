%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionZoomToLayer.eps)
%%CreationDate: (Sat Jan 24 07:56:26 2009)
%%BoundingBox: 0 0 26 26
%%HiResBoundingBox: 0 0 25.6424 26
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 26 26
userdict begin
DisplayImage
0 0
25.6424 25.6424
12.000000
33 33
0
0
ffffffffffffffffffffffffffffffffffffffffffffffff363636353538343638323637
323537313737555555ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff343636393C3F383B3E3A3E414B5157565E674145493B3E413D4042
45474A424242ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff31313B36393C
3A3D426F7E8D92A7BDACC5DEBFD5ECBBD3ECB6CFE8A3B8CF8C9CAD50565C44464956585A
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff343438383B3F4C535A9AAFC6D4E3F3EEF4FA
FBFDFEF8FAFDF2F7FBEBF2FAD6E5F4C0D6EDBAD0E775818D3E4144555859808080ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff393939383B3D626D79BFD3E9F6F9FDFFFFFFFAFCFDF5F8FCF0F5FAEAF1F9
E5EEF7DFE9F5D0E0F1C1D7EDC3D8EE9FAFBF4145487C7E7Fffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff363839
494F55B5CCE3F7FAFDFDFDFEF8FAFDF2F7FBEDF3FAE8F0F8E1ECF7CFE0F1C2D7EEC3D8EE
C4D9EEC6DAEFC7DBEF87929E42444799999Cffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff3336363A3D4097AAC0E8F0F8FAFCFD
F5F8FCF0F5FAEAF1F9E5EEF7DFEAF6C9DCEFC3D8EEC5D9EEC6DAEFC7DBEFC9DCEFCADDF0
CBDCEE5F666C5B5D5FBFBFBFffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff37383B646D79C3D8EEF7FAFDF2F6FBEDF3FAE7EFF8E2ECF6
DDE9F5CDDEF0C5D9EEC6DAEFC8DBEFC9DCEFCADDF0CCDEF0CDDFF1CFE0F1B1BECD3E4143
A8A8A8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff3B3D408291A0DCE8F5EFF5FAEAF1F9E5EEF7DFEAF6DAE7F4D0E0F2C6DAEFC8DBEF
C9DCEFCBDDF0CCDEF0CEDFF1CFE0F1D1E1F2D2E2F2D1DFEF434649919293B6B6B6ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff3737373A3D409FB1C4
E4EDF7E7EFF8E2ECF6DDE9F5D7E5F3D0E1F2C8DBEFC9DCF0CBDDF0CCDEF0CEDFF1CFE0F1
D1E1F2D2E2F2D3E3F2D5E4F3D6E5F362686D777879CACACAffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff3336363D4043BDD1E7E5EDF7DFEAF6DAE7F4
D5E3F3CEDFF1CADCF0CBDDF0CCDEF0CEDFF1CFE0F1D1E1F2D2E2F2D4E3F2D5E4F3D7E5F3
D8E6F4DAE7F4848B935B5E5FC9C9C9ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff3236393C3F43B4C6D7CBD5E1C5D2DFC0CFDDBBCADBB8C8DABAC9DA
BACADABBCADABCCADABCCBD9BDCBD9BECBD9BFCCD9BFCCD9C6D2DEDBE8F5DDE9F58A9198
57595CC8C8C8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
24242932343690A3B6B4C6D9AFC5D8AAC2D8AAC3D8AEC5DAB0C6DAB0C7DCB2C9DCB3CADE
B4CBDEB6CDDFB7CEE0B9CFE0BAD1E2BAC7D3CAD5DFE0EBF6696D73717274C8C8C8ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff00000034383B7B92A6
AED2EEAED1EFB0D2EFB2D4EFB3D5F0B5D6F0B6D7F1B8D9F1B9DAF1BBDBF2BCDCF3BEDDF3
BFDEF4C0DFF4C1DCEFBCC6CFD6DEE9484B4D8E8F8FC8C8C8ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff383B3D626F7BB0D3EFB2D4EFB3D5F0
B5D6F0B6D7F1B8D8F1B9D9F1BBDAF2BCDBF2BEDCF3BFDEF3C0DFF4C2E0F4C3E1F5C5E2F6
C3D9EAABB2B93D3F42AAABABC8C8C8ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff37393B373B3E9EBDD7B5D6F0B6D7F1B8D8F1B9D9F1BADAF2
BCDBF2BDDCF3BFDDF3C0DEF4C1DFF4C3E0F4C4E2F5C6E3F5C7E4F6C8E4F767757E46494B
C2C2C2FFFFFFffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0000004447494F6271B4D4EDB9D9F2BADAF2BBDBF2BDDCF3BEDDF3C0DEF4C1DFF4
C3E0F4C4E1F5C6E2F5C7E3F6C9E4F6CAE5F698B1C13F55628B9295757779ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff202325
3B464E728DA1BBDAF1BDDBF3BFDDF3C0DEF4C1DFF4C3E0F4C4E1F5C6E2F5C7E3F6C9E4F6
CAE5F7CCE6F7B7D1E1465D6A677D895B6F79464A4C3A3B38A27C4Dffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff0000003A42463B51605D7787
B1CDE4C1DEF4C2DFF4C4E1F5C5E2F5C6E3F6C8E4F6C9E5F7CBE6F7CCE7F793ABBA445A68
5268735165707C919C7E8E984D4D4D8C6D43FFA11Cffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff0000000104076893AE4C6270425A698EA8BAB7D2E5
C7E2F6C8E3F6C9E4F7CBE6F7C8E2F3AEC8D8667D8B3F5562647A86475B67758995BCD0DB
C5DAE45C686D876D34F99F1FFF9D21ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff02080C13547D51A8DC6982913C52603B5260485F6D667D8C738C9A
576E7C3F56633D54614F667295ABB84D626F607480A9BEC8B2C7D28295A1455861C6D18D
D5AD4EFDA11FFFA11Fffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000071E2D259FEA33A4E77FB2D08EA5B2798E9B617886596F7D6E8592859BA89EB3BF
ABC3CF7EBCDD386A87546875A0B4BF728691394B5798B160DAF3BCD7DBD6DBB353FFA21E
FFA01Effffffffffffffffffffffffffffffffffffffffffffffff0000000103042393D8
27A2EB29A3EB2DA6EC45ABE760B2E17AB8DB78B8DC60B5E349B1EB35AFEF35B0F13381AA
32435143546034454F97A357D6E35FD5E861DBEEC0D5D7D0E1B855FA9E1DFF9F1Dffffff
ffffffffffffffffffffffffffffffffffffffffff020A0F18649228A3EB2AA4EC2BA5EC
2CA7ED2EA8EE2FAAEE31ABEF32ADEF34AEF035AFF136B1F137A0D5394345515543B9B050
D8CE55D8D457D8D85AD8DC5DD9E6BAD5D6CFE6BB57F49A1CFFA21Cffffffffffffffffff
ffffffffffffffffffffffff0000000B2F4429A3EB2BA5EC2CA6ED2DA8ED2FA9EE30AAEE
32ACEF33ADF034AFF036B0F137B2F239B3F23C9AC653503786743BD9BD4EDBC450DAC852
D9CE55DAD258D8DCB1D9D8D2E9BB57ED961CFF9F1Bffffffffffffffffffffffffffffff
ffffff000000010406299FE62BA6EC2DA7ED2EA9EE30AAEE31ABEF32ADEF34AEF035B0F1
37B1F138B2F239B4F33BB5F33D9CC84F4D37836F39DAB348DCB94CDCBE4DDBC250DBC853
D7D1A8DFDED8E9B856E8921BF69A1Fffffffffffffffffffffffffffffffffffff02090E
1F75A82CA7ED2EA8ED2FA9EE30ABEF32ACEF33AEF035AFF036B0F137B2F239B3F23AB5F3
3CB6F43DB8F43D9DC84A4C377F6937DCA844DEAE47DDB449DDB84BDCBC4ED5C8A0E9E6E0
E5AE4BE28E1AF4991Cffffffffffffffffffffffffffffff01030411405B2DA7ED2EA9EE
30AAEE31ACEF33ADF034AEF035B0F137B1F138B3F23AB4F33BB6F33CB7F43EB8F53FBAF5
3E9FCB474A387D6838DCA443DFA643DFA844DFAE46DDAE45D5BA86EDBD55CE8118DC8A18
ffffffffffffffffffffffffffffff000000030C112EA7EC2FAAEE31ABEF32ACEF33AEF0
35AFF136B1F138B2F239B4F23AB5F33CB6F43DB8F43FB9F540BBF642BCF640A2CC424838
7A6638DDA443DFA643E0A643E0A643DC9D37BA7918B47115C67B13ffffffffffffffffff
ffffffffffffffffff02070A2587BD30AAEE31ACEF33ADF034AFF036B0F137B2F239B3F2
3AB4F33BB6F33DB7F43EB9F540BAF541BCF642BDF644BEF741A3CE3E4538766437DDA443
E0A643E0A743CC9A41835F2350360F000000ffffffffffffffffffffffffffffffffffff
02060917527331ABEF32ADEF34AEF035B0F137B1F138B2F239B4F33BB5F33CB7F43EB8F4
3FBAF540BBF642BCF643BEF745BFF746C1F841A4D03A4338736237D5A042A9843D6C6038
6C847316354103080Affffffffffffffffffffffffffffffffffff000000051117195677
1957781A57781B58781B59791C59791D5A791E5B7A1E5C7A1F5C7A205D7A205E7B215E7B
225F7B22607C23617C24617C2455692D2D1F382F1B45391D3B535128667E23586D000000
ffffffffffffffffffffffffffffffffffff000000010304010406010406010406010406
010406010406010406010406010406010406020406020406020406020506020506020506
020506020506060705100D05070905020506020506020506020506
end
%%PageTrailer
%%Trailer
%%EOF
