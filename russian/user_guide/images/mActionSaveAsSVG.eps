%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionSaveAsSVG.eps)
%%CreationDate: (Sat Jan 24 07:56:23 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
ffffffCDD1DDCFD3DECFD3DECFD3DECFD3DECFD3DECFD3DEC9CEDAC3C8D5C0C4D3B1B6C8
B1B6C8ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffCFD3DE
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFEFEF5F7FAF1F3F8EDEFF6CFD3DEDFE2EBB1B6C8
ffffffffffffffffffffffffffffffffffffffffffffffffffffffCFD3DEFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFDFEFEF8F9FBF3F5F9F0F1F8CFD3DEE6E8F0E7E9F1B1B6C8ffffff
ffffffffffffffffffffffffffffffffffffffffffCFD3DEFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFBFCFDF7F8FBF3F5F9CFD3DEF0F2F8FBFCFDDCDFE9B1B6C8ffffffffffff
ffffffffffffffffffffffffffffffCFD3DEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FBFCFDF8F9FBF3F5F9CFD3DEF8F9FBFFFFFFF6F8FAE7E9F1B1B6C8ffffffffffffffffff
ffffffffffffffffffCFD3DEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFCFDF9FAFC
F5F7FA8B90A28B90A28B90A28B90A28B90A28B90A28B90A2ffffffffffffffffffffffff
ffffffCFD3DEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFEFEFAFBFCF7F8FBEEF0F7
EEF0F7EBEDF4CFD2DEC9CDDAC8CCD9737784ffffffffffffffffffffffffffffffCFD3DE
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFEFEA0A0A00000FF0000FF0000FF0000FF
CDD1DDCCD0DCCACFDB737784ffffffffffffffffffffffffffffffCFD3DEFFFFFFFFFFFF
A0A0A000C00000C000FFFFFFFCFCFD0000FF00C00000C0000058C00058C00000FFD4D7E3
D3D6E2737784ffffffffffffffffffffffffffffffCFD3DEFFFFFFA0A0A0FF0000FF0000
FF0000FDFEFE0000FF0058C000C00000C000E0E3ECDBDEE80058C0D9DCE6D6DAE4737784
ffffffffffffffffffffffffffffffCFD3DEFFFFFFFF0000C00000C00000C00000FF0000
0000FF0058C000C00000C000E5E7F0E3E6EEE0E3ECDFE2EBDCDFE9737784ffffffffffff
ffffffffffffffffffCFD3DEFFFFFFFF0000C00000FFFFFF00C000C000000000FF0058C0
00C000E7E9F1E7E9F1E6E8F0E1E4EDE1E4EDDFE2EB737784ffffffffffffffffffffffff
ffffffCFD3DEFFFFFFFF0000C00000FDFEFE00C00000C0000000FF00C00000C000EBEDF4
0000FF0000FF0000FFE3E6EEE1E4ED737784ffffffffffffffffffffffffffffffCFD3DE
FFFFFFA0A0A0FF0000C0000000C00000C0000000FF00C00000C000EDEFF60058C00058C0
0000FFE5E7F0E5E7F0737784ffffffffffffffffffffffffffffffCFD3DEFFFFFFF7F8FB
A0A0A0FF0000C0000000C0000000FF00C000F1F2F8EDEFF6EBEDF40058C00000FFE6E8F0
E3E6EE737784ffffffffffffffffffffffffffffffCFD3DEFFFFFFF7F8FBF7F8FBF7F8FB
FF000000C00000C00000C0000058C00058C00058C00058C00000FFE7E9F1E5E7F0737784
ffffffffffffffffffffffffffffffCFD3DEFFFFFFF7F8FBF7F8FBF7F8FBFF000000C000
00C00000C0000000FF0000FF0000FF0000FFA0A0A0E7E9F1E5E7F0737784ffffffffffff
ffffffffffffffffffCFD3DEFFFFFFF7F8FBF7F8FBF7F8FBFF0000C0000000C000F1F3F8
F1F3F8EDEFF6EDEFF6EBEDF4E8EAF2E7E9F1E5E7F0737784ffffffffffffffffffffffff
ffffffCFD3DEFF0000F7F8FBF7F8FBF7F8FBFF0000C00000F3F5F9F1F3F8F1F3F8EDEFF6
EDEFF6EBEDF4E7E9F1E7E9F1E5E7F0737784ffffffffffffffffffffffffffffffCFD3DE
C00000FF0000FF0000FF0000C00000A0A0A0F1F3F8F1F3F8F1F2F8EDEFF6EBEDF4EAEDF3
E7E9F1E6E8F0E3E6EE737784ffffffffffffffffffffffffffffffCFD3DEFFFFFFC00000
C00000C00000A0A0A0F9FAFCF6F8FAF5F7FAF3F5F9F1F3F8F0F2F8EEF0F7EBEDF4EAEDF3
E7E9F1737784ffffffffffffffffffffffffffffffD2D6E0737784737784737784737784
737784737784737784737784737784737784737784737784737784737784737784737784
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
