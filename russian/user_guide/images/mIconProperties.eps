%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mIconProperties.eps)
%%CreationDate: (Sat Jan 24 07:56:26 2009)
%%BoundingBox: 0 0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12.000000
16 16
0
0
ffffffffffffA7A7B8AEAEBED7D7E0D5D5DDC2C2CEA8A8B89B9BAFffffffffffffffffff
ffffffffffffffffffffffffffffffffffffA0A0B2A4A4B7CECED7FEFEFEFEFEFEDCDCE2
9F9FB29696AAffffffffffffffffffffffffffffffffffff86869Effffffffffffffffff
8F8FA6C3C3CEFBFBFBFEFEFED0D0D88989A0ffffffffffffffffffffffffffffffffffff
86869E7D7D97ffffffffffffffffff8F8FA4EBEBEEFEFEFEEEEEF29595A9808098ffffff
ffffffffffffffffffffffffA2A2B59A9AAE6C6C87ffffff7C7C95CACAD5F8F8F9F7F7F9
EEEEF29999AC6F7291ffffffffffffffffffffffffffffffA8A8B8E7E7EB87879F6F6F8B
BFBFCBF1F1F5E9E9EEEDEDF2DBDBE27C7F9Bffffffffffffffffffffffffffffffffffff
818199E2E2E7D2D2DCBDBDCAE3E3E8E0E0E6E0E0E4E1E1E7C6C6D1707599B97727ffffff
ffffffffffffffffffffffff5656759B9BAEDEDEE4E1E1E7D8D8E1DADAE2D8D8E0BEBECB
B2B6CEB09E8FCC8B22CE8019ffffffffffffFEFEFEFEFEFEffffff4F4F6E808098AFAFBF
B9B9C8B3B3C2BCBCC9C3C6DABDAA9ACF8925E68208DA9217BF761BffffffC99A60E4D0B8
ffffffffffff40406249496A5656744B4B6D5D6186B3A196CF8B28E98606FD8606F38F0B
D59018B26B1Bffffffffffffffffffffffffffffffffffff3B3B60ffffff614943B2721C
F19C0DFEA310FEA310FEA210F8A410D28F19A66419ffffffffffffffffffffffffffffff
ffffffffffffffffffA25E17CF8918FEBC19FEBE1BFEB518FEA913FDA610CF87179E5D19
ffffffffffffffffffffffffffffffffffffffffffffffff935519C98819FECE20FEAC13
FE8907FE8506FC980BB26E16ffffffffffffffffffffffffffffffffffffffffffffffff
ffffff874C19C27F18FEA410FE9109FE8004FE9106BD7013ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff7C4318BB650FFE9F0DFE9808ED8108915216
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff753F18
994E10AB5A0D894914764118
end
%%PageTrailer
%%Trailer
%%EOF
