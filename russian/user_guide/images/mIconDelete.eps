%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mIconDelete.eps)
%%CreationDate: (Sat Jan 24 07:56:26 2009)
%%BoundingBox: 0 0 106 103
%%HiResBoundingBox: 0 0 106.466 103
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 106 103
userdict begin
DisplayImage
0 0
106.466 103.139
12.000000
32 31
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff0000000000000100000B01011702021E0303220303
2602022102021C01011601010D0000020000000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0000000300001103032C06064D05056E05058304049404049C03039703038C0202720202
4A0202250101130000040000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff0000000000000A03032407075607077E0808
8507078A06068F04049404049A04049D0303A20303A50202A70202A101015B0101200101
0E0000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0000000100001404043E08086A09097109097908087F07078607078B0606920404
9604049A03039F0303A20202A60202A80202AA0101960101340101110000020000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffff0000000100001D0505520808
6E0909A36666B58585B57F7F7C0B0B8107078706068E06069204049704049B03039F0303
A81010D18484D28585C45252A50101470101130000000000ffffffffffffffffffffffff
ffffffffffffffffffffffff0000001803035508087009096F0909954C4CF7F7F7F7F7F7
B278787C08088207078906068E06069404049804049D0303D49696F7F7F7F5F0F0B62A2A
AC0101A901013C0101100000000000ffffffffffffffffffffffffffffffffffff000000
0C01015207077208087109096F09096E0909C7A4A4F7F7F7F1EDED8828287F0808850707
8A06068F0404940404B14040F6F5F5F7F7F7CF7F7FA70202AA0101AC0101A201012C0101
0A0000000000ffffffffffffffffffffffffffffff010000390505720707740707720707
7009096F0909781C1CEDE6E6F7F7F7D3B8B87908087F07078607078B0606930B0BE8D2D2
F7F7F7E8CFCFA40808A60202A80202AA0101AD01017E0101170000020000ffffffffffff
ffffffffffff0000001602026506067707077507077308087107077009096F0909A26363
F7F7F7F7F7F7A461617A0808810707870606C58585F7F7F7F6F5F5B03C3C9F0303A30202
A70202A90202AB0101AC01013D01010E0000000000ffffffffffffffffff000000390404
7907077807077607077507077208087009096F09096F0909D3B9B9F7F7F7ECE4E47F1B1B
7C0808983333F4F2F2F7F7F7CE94949904049D0303A00303A40202A70202A90202AC0101
7B0101160101000000ffffffffffff0000000300006305057D06067A0606780707760707
7307077208087109096F0909812A2AF2EEEEF7F7F7C6A1A1770A0ADEC6C6F7F7F7ECDEDE
9511119404049904049D0303A20303A50202A80202AA0101A50101230101050000ffffff
ffffff0000001201017605057F06067D06067B06067807077507077307077207076F0909
6F0909AE7878F7F7F7F7F7F7CAA8A8F7F7F7F7F7F7AA53538B06069104049504049B0404
9E0303A20202A60202A80202AA01014301010E0000ffffffffffff0000001F01017C0505
8205057F06067C0606790606770707750707730808710707700909710C0CDECBCBF7F7F7
F7F7F7F7F7F7CFABAB8107078706068D06069204049704049B03039F0303A30202A70202
A902025601010F0000ffffffffffff0000002B02028305058405058105057E06067B0707
7806067607077407077208087009096F0909985151F7F7F7F7F7F7EFEAEA8220207C0808
8207078906068E06069304049704049D0303A00303A40202A70202620202130101000000
ffffff0000002F01018704048605058305058105057D06067A0606780707760707730707
720808710909CFB2B2F7F7F7F7F7F7F5F4F48A39397608087E08088407078A06068F0404
9404049904049D0303A10303A40202670202140101000000ffffff000000250101880303
8A04048705058305057F05057D06067A0606780707750707730707A05A5AF7F7F7F7F7F7
F1ECECF7F7F7DDCACA730C0C7908087F07078607078A06069104049504049B04049E0303
A202025B0202120101000000ffffff0000001901018903038D0404880404850505820505
7F06067C06067A06067707077D1616EBE2E2F7F7F7D3B8B8985151F7F7F7F7F7F7AC7676
7309097A08088007078607078D06069204049704049B03039F03034E0202100101ffffff
ffffff0000000400008503038F03038C04048904048405058105057E06067C0707790606
C69C9CF7F7F7F2EEEE832A2A6F0909CAA8A8F7F7F7F1ECEC7E26267509097C0808820707
8806068E06069304049704049C0303330303070000ffffffffffffffffff010000620202
9303038F03038B04048605058305058105057E06069A4444F6F6F6F7F7F7B27878720808
7009097B1F1FEEE8E8F7F7F7CFB3B36F09097608087D08088407078A06068F0404940404
800404210202000000ffffffffffffffffff0000002C01019203039203038E03038A0404
860505830606830D0DE5D4D4F7F7F7E1CCCC770B0B730707720707700909A56767F7F7F7
F7F7F79C5A5A7109097708087F08088507078A0606900404540404130202000000ffffff
ffffffffffff0000000300007801019503039103038D0303880404850505C08585F7F7F7
F6F4F4943939780707750707730808710707700909D6BDBDF7F7F7EAE1E1761818720909
7A08088007078607077D0505260404030000ffffffffffffffffffffffffffffff000000
2300009302029403038F03038B04049C3030F5F2F2F7F7F7C38F8F7C0707790606770707
740707730808720909852E2EF3F0F0F7F7F7C098986C09097409097B0808820707430505
100202000000ffffffffffffffffffffffffffffff0000000100004E0101940202930303
900505E0C4C4F7F7F7E9DADA8710107E06067B0606780707760707740707720808700909
B27F7FF7F7F7F6F5F58E41416F0909760808510707180404000000ffffffffffffffffff
ffffffffffffffffffffffff000000020000680101940303BE6D6DF7F7F7F7F7F7A84D4D
8306067F05057D06067A0606780707750707740707720707730E0EE0D0D0F7F7F7E0D0D0
700E0E5408081B0606020000000000ffffffffffffffffffffffffffffffffffffffffff
ffffff0000000500005C01019103039103038E03038804048505058205058006067C0606
7906067707077507077308087107077009096F09096D0909460808150606030000000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000010000
3E01018803038F03038B04048804048505058205057E06067C0707790606770707740707
730808720909620808390808140505010000000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff0000000000000D0000520202820303
8504048705058405058005057E06067B07077807077407076207074B0808230505080101
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff0000000100000800002B0101500303610404670505
6705055C06064C05053305051B0303070101000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000000000010000020000020000010000000000000000
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
