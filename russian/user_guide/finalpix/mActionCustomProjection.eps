%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionCustomProjection.eps)
%%CreationDate: (Sat Jan 24 07:56:22 2009)
%%BoundingBox: 0 0 22 25
%%HiResBoundingBox: 0 0 21.9973 25
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 25
userdict begin
DisplayImage
0 0
21.9973 24.9969
12.000000
22 25
0
0
ffffffffffffffffffffffffF8A900FCB300F58C00ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffF99D00FFCC8BFBBE65DD8900ffffffffffffffffffffffffffffffF1B200
F8C100E06B00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
F68D00FFE09CFFFBF3FDD96FE19B00ffffffE67200F7CE00FBED2CFEF03BFCD700743100
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffF17100FEDF7A
FFFAEAFFF8E0FDE477F5CA17FCE54EFFF98FFFFEACFFF66ADFB400000000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffE52300FDDB5AFFF9E1FFF7D6
FFF7CCFFF7C2FFF8B7FFFBADFFFEA3F8E620462600000000000000ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffF8AF00FEE55BFFF9D7FFF7CDFFF7C3FFF8B8
FFF9AEFFFCA4FFFC6FDAB700000000000000ffffffffffffffffffffffffffffffffffff
ffffffffffffF6AD00FBDD21FEF282FFFAD3FFF9CEFFF9C4FFF8B9FFF9AFFFFBA5FFFE7D
FEF30B794400000000000000ffffffffffffffffffffffffffffffffffffF78D00FCD105
FEF77AFFFED8FFFDD9FFFCCFFFFBC5FFFABAFFFBB0FFFCA6FFFE7BFFF80AFFEF00E3B700
000000ffffffffffffffffffffffffffffffffffffffffffFCBF00FFE514FFF89DFFFDCB
FFFED0FFFEC6FFFDBBFFFDB1FFFEA1FFFC4BFFF603FFF000FFE800FFE000DEA800000000
ffffffffffffffffffffffffffffffffffffF67D00D49500E0B500EECE01F8E224FDF54A
FFFB9EFFFA70FFF514FFF200FFED00FFE800FFE100FFD900FDCF00D89900000000ffffff
ffffffffffffffffffffffffffffff000000000000000000000000D7A900FFEC03FFEC00
FFEB00FDE200F0C602DBAF00F6C400FCC900FFC800FDBE00AE6500330000FF0000ffffff
ffffffffffffffffffffffffffffffffffffffffffEB7300FDDB00FFE100FFE000F1C303
F1E7D33333330B0909642E00AA6500BC7506603F185A5225EBEB75FFFF7FFFFF00ffffff
ffffffffffffffffffffffffffffffffffffFCC800FFD600FDD000D29500BDBDBD8E8E8E
2626242222117F7F3FEADD71E6DB72E4D770FEF07DFFF07FFFFF7FFFFF00ffffffffffff
ffffffffffffffffffffffffFBBA00FFCB00EDAC000000005B5B5BFAFAF951514D444027
C0B55FF3E87AFCEF7FFCF17EFFEF7BFFF17AFFED72FFBF3Fffffffffffffffffffffffff
ffffffffffffF9A800FCB800905700090900666619B9B9B5ADAC9F666344D7CB6DE6DB75
FCF07EFBEB75FCE766FCE459FFE24FFFD455ffffffffffffffffffffffffffffffffffff
EC6200DB6C001B12097F7F3AF6EE778D8B66FBF9E18C88698C864CC7BE63EBD766FADD48
FFD832FCD325FED41CFFBF00ffffffffffffffffffffffffffffffffffffffffffFFFF55
B0A657F5EB7AFFF27FFFF281C3C0A4BAB8A65F5D4C91893EC4AD35FCD322FCCE16FCCC0B
FFCA05FFD400ffffffffffffffffffffffffffffffffffffFFFF7FFFE57FFFF17DFCF17E
FCF17FFBF07D8B8661F8F6EC858374736934D8B82AF5CC1FFFD119FECE13FFC600FF7F00
ffffffffffffffffffffffffffffffFFFF7FFFF07FFAF17FFCF17FFCF17FFFF37FFFF379
FFEC73BAB79FC0BD9E948B57D8B526D8B21AFFD31DFFD415FFFF00ffffffffffffffffff
ffffffffffffffffffFFFF66FFF182FCEF7FFCF180FFF17FFFEC78FEE55DFFE357BBAE5E
F6F1CCA59F7B716530826C0A756113FFFF00ffffffffffffffffffffffffffffffffffff
ffffffFFFF7FFFEE7FFFF17DFDEF79FCEB74FCE661FDDF47FCD93BFBE14DB4B198B2AFA3
74736D150E00000000ffffffffffffffffffffffffffffffffffffffffffffffffFFFF7F
FFEF7BFFEC6FFDE560FDE355FDDE48FCD731FFD324FFDF2F5A5A46E8E8E69191913E3E3E
000000000000ffffffffffffffffffffffffffffffffffffffffffFFFF00FFDA5BFEDD48
FFD833FCD42CFCD326FFCF1BFFCC0AFFCC00ffffff9C9C9C999999818181000000000000
ffffffffffffffffffffffffffffffffffffffffffffffffFFAA00FFCF0FFFCA0DF9CC0A
FFCE0DFFCF00FFFF00ffffffffffff373737A9A9A99595954B4B4B000000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffFFFF00FFCC00FFD400FFBF00FFFF00
ffffffffffffffffffffffff4D4D4D7575758A8A8A000000000000000000
end
%%PageTrailer
%%Trailer
%%EOF
