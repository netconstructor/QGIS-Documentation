%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionEditPaste.eps)
%%CreationDate: (Sat Jan 24 07:56:22 2009)
%%BoundingBox: 0 0 24 24
%%HiResBoundingBox: 0 0 24 24
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 24 24
userdict begin
DisplayImage
0 0
24 24
12.000000
24 24
0
0
ffffffffffffffffffffffffffffffffffffffffffffffff6484B66484B61F3A78000000
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffEEAE37EEAE37EEAE37EEAE37EEAE37EEAE376484B6FEFEFFFEFEFFFEFEFF1F3A78
EEAE37EEAE37EEAE37EEAE37000000000000ffffffffffffffffffffffffffffffffffff
EEAE37F3E3C1F3DE9FF3DE9FF3DE9FF3DE9F6484B6D1DCECD1DCECCFDCEDD1DCECCFDCEC
1F3A78D39827D39827D39827D39827792D00000000000000ffffffffffffffffffffffff
EEAE37F3E3C1F3EDD7F3E6B6F3E6B66484B692ABD092ABD092ABD091ABD092ABD092ABD0
92ACD01F3A78F39A0DF37900F36200792D00000000000000ffffffffffffffffffffffff
EEAE37F3E3C1F3F0D9F3E0AFF3E0AF1F3A781F3A781F3A781F3A781F3A781F3A781F3A78
1F3A781F3A78F37900F36200F35D00792D00000000000000ffffffffffffffffffffffff
EEAE37F3E3C1F3F0D2F3E0AFF3E0AFF3DEA5F3DE96F3D88AF3CF77F3C25DEEB442EEA82D
EE9D17EE8100EE6A00EE6500EE6100772C00000000000000ffffffffffffffffffffffff
EEAE37F3E3C1F3E6C7F3E3AFF3E3AFF3DEA5F3DA9AF3D88DF3CF7BEEC261D8A640D4921E
D47900D46C00D46500D46200D464006C2800000000000000ffffffffffffffffffffffff
EEAE37F3E3C1F3E6C1F3DEABF3DEABF3E0A5F3D894F3CF7BF3C967EEB94DD496248BB8FE
8BB8FE8BB8FE8BB8FE8BB8FE8BB8FE8BB8FE8BB8FE000000ffffffffffffffffffffffff
EEAE37F3E3C1F3E6BEF3DE9FF3DE9FF3D587F3CF74F3CC6DF3C057EEAC2DD48A0F8BB8FE
F5F9FEF2F6FEE6EFFED7E5FECBDEFEBFD6FE8BB8FE0077EF000000ffffffffffffffffff
EEAE37F3E3C1F3E0A1F3D287F3D287F3D284F3D27EF3C25AF3AB2EEE9D17D4860B8BB8FE
F5F9FE92C2F88CBDF883B6F87DB2F8C6DBFE8BB8FE92BCFE0077EF000000ffffffffffff
EEAE37F3E3C1F3DE9FF3D890F3D890F3D28AF3C25AF3B232F3A823EEA01DD48E168BB8FE
F5F9FEF1F6FEECF2FEE0ECFED7E6FED0E0FE0077EF0077EF0077EF0077EF000000ffffff
EEAE37F3E3C1F3DEA1F3DA96F3DA96F3CC6DF3B83EF3B237F3AF2DEEA522D4921B8BB8FE
F5F9FE91C2F88DBDF888BBF883B6F8D1E2FEBDD6FE87B5FE81B3FE0077EF000000ffffff
EEAE37F3E3C1F3DEA7F3D284F3D284F3BD4FF3B83FF3B63AF3B532EEAC29D4921E8BB8FE
F5F9FEF1F5FEECF2FEE4EEFEDDE9FED3E3FEAACAFE90BBFE8FBAFE0077EF000000ffffff
EEAE37F3E3C1F3DEA7F3CC70F3CC70F3BB4AF3B843F3B63AF3AF32EEAC2CD494218BB8FE
F5F9FE8EBEF888BAF882B6F879AEF870A6F8679EF8629CF8A4C7FE0077EF000000ffffff
EEAE37F3E3C1F3DEA5F3C05DF3C05DF3BD4AF3B945F3B83EF3B237EEAC2DD495258BB8FE
F5F9FEE7F0FEE5EEFEC9DDFEBDD6FEB8D2FEB2CEFEAACAFEACCCFE0077EF000000ffffff
EEAE37F3E3C1F3DA9AF3BC52F3BC52F3BB48F3B945F3B53CF3B237EEAC2DD495258BB8FE
F5F9FE8DBEF87DB0F878ACF876ACF874AAF870A7F86BA3F8B6D1FE0077EF000000ffffff
EEAE37F3E3C1F3D890F3BB4AF3BB4AF3B945F3B83FF3B238F3AF32EEAC2CD495228BB8FE
F5F9FEE6EFFED1E1FECBDCFEC7DBFEC4DAFEBDD5FEB4CFFEB9D3FE0077EF000000ffffff
EEAE37F3E3C1F3CF7BF3BD4AF3BD4AF3BB48F3B83FF3B83AF3B232EEAC2CD494218BB8FE
F5F9FE81B5F87EB2F87AAFF879ADF877ACF872A8F86DA5F8BAD5FE0077EF000000ffffff
EEAE37F3E3C1F3D89FF3D89FF3CF81F3CF81F3C977F3C974F3C970EEBF65D4AA558BB8FE
F5F9FED4E4FED1E1FECBDEFEC8DBFEC6DBFEBDD6FEB6D1FEBAD5FE0077EF000000ffffff
000000792D00792D00792D00792D00792D00792D00792D00792D00772C006C28008BB8FE
F5F9FED4E3FED1E1FECBDDFEC8DBFEC5DAFEBDD6FEB6D0FEB9D3FE0077EF000000ffffff
0000000000000000000000000000000000000000000000000000000000000000000077EF
0077EF0077EF0077EF0077EF0077EF0077EF0077EF0077EF0077EF0077EF000000ffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
000000000000000000000000000000000000000000000000000000000000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

end
%%PageTrailer
%%Trailer
%%EOF
