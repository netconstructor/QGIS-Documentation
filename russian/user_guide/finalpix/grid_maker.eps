%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (grid_maker.eps)
%%CreationDate: (Sat Jan 24 07:56:34 2009)
%%BoundingBox: 0 0 25 25
%%HiResBoundingBox: 0 0 25.3164 25
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 25 25
userdict begin
DisplayImage
0 0
25.3164 25.3164
12.000000
32 32
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
34344258585C6363666A6A6D6B6B7068686C5A5A5D46464F000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff00000037374667676A66667057576353536053535E585863
58596352525E53535E5555606666706D6D724C4C52000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff161616
6363665E5E69575762606974598DA253BBE551C9F748B2DC47B1DA4EC0EC53C2EC5699B4
5F6D785858635959656969703F3F48000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff00000052525263636E58586260778551C0EB52CCFA
4EC1ED265E730D212802040502050603080A23576B4DC0EB53CDFB51C8F6588396575862
5D5D68636367000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
0000005C5C5F5E5E6862657051B6DD53CEFC54D0FF3787A608131709161B24596D2B6B83
2A68803583A0060E11040B0D28647A50C5F253CEFD52C4EF5B6C7858586469696E000000
ffffffffffffffffffffffffffffffffffffffffff0000005A5A5F575762616D7951C7F3
54D0FF46AFD61739460A181D3583A108141851C8F52C6E872A688054D0FF102932337E9B
1738450B1B21409EC254D0FF52CCFA597E9055556167676C000000ffffffffffffffffff
ffffffffffffffffff4E4E525B5B65636F7952CBF954D0FF34809D020506173A4750C7F4
2B6B83265E7354D0FF2C6E872A688054D0FF3788A7193E4C54D0FF2B6B83010304286379
52CCFA53CEFC588397565661646469000000ffffffffffffffffffffffff1E1E1E60606B
64687251C7F254CFFE2863790711150A191F52CAF853CDFB0A181D49B4DD54D0FF2C6D86
2A698154D0FF53CEFC0B1C2246AFD654D0FF173A470B1C22112B354BB9E353CDFB5C717E
5C5C67525258ffffffffffffffffff0000005F5F6158586453B5DC51C9F71C46560E242C
193E4C3789A854D0FF388BAA193E4C54D0FF54D0FF2C6D862A698154D0FF54D0FF307893
21516354D0FF4BBAE40B1C22215265081317409FC351C8F55C5D676C6C73000000ffffff
ffffff3A3A475C5C676479864CBDE7132E391739463E9ABD132E3954D0FF54D0FF1B4251
2C6D86265D72122D37050B0E060F121F4D5E43A5CA50C6F3060F1251C9F654D0FF2F758F
22556834809D040B0D327B965695B05656625F5F63ffffff0000005F5F615858643E91B2
09171C22536653CDFB1B42513E9ABD52CCFA3583A00103040D21282D708941A1C529647B
265D722F75900D1F26112B35102730398CAC54D0FF53CEFC0F262E47B1D942A3C8081317
1F4C5D5C5F696C6C7300000000000061616A666E781F4D5E14323D54D0FF4DBEE90D1F26
2C6E8709171C13303B10273054D0FF54D0FF54D0FF2C6C852B6A8254D0FF54CFFE3E99BB
1028310307092761774AB7E034819E23576B54D0FF337E9B112B355B7D8E5D5D680B0B27
343442565662608FA424586D29657C54D0FF215264060F131E4A5B49B6DF265F742D718A
54D0FF54D0FF54D0FF2C6C852B6A8254D0FF54D0FF54D0FF4DBFEA07111528647A09151A
1B445309171C4FC4F03E99BB0E232B53B3D951515D5F5F6358585B4F4F5B52B9E11E495A
29667D1A404E0307083789A854D0FF54D0FF132F3A44A7CD54D0FF54D0FF54D0FF2B6C84
2B6B8354D0FF54D0FF54D0FF54D0FF132E3944A8CE52CAF82E738D04090B14313C3E99BB
08141851C9F85758626A6A705B5B5E52525E51C7F5122C36050B0E2F748E09171C54D0FF
54D0FF54D0FF0F262F49B5DE54D0FF54D0FF54D0FF2B6C842B6B8354D0FF54D0FF54D0FF
54D0FF1B42513E9ABD54D0FF54D0FF388BAA102932060F1302040552CBF95C5F686A6A72
5E5E6159596451C9F80A181D163744225568040A0C23566A23576B23576B050D10204F61
24596D245A6E255B6F132E39132F3A255C71255C71265D72265D720E21291B4251265F74
275F751F4D5E0D1F262253660000004EC3EF5F66706B6B745E5E5F5A5B6651C9F80A181E
1D4757275F7507101429667D29657C29657C050B0E255B7028647A28637928627814333E
14333E276076276076275F75275F750F262F193E4C265E73265D7220506209171C215265
0000004DC0EB6067726A6A735C5C5E53535E51C8F5153440050C0F2E728C0B1C224CBCE6
54D0FF54D0FF0E212949B4DD54D0FF54D0FF54D0FF2B6B832B6C8454D0FF54D0FF54D0FF
54D0FF1D4959388BAA54D0FF54D0FF317A9514323D060F12040B0D52CBF95D606A6B6B72
58585B50505C52BBE3265E732255681D485807101420506254D0FF54D0FF255B70317A95
54D0FF54D0FF54D0FF2B6B832B6C8454D0FF54D0FF54D0FF52CBF90711154EC2EE53CEFC
337E9B0204051A404E327D99122C3651C9F859596369696E3E3E4954545F6095AC327B96
1A415054D0FF398CAC030708193E4C44A9CF3E9ABD183B4854D0FF54D0FF54D0FF2B6A82
2C6C8554D0FF54D0FF54D0FF3C94B51534402B6A820A181E132F3A14333E54D0FF2F748E
1E495A54B8E052525E5E5E610000005F606969727E3C95B60B1C2254D0FF54D0FF173845
2862780D212813303B050B0E4FC3EF54D0FF54D0FF2B6A822C6C8554D0FF54CFFE3E99BC
0B1A20050C0F265F7448B2DA1C45553D96B854D0FF23576B2A667E5B84955A5A641B1B32
0000005D5D5F5C5C6848ABD20307082B6A8254D0FF388AA920506254CFFE3D97B9081419
060F13265F743A8FAF24586C23566A2E738D0D1F2614313C050B0E4BBBE554D0FF4BBBE5
0E232B54CFFE4BB9E30A181E3077925F636D686870000000ffffff43434C58586267818F
47B0D80C1D2322536651C9F60B1A204FC5F154D0FF3583A11C45552F758F1C455409151A
0A191F245A6E46AED53D98BA16374354D0FF54D0FF28647A30769142A2C7081419275F75
559DB95555615C5C60ffffffffffff0000005C5C605D5D6851BCE54DBFEA122C36193F4D
255C712E738D54D0FF4DC0EB09151A54CFFE54D0FF2A69812C6D8654D0FF54D0FF225366
327B9754D0FF4EC1EC0A191F337E9A050C0F3583A151C9F761646E676770000000ffffff
ffffffffffff2626265D5D666C727D52CAF851C8F51A404E1029320B1B2153CEFC54D0FF
132F3A42A4C954D0FF2A69812C6D8654D0FF53CEFC0814184CBDE854D0FF265E73122E38
08141841A2C653CEFC5F7D8B59596455555Affffffffffffffffffffffffffffff505053
585863667A8752CCFA53CEFC23566904090B29667D54D0FF2C6D8629657C54D0FF2A6880
2C6E8754D0FF3F9BBE15333F54D0FF3F9DC00204051637434CBCE653CEFD5A90A7575763
616166000000ffffffffffffffffffffffffffffff00000058585D555561657A8752CAF7
54D0FF307691060F12204E6041A0C410273054D0FF2A68802C6E8754D0FF23566A307691
2F7590040B0D23576B54CFFE53CDFB5B8CA1585864636369000000ffffffffffffffffff
ffffffffffffffffffffffff00000059595B5757616A707A52BDE753CEFD4DC0EB1E4A5B
0814180711154AB8E12A68802C6E8753CDFB060E110B1A200F252D44A8CE54CFFE51C8F4
5E7683555560636369000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0000005252555A5B645A5A65627F8F51C5F053CDFB3C95B709161B081317183B48
193E4C0E2129060F133685A352CCFA51C9F75990A65F5F695757615E5E61000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000343434
5D5D615555605C5C676775805B9CB551C6F441A2C72A677E29657C337F9D4FC5F256A7C6
647B885F606A52525D6161694A4A4F000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff00000047474F5E5E625C5C65
50505C52525F5B5B6660616C60626C5C5C6755556052525E5B5C65616167515155000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff0000000000004A4A515B5B5D5B5B5D5E5E64
5F5F665D5D6159595B545459000000000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
