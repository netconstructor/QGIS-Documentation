%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionNewVectorLayer.eps)
%%CreationDate: (Sat Jan 24 07:56:23 2009)
%%BoundingBox: 0 0 101 101
%%HiResBoundingBox: 0 0 101.464 101
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 101 101
userdict begin
DisplayImage
0 0
101.464 101.464
12.000000
32 32
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffF8A70AF8A70AF8A70Affffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffF8A70A
F8A70AF8A70AF8A70Affffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffF8A70AF8A70AF8A70AF8A70Affffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffF8A70AF8A70AF9B808F9AF09F8A70AF8A70Affffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffF8A70AF8A70A
FCD205FDDF03F8A70AF8A70Affffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffF8A70AF8A70AFDE802FFFD00FABD07F8A70A
F8A70Affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffF8A70AF8AA0AFFFB00FFFD00FEEE02F8A80AF8A70AF8A70AF8A70AF8A70A
F8A70AF8A70AF8A70AF8A70AF8A70Affffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffF8A70AF8A70AF8A70AFABE07
FFFD00FFFD00FFFD00FCD205F8A70AF8A70AF8A70AF8A80AF8AB0AF8AA0AF8A70AF8A70A
F8A70Affffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
F8A70AF8A70AF8A70AF8A70AF8A70AF8A70AF8A70AFDDF03FFFD00FFFD00FFFD00FFFD00
FEF601FEF701FFFA00FFFD00FEF601F9B009F8A70AF8A70Affffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffF8A70AF8A70AF8A70AF8A70AF8A90A
FABE07FCD704FEF101FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00
FABF07F8A70AF8A70Affffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffF8A70AF8A70AF8A70AFCD605FFF901FFFD00FFFD00FFFD00FFFD00
FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FCD405F8A70AF8A70AF8A70Affffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffF8A70A
F8A70AF8A70AF8AC09FDE003FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00
FFFD00FFFD00FDE802F8A80AF8A70AF8A70Affffffffffffffffffffffffffffffffffff
020A0F020A0F02090E02090D02080D02080C02070B01070A0106096D4C09F2A40AF8A70A
FBC906FFFA00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00F9B608F8A70A
F8A70Affffffffffffffffffffffffffffffffffffffffff000203072A41167BBD5FAA84
469B9D1B85C81D88CC1E8BCF208FD32292D74999B4D7A52CF8A70AF9B509FEF301FFFD00
FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00F9B808F8A70AF8A70Affffffffffffffffff
ffffffffffffffffffffffff00000002090E279AD9EAFE0FEDFF0CB4E3494EB2B8239DE9
249FE926A0EA27A2EB31A3E2ACA65DF8A70AFBCE05FFFD00FFFD00FFFD00FFFD00FFFD00
FFFD00FFFD00FCD505F8A70AF8A70Affffffffffffffffffffffffffffffffffffffffff
ffffff02090D1775B350B1B2B9E544EDFF0CECFF0D99D76830A4DE27A1EA28A2EB2CA5EA
77B296F8A70AFBCE05FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FEF201F8A70A
F8A70Affffffffffffffffffffffffffffffffffffffffffffffff0105070D44681F99E7
209AE854B4B3CAEE32EDFF0CACE05528A2EB29A3EB46B1CEF0E50BF8A70AFCD205FFFD00
FFFD00FFFB00FCD605FCD704FFF701FFFD00FFFD00F9B908F8A70AF8A70Affffffffffff
ffffffffffffffffffffffffffffff000000031019209AE7219BE8239DE928A0E4CFF02E
E8FD1234A8DE2AA4EC2BA6ECCACF38F8A70AFCD605FFFD00FEF601FABB08F8A70AF8A70A
F8A90AFBC706FEEB02FCD704F8A70AF8A70Affffffffffffffffffffffffffffffffffff
ffffff00000001060A1C82C3229CE8249EE9259FEA97D66DEDFF0C56B9B92BA5EC2CA7ED
90B17EF8A70AFCDA04FEF002F8B30AF8A70ABAAA5498AD7EE19D12F8A70AF8A70AF9B109
F8A70AF8A70Affffffffffffffffffffffffffffffffffffffffffffffff02070B115179
239DE9249FE926A0EA84CE81EDFF0C68C2A42CA6ED2DA7ED8DAC83F8A70AFBC906F8AC0A
F8A70A9FAB7438B2F139B3F246B6DC5B5022D28E0AF8A70AF8A70AF8A70AF8A70Affffff
ffffffffffffffffffffffffffffffffffff000000061A27249EE9259FEA27A1EA93D572
EDFF0C5BBBB52DA7ED2EA8EEB1B858F8A70AF8A70AF6A80CA6BC695BC1C342B7E6B6E853
EBFE0E8DCF7A040D125A3C04F8A70AF8A70AF8A70Affffffffffffffffffffffffffffff
ffffffffffff000000010407218FD126A0EA28A2EB7DCB8BEDFF0C92D5762DA8ED2FA9EE
A0AD6EF8A70AF7AC0BF0E70BEDFF0CEDFF0CEDFF0CE9FE117ED29D43BBEB3190BE03080A
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02090E
165E8A27A1EA29A3EB3DADD6D5F428EDFF0C93D77635ADE75DABBCD6B430EFF00C8BD586
3CB4EA5AC1C777CEA454C0D43DB8F43EB9F540BAF527709303090C000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffff00000009263728A2EB29A4EB2BA5EC
46B3CFD6F527EDFF0CD3F32B7FCF9240B3E2B9E94DBAE94D38B2F239B4F33BB5F33CB7F4
3EB8F43FBAF541BBF642BDF61A495E040B0E000000ffffffffffffffffffffffffffffff
ffffffffffffffffff0000000104066FBE90D1F22C97D87034ABE439AEE29CDA6EEBFE0F
EDFF0CE8FC14E8FD1498DB7939B3F23AB5F33CB6F43DB8F43FB9F540BBF642BCF643BEF7
43BBF10D252F03080Affffffffffffffffffffffffffffffffffffffffffffffffffffff
030B0F357C8790D478E2FA19D2F22D56BBBF31ABEF46B6D78BD486D0F231EDFF0CE5FB17
B7E852A6E26890D98864C8C342BBF241BCF642BDF744BFF745C0F840AFE0050E12000000
ffffffffffffffffffffffffffffffffffffffffffffffff0000000D32472CA6ED45B3D1
BEEA43E9FD11AFE4577BCD9839B1EC5AC0C4E9FD10E9FD12EDFF0CEDFF0CEDFF0CEDFF0C
E1FA1BA6E36E4DC2E945C0F846C1F848C2F93998C203080A000000ffffffffffffffffff
ffffffffffffffffffffffff0000000105072CA2E62EA9EE32ABEB83D08BBBE94AE8FC14
DEF820DFF91DC0EC453FB7EC49BBE258C3D077D0A9A7E46AD9F727EDFF0CD5F62C9BE080
86D99F5CCADE4AC5FA2D7696040A0D000000ffffffffffffffffffffffffffffffffffff
ffffff030A0F2177A82FAAEE31ABEF32ADEF34AEF04CBAD591D880ABE36046B9E33BB5F3
3CB7F43EB8F53FBAF541BBF643BEF49CE07DEAFE10EDFF0CEDFF0CEBFE0FB2EA6486DBA5
2D5A5A040B0E000000ffffffffffffffffffffffffffffffffffff000102123F5930ABEE
32ACEF33ADF034AFF036B0F137B2F239B3F23AB5F33CB6F43DB8F43FB9F540BBF642BCF6
43BEF745BFF754C6E573D2BA8DDD96D1F534EDFF0CEDFF0CB3EA600F273003080Affffff
ffffffffffffffffffffffffffffff000000030A0E2FA5E730A8E832A9E833AAE935ABE9
36ADEA38AEEB39B0EB3BB1EC3CB3ED3EB4ED3FB6EE41B7EF42B9EF43BAF045BCF146BDF1
48BFF24AC0F077D3B48FDC936CD0C747B2DC050D10000000ffffffffffffffffffffffff
ffffffffffff03090D010203010203010203010203010203010203010203010203010203
010203010203010203010203010303010303010303010303010303010303010303010303
010303010303010303050D10
end
%%PageTrailer
%%Trailer
%%EOF
