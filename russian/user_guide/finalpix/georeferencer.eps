%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (georeferencer.eps)
%%CreationDate: (Sat Jan 24 07:56:30 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff3B77533F8863378A61446D71ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
00630020952758CB826BCE9C5EC59B5DC79C6CC19380A3C982BEF874B5F8ffffffffffff
ffffffffffffffffffffffffffffffffffffffffff284200ffffffffffff4CD45A71D69B
72D89E7FE19F8CB47292A46169A376B9EBFCADE5FF9CD8FE78B8F96DB4FAffffffffffff
ffffffffffffffffffffffffffffff644700835F007F8B316ED29D70D9A07CE1A084E29F
96904B98843E828766C5F5FFB2E8FF9EDBFF8BCEFF6CB5FB5DA9F9ffffffffffffffffff
ffffffffffffffffff815F007F791963C59763D1A076D99F8BE0A094E29E9C89429C853F
919F90C4F5FFB2E8FF9ED9FE8BCEFF78C2FF4C97F35DABFBffffffffffffffffffffffff
4E32008160008B732955AE887AD99F8CD49393B471989A559B843E917E3A9DB6BFBBE8FD
B6E2FD9AD4FD88CCFF75C0FF59A7FA347CEAffffffffffffffffffffffff604200826304
78754056BA9484DFA08EB47298843F97843F92833F746633B8E6F5B1E8FFA2DEFF92D3FF
7FC6FE6FBCFF57A8FC0E49D5ffffffffffffffffffffffff7E5D0082872E2D988C4DB596
8AB4738EAB6896843F95833E8D803E737458ACE4FFA2DEFF96D6FF87CCFF79C0FD67B6FF
418CF10237CD408EF3ffffffffffff493000815F006C94481873732E655D5C644F767A62
8A8E7E929B9292A6AB94BED6A1DAFE92D3FF87CCFF7AC3FF6CB9FE62AEFB3670E11A54D9
357EECffffffffffffffffffffffff83A4B2215DD32D71E23B87EB68BEFBBBE8FED0F1FF
D2F1FFD2F2FFBCE5FE81C8FF78C2FF6CBAFF5FAFFD5FA0F3346EE12763DE418EF2ffffff
ffffffffffffffffffffffff1F5AD9205FDC2B6EE13B7FE794CAF9C1E8FDCAEEFECBEEFE
C3E9FE6FBCFF5FADFB4189EE5B96EC72A9F24780E64E8FED4D9BF7ffffffffffffffffff
ffffffffffff3971DE0F48D3225EDB5F94EAA9D5FAB7E0FCC1E8FDC7ECFEC6EBFE3F7DE5
1D5BDA467CE294C5F77EB0F20437CD1C52D751A2FAffffffffffffffffffffffffffffff
6BA4EE0135CD6A9AEBA7D4FAB9E2FCC8EDFED2F2FFD7F3FFD7F3FF84AEEE487AE0A7D2F8
A0CEF875A6EE1345D22C68E0ffffffffffffffffffffffffffffffffffffffffff3267DC
8EBCF4B1DBFBC5EAFED4F2FFDFF5FFE6F7FFE5F7FFDEF5FFD2F1FFC2E8FD9CC7F695C6F7
80B5F45BA6F9ffffffffffffffffffffffffffffffffffffffffff82C0F87BAAEEB6DFFC
CBEEFEDAF4FFE8F8FFF3FBFFF2FBFFE6F7FFD8F3FFC8EDFEB3DDFB9ECDF976B6F9ffffff
ffffffffffffffffffffffffffffffffffffffffffffffff90CDFDB4DEFCCBEEFEDAF4FF
E8F8FFF4FCFFF3FBFFE6F7FFD8F3FFC8EDFEB3DDFB86C1FBffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff88CAFEAADAFD89AEEDAAC6F3CBE0F9
C5DBF8D3EBFCD2F2FFB8E3FE7CC0FDffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff5FA5F63F7FE8306EE32E6BE12D6EE4
599DF4ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
