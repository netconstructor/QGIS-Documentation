%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (grass_new_vector_layer.eps)
%%CreationDate: (Sat Jan 24 07:56:33 2009)
%%BoundingBox: 0 0 101 101
%%HiResBoundingBox: 0 0 101.471 101
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 101 101
userdict begin
DisplayImage
0 0
101.471 101.471
12.000000
31 31
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffF8A70AF8A70AF8A70Affffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffF8A70AF8A70AF8A70AF8A70Affffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffF8A70AF8A70A
F8A70AF8A70Affffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffF8A70AF8A80AF9B109F8A70AF8A70Affffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffF8A70A
F8A70AF9B908FDE303F8A70AF8A70Affffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffF8A70AF8A70AFBD005FFFD00FAC007F8A70A
F8A70Affffff000000000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffF8A70AF8A70AFDE603FFFD00FEF101F8A90AF8A70AF8A70AEFA10AA77107B27807
BF8208E79C09F8A70Affffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffF8A70AF8A70AF8A70AF8A90AFFFA00FFFD00
FFFD00FCD405F8A70AF8A70AF8A70AF8A70AF8A70AF8A70AF8A70AC88809ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffF8A70AF8A70A
F8A70AF8A70AF8A70AF8A70AFBC606FFFD00FFFD00FFFD00FFFD00FEF201FEF101FEF501
FFF901FEF201F7AC09F0A70B2D2B06070702ffffffffffffffffffffffff000000060A02
000000ffffffffffffF8A70AF8A70AF8A70AF8A70AF8A70AF9B508FBCE05FDE703FFFC00
FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFC00FABB08F8A70A92A11959941E
040701000000ffffffffffff101A051523070F1905000000ffffffffffffF8A70AF8A70A
F8A70AFABA08FEF201FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00
FFFD00FFFD00FBCF05F8A70AAF7707243C0C61A121325311050802ffffff0507021D300A
59931E0C1304ffffffffffffffffff000000AA7207F4A40AF8A70AFAC107FEF701FFFD00
FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FDE503F8A70AD49009865A05
070C0361A1215F9E20060B020000000F1905609F212B480E000000ffffffffffffffffff
00000001050818211EB27D11F8A70AF7AF09FDE703FFFD00FFFD00FFFD00FFFD00FFFD00
FFFD00FFFD00FFFD00F9B608F3A40A4C530C000000090F035A951F61A1210B1204060A02
3A601361A1213C6315020300ffffffffffffffffff000000020D141D96E3A8DC54C4C33C
F4A70EF8A80AFCD804FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FABE07F7A70A
485F11070B020406022F4E1061A121253D0C070C025F9E2061A121172708000000ffffff
000000000000ffffff02090E177ABCB0E14CEDFF0CEDEE0DF3AA0FF9B409FFFD00FFFD00
FFFD00FFFD00FFFD00FFFD00FFFD00FCDB04F8A70A7F6B0C0B1204000000131F0661A121
4D801A0A110361A1215F9E200E1705ffffffffffff080E03000000ffffff0106090E4A71
1E98E756B5ACBEE83FF7B10AF9B608FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00FFFD00
FEF701F8A80AC78F0C2B4810090E030A110361A12161A021101C0661A12161A121142007
ffffff050A02030501000000ffffff00000004151F1F99E7219BE8229CE8F0A913FABA08
FFFD00FFFD00FEF601FAC307FABE07FDDF03FFFB00FFFD00FABF07F7A70A709F1E101B07
0509025B971E61A121111D0661A12161A1211B2D090000000E1605132006ffffffffffff
00000001070A1C86C9229CE8239DE9F4A70FFABD07FFFD00FEF002F8B20AF8A70AF8A70A
F8A70AF8AE0AFBD005FBD105F8A70AA4A417385E14050B04385C1361A121121D0661A121
61A121406A16080D03457218121F06ffffffffffffffffff02080C125681239DE8289EE5
F8A70AFAC107FDE802F7AC0AF7A70B8DA78279C196F3D30BE5A81FF8A70AF8A70AF8A70A
D7A60F5F9E2009120B1A2C0961A121121E0661A12161A1215A951E1727085C991F101A06
ffffffffffffffffff000000071E2D239EE933A0DBF8A70AF9B109F8A90AF2A81070A7A2
2EA8EE91D57BD0F22F36ADEC73ACA6C4A743F7A70AF5A70A65A1201E2E0D0A110461A121
131F0661A12161A12127410E4B7D19487719070C02ffffffffffffffffff000000010508
2192D63EA1D1F8A70AF8A70AF7AF0A78B5982DA8ED2FA9EE8ED57EE3FA18C3EC41E8FC14
E5FB164A4A0E80A21C61A1213B6217060902609F2113200761A1215B981F15230761A121
1F330A000000ffffffffffffffffffffffff020B1017618F39A2D7F6A70CDDAB27EDF40E
DAF6234AB6CD30AAEE36AEE9DBF722E0FA1B79CD9E79CE9F344B244C7E1A61A12161A121
040702568F1D13200761A1213557123A611461A1210F1805ffffffffffffffffffffffff
ffffff0000000A293C28A2EB4EA5C335A5E173C79AEBFE0EE7FC148FD57D42B4DB4CB8D3
EBFE0F70C9A938B3F22E90C016280F61A12161A121233A0C33531114210761A1211E320A
5F9E2057911E0C1404ffffffffffffffffffffffffffffff00000001050858B4ACABE058
6DC4A12DA8ED61C0B2CEF131EDFF0CEAFE10BFEB45EDFF0C5FC3C139B4F33BB5F3173A3E
4D801A61A12160A0211D310B17260861A121263E0D61A1212E4C10050B03ffffffffffff
ffffffffffffffffffffffff030C11458A81ACE157EBFE0EACE1593AAEE334ADEB72C9A3
B6E74FEBFE0FECFF0DB4E75594DA7F81D3995EC1BD152A1F5C991F61A121487818182A08
61A1215C991F61A1210D1605000000ffffffffffffffffffffffffffffffffffff000000
0E354C2CA6ED5DBDB6D7F527D4F42A8DD58058BEC335B0F18ED684EDFF0CEDFF0CEDFF0C
EDFF0CEDFF0CB8CD1621330E61A02160A021192A0961A12161A1214B7D1A080D03ffffff
ffffffffffffffffffffffffffffffffffff00000002070A2CA4E82EA9EE3CAFE09BDB70
CFF231EDFF0CC3ED40E8FD1290D8834EBDDA5DC4C974CEAC9BDF78CBF239919E082A420C
61A121263F0D61A12161A12117270A03080A000000ffffffffffffffffffffffffffffff
ffffffffffff030C10217AAC2FAAEE31ABEF32ADEF34AEF063C4B89DDD7197DB7A3AB4F3
3BB6F33DB8F43EB9F540BBF542BCF66FCFBA37420A47751733541161A1214D801B0F190C
3F7B77040B0E000000ffffffffffffffffffffffffffffffffffff01020312425D30ABEF
32ACEF33AEF035AFF136B1F138B2F239B4F33BB5F33CB7F43EB9F53FBAF541BCF642BDF7
44BFF73C9CC2243B145B981F5D9A201E2F09626A05CAF34119404F040B0Effffffffffff
ffffffffffffffffffffffff000000030B102C9CD92E9DD92F9FD9319FDA32A1DB34A2DB
35A4DC36A5DD37A7DD39A8DE3AA9DF3CABDF3DACE03FAEE13FAFE10B18143A6626101C0B
0000005C946D6BC7B646B1DB09161B020506ffffffffffffffffffffffffffffffffffff
030B1002090C03090C03090C03090C03090C03090C03090C03090C03090C03090C03090C
03090C03090C030A0C040A0C03070803060702050602050604090B040A0D040A0D040A0D
071014
end
%%PageTrailer
%%Trailer
%%EOF
