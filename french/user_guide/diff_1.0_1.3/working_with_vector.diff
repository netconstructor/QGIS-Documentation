--- user guide EN 1.0/working_with_vector.tex	2009-11-30 19:25:27.238714901 +0100
+++ user guide EN 1.3/working_with_vector.tex	2009-11-28 23:05:58.936670987 +0100
@@ -5,7 +5,7 @@
 
 % when the revision of a section has been finalized,
 % comment out the following line:
-% \updatedisclaimer
+%\updatedisclaimer
 
 
 QGIS supports vector data in a number of formats, including those
@@ -20,9 +20,9 @@
 Support for additional data types (eg. delimited text) is provided by 
 additional data provider plugins.\index{delimited text}
 
-This section describes how to work with two common formats:
-ESRI shapefiles and PostGIS layers. Many of the
-features available in QGIS work the same regardless of the vector data source.
+This section describes how to work with several common formats:
+ESRI shapefiles, PostGIS layers, and SpatialLite layers. Many of the
+features available in QGIS work the same, regardless of the vector data source.
 This is by design and includes the identify, select, labeling and attributes
 functions.
 
@@ -34,9 +34,9 @@
 \index{ESRI!shapefiles}
 \index{SHP files}
 
-The standard vector file format used in QGIS is the ESRI Shapefile. It's support 
+The standard vector file format used in QGIS is the ESRI Shapefile. Support 
 is provided by the OGR Simple Feature Library (\url{http://www.gdal.org/ogr/})
-\index{OGR}. A shapefile actually consists of a minimum of three files:
+\index{OGR}. A shapefile actually consists of several files. The following three are required:
 \index{shapefile!format}
 
 \begin{itemize}
@@ -45,25 +45,18 @@
 \item \filename{.shx} index file.
 \end{itemize}
 
-Ideally it comes with another file with a \filename{.prj} suffix, that contains
-the projection information for the shapefile. There can be more files belonging 
-to a shapefile dataset. To have a closer look at this we recommend the technical 
-specification for the shapefile format, that can be found at \url{http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf}.
+Shapefiles also can include a file with a \filename{.prj} suffix, which contains
+the projection information. While it is very useful to have a projection file, it is not mandatory. A shapefile dataset can contain additional files. For further details see the ESRI technical specification at \url{http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf}.
 \index{shapefile!specification}.
 
 \subsubsection{Loading a Shapefile}\label{sec:load_shapefile}
-\includegraphics[width=0.7cm]{mActionAddNonDbLayer} 
-To load a shapefile, start
-QGIS and click on the \toolbtntwo{mActionAddNonDbLayer}{Add a vector layer}
-toolbar button\index{shapefile!loading} or simply type \keystroke{V}. This same tool can be used to
-load any of the formats supported by the OGR library.
 
-Clicking on the tool brings up a standard open file dialog (see Figure
-\ref{fig:openshapefile}) which allows you to navigate the file system and load
-a shapefile or other supported data source. 
-The selection box \selectstring{Files of type}{\ldots} allows you to preselect some OGR supported file formats.
-
-You can also select the Encoding type for the shapefile if desired.
+\begin{figure}[ht]
+   \begin{center}
+   \caption{Add Vector Layer Dialog \nixcaption}\label{fig:addvectorlayer}\smallskip
+   \includegraphics[clip=true, width=12cm]{addvectorlayerdialog}
+\end{center} 
+\end{figure}
 
 \begin{figure}[ht]
    \begin{center}
@@ -72,9 +65,6 @@
 \end{center} 
 \end{figure}
 
-Selecting a shapefile from the list and clicking \button{Open} loads it into QGIS. Figure
-\ref{fig:loadedshapefile} shows QGIS after loading the \filename{alaska.shp} file.
-
 \begin{figure}[ht]
    \begin{center}
    \caption{QGIS with Shapefile of Alaska loaded \nixcaption}\label{fig:loadedshapefile}\smallskip
@@ -82,6 +72,23 @@
 \end{center} 
 \end{figure}
 
+\includegraphics[width=0.7cm]{mActionAddNonDbLayer} To load a shapefile, start
+QGIS and click on the \toolbtntwo{mActionAddNonDbLayer}{Add a vector layer}
+toolbar button\index{shapefile!loading} or simply type \keystroke{V}. 
+This will bring up a new window (see Figure\ref{fig:addvectorlayer}).  
+
+From the available options check \radiobuttonon{File}. Click on \button{Browse}. 
+That will bring up a standard open file dialog (see Figure
+\ref{fig:openshapefile}) which allows you to navigate the file system and load
+a shapefile or other supported data source. 
+The selection box \selectstring{Files of type}{\ldots} allows you to preselect some OGR supported file formats.
+
+You can also select the Encoding type for the shapefile if desired.
+
+Selecting a shapefile from the list and clicking \button{Open} loads it into QGIS. Figure
+\ref{fig:loadedshapefile} shows QGIS after loading the \filename{alaska.shp} file.
+
+
 \begin{Tip}\caption{\textsc{Layer Colors}}
 \qgistip{When you add a layer to the map, it is assigned a random color. When
 adding more than one layer at a time, different colors are assigned to each layer. }
@@ -93,7 +100,16 @@
 choosing \dropmenuopt{Properties} from the popup menu. See
 Section \ref{sec:symbology} for more information on setting symbology of
 vector layers.
-  
+ 
+\begin{Tip}\caption{\textsc{Load layer and project from mounted external
+drives on OS X}}
+\qgistip{On OS X, portable drives that are mounted besides the primary hard
+drive do not show up under File -> Open Project as expected. We are working
+on a more OSX-native open/save dialog to fix this. As a workaround you can
+type '/Volumes' in the File name box and press return. Then you can navigate
+to external drives and network mounts.}
+\end{Tip}
+ 
 \subsubsection{Improving Performance}
 
 To improve the performance of drawing a shapefile, you can create a spatial
@@ -120,24 +136,17 @@
 \selectstring{Files of Type}{[OGR] MapInfo (*.mif
 *.tab *.MIF *.TAB)} and select the layer you want to load.
 
-\subsubsection{Loading an ArcInfo Coverage}
-\index{vector layers!ArcInfo Coverage}
+\subsubsection{Loading an ArcInfo Binary Coverage}
+\index{vector layers!ArcInfo Binary Coverage}
 
-Loading an ArcInfo coverage is done using the same method as with a
-shapefiles and MapInfo layers. Click on the 
+To load an ArcInfo binary coverage click on the 
 \toolbtntwo{mActionAddNonDbLayer}{Add a vector layer}
 toolbar button or type \keystroke{V} to open the 
-\dialog{Open on OGR Supported Vector Layer} 
-dialog and change the file type filter to
-\selectstring{Files of Type}{All files (*.*)}. Navigate to the coverage directory and select one
-of the following files (if present in your coverage):
+\dialog{Add Vector Layer} dialog.  Select \radiobuttonon{Directory}. Change to \selectstring {Type}{Arc/Ingo Binary Coverage}. 
+Navigate to the directory that contains the coverage files and select it.
 
-\begin{itemize}
-\item \filename{.lab} - to load a label layer (polygon labels or standing points).
-\item \filename{.cnt} - to load a polygon centroid layer 
-\item \filename{.arc} - to load an arc (line) layer.
-\item \filename{.pal} - to load a polygon layer.
-\end{itemize}
+Similarly, you can load directory based  vector files in the UK National Transfer Format as well as the 
+raw TIGER Format of the US Census Bureau.
 
 \subsection{PostGIS Layers}
 \index{vector layers!PostGIS|see{PostGIS}}
@@ -170,7 +179,8 @@
 database that contains the data. Begin by clicking on the
 \toolbtntwo{mActionAddLayer}{Add a PostGIS Layer} toolbar button, selecting the
 \dropmenuopttwo{mActionAddLayer}{Add a PostGIS Layer...} option from the \mainmenuopt{Layer} menu or typing
-\keystroke{D}. 
+\keystroke{D}. You can also open the open the 
+\dialog{Add Vector Layer} dialog and select \radiobuttonon{Database}.
 The \dialog{Add PostGIS Table(s)} dialog will
 be displayed. To access the connection manager\index{PostgreSQL!connection
 manager}, click on the \button{New} button to display the \dialog{Create a New
@@ -195,6 +205,14 @@
 database. \\
 \hline Password \index{PostgreSQL!password}& Password used with
 \textsl{Username} to connect to the database.\\
+\hline SSL mode \index{PostgreSQL!sslmode}& How the SSL connection will be negotiated with the server. These are the options: 
+\begin {itemize}
+\item disable: only try an unencrypted SSL connection;
+\item allow: try a non-SSL connection, if that fails, try an SSL connection;
+\item prefer (the default): try an SSL connection, if that fails, try a non-SSL connection;
+\item require: only try an SSL connection.
+\end {itemize}
+Note that massive speedups in PostGIS layer rendering can be achieved by disabling SSL in the connection editor. \\
 \hline
 \end{tabular}
 \end{table}
@@ -264,19 +282,27 @@
 QGIS requires that PostgreSQL layers contain a column that can be
 used as a unique key for the layer. For tables this usually means
 that the table needs a primary key, or a column with a unique
-constraint on it. QGIS additionally requires that this column be of
-type int4 (an integer of size 4 bytes). If a table lacks these items,
+constraint on it. In QGIS, this column needs to be of
+type int4 (an integer of size 4 bytes). Alternatively the ctid column can be used as primary key. 
+If a table lacks these items,
 the oid column will be used instead. Performance will be improved if the
 column is indexed (note that primary keys are automatically indexed in
 PostgreSQL). 
 
-If the PostgreSQL layer is a view, the same requirements exists, but
+If the PostgreSQL layer is a view, the same requirement exists, but
 views don't have primary keys or columns with unique constraints on
 them. In this case QGIS will try to find a column in the view that is
-derived from a table column that is suitable. If one cannot be found,
-QGIS will not load the layer. If this occurs, the solution is to alter
-the view so that it does include a suitable column (a type of int4
-and either a primary key or with a unique constraint, preferably indexed).
+derived from a suitable table column. It does this by parsing the view
+definition SQL. However there are several aspects of SQL that QGIS ignores
+- these include the use of table aliases and columns that are generated by
+SQL functions.
+
+If a suitable column cannot be found, QGIS will not load the layer. If this
+occurs, the solution is to alter the view so that it does include a suitable
+column (a type of int4 and either a primary key or with a unique constraint,
+preferably indexed).
+
+When dealing with views, QGIS parses the view definition and
 
 \subsubsection{Importing Data into PostgreSQL}\label{sec:loading_postgis_data}
 \index{PostGIS!SPIT!importing data}
@@ -407,6 +433,72 @@
 gsherman@madison:~/current$
 \end{verbatim}
 
+\subsubsection{Vector layers crossing 180$^\circ$ longitude}
+\index{vector layers!crossing}
+
+Many GIS packages don't wrap vector maps, with a geographic reference system
+(lat/lon), crossing the \degrees{180} longitude line. As result, if
+we open such map in QGIS, we will see two far, distinct locations, that
+should show near each other. In Figure \ref{fig:vector_not_wrapping} the tiny
+point on the far left of the map canvas (Chatham Islands), should be within
+the grid, right of New Zealand main islands.
+
+\begin{figure}[ht]
+   \begin{center}
+   \caption{Map in lat/lon crossing the \degrees{180} longitude line
+   \nixcaption}
+   \label{fig:vector_not_wrapping}\smallskip
+   \includegraphics[clip=true, width=\textwidth]{vectorNotWrapping}
+\end{center}
+\end{figure}
+
+A workaround is to transform the longitude values using PostGIS and the
+\textbf{ST\textunderscore Shift\textunderscore Longitude}
+\footnote{\url{http://postgis.refractions.net/documentation/manual-1.4/ST_Shift_Longitude.html}}
+function. This function reads every point/vertex in every component of every
+feature in a geometry, and if the longitude coordinate is < \degrees{0} adds
+\degrees{360} to it. The result would be a \degrees{0} - \degrees{360} version of
+the data to be plotted in a \degrees{180} centric map.
+
+\begin{figure}[ht]
+   \begin{center}
+   \caption{Map crossing the \degrees{180} longitude line
+after applying the ST\textunderscore Shift\textunderscore Longitude
+function}
+\label{fig:vector_wrapping}\smallskip
+   \includegraphics[clip=true, width=9cm]{vectorWrapping}
+\end{center}
+\end{figure}
+
+\minisec{Usage}
+
+\begin{itemize}
+\item Import data to PostGIS (\ref{sec:loading_postgis_data}) using for
+example the PostGIS Manager plugin or the SPIT plugin
+\item Use the PostGIS command line interface to issue the following command
+(this is an example where "TABLE" is the actual name of your PostGIS table) \\ 
+\texttt{gis\_data=\# update TABLE set the\_geom=ST\_shift\_longitude(the\_geom);} 
+\item If everything went right you should receive a confirmation about the
+number of features that were updated, then you'll be able to load the map and
+see the difference (Figure \ref{fig:vector_wrapping})
+\end{itemize}
+
+\subsection{SpatiaLite Layers} 
+\index{SpatiaLite layers!properties dialog}
+\index{vector layers!SpatlaLIte|see{SpatiaLite}}
+\index{SpatiaLite!layers}
+\label{label_spatialite} 
+
+\includegraphics[width=0.7cm]{mActionAddSpatiaLiteLayer}
+The first time you load data from a Spatialite database, begin by clicking on the 
+\toolbtntwo{mActionAddSpatiaLiteLayer}{Add SpatiaLite Layer} toolbar button or by selecting the 
+\dropmenuopttwo{mActionAddSpatiaLiteLayer}{Add SpatiaLite Layer...} 
+option from the \mainmenuopt{Layer} menu or by typing \keystroke{L}. 
+This will bring up a window, which will allow you to either connect to a Spatialite database already known to QGIS, which 
+you can choose from the dropdown menu or to define a new connection to a new database. To define a new connection, 
+click on \button{New} and use the file browser to point to your SpatiaLite database, 
+which is a file with a \filename{.sqlite } extension.
+
 \subsection{The Vector Properties Dialog}\label{sec:vectorprops}
 \index{vector layers!properties dialog}
 
@@ -435,7 +527,7 @@
 
 The \button{Query Builder} button allows you to create a subset of the features 
 in the layer - but this button currently only is available when you open the 
-attribute table and select the \button{Advanced ...} button.
+attribute table and select the \button{...} button next to Advanced search.
 
 \subsubsection{Symbology Tab}\label{sec:symbology}
 \index{vector layers!symbology}
@@ -536,6 +628,10 @@
   We'll use \selectstring{Field containing label}{NAMES}.
 \item Enter a default for lakes that have no name. The default label will be
   used each time QGIS encounters a lake with no value in the \guilabel{NAMES} field.
+\item If have labels extending over several lines, check \checkbox{Multiline labels?}. 
+QGIS will check for a true line return in your label field and insert the line breaks accordingly.
+A true line return is a \textbf{single} character \textbackslash n, 
+(not two separate characters, like a backlash \textbackslash ~followed by the character n).
 \item Click \button{Apply}.
 \end{enumerate} 
 
@@ -764,49 +860,92 @@
 
 \subsubsection{Attributes Tab}\index{attributes}\label{label_attributes}
 Within the \tab{Attributes} tab the attributes of the selected dataset can be
-manipulated. The buttons \button{New Column} and \button{Delete Column} can be
-used, when the dataset is in editing mode. At the moment only columns from 
-PostGIS layers can be edited, because this feature is not yet supported by 
-the OGR library. 
-
-The \button{Toggle editing mode} button toggles this mode.
+manipulated. The buttons \toolbtntwo{mActionNewAttribute}{New Column} and 
+\toolbtntwo{mActionDeleteAttribute}{Delete Column} can be
+used, when the dataset is \toolbtntwo{mActionToggleEditing}{editing mode}. 
+At the moment only columns from PostGIS layers can be removed and added. The 
+OGR library supports to add new columns, but not to remove them, if you have 
+a GDAL version >= 1.6 installed. 
 
 \minisec{edit widget}
 
-Within the \tab{Attributes} tab you also find an \texttt{edit widget} and a 
-\texttt{value} column. These two columns can be used to define values or a range 
-of values that are allowed to be added to the specific attribute table columns. 
-They are used to produce different edit widgets in the attribute dialog. These 
-widgets are:
+\begin{figure}[H]
+   \begin{center}
+   \caption{Dialog to select an edit widget for an attribute column \nixcaption}\label{fig:editwidget}\smallskip
+   \includegraphics[clip=true, width=14cm]{editwidgetsdialog}
+\end{center}
+\end{figure}
+
+Within the \tab{Attributes} tab you also find an \texttt{edit widget} column. 
+This column can be used to define values or a range of values that are allowed 
+to be added to the specific attribute table column. If you click on the 
+\button{edit widget} button, a dialog opens, where you can define different 
+widgets. These widgets are:
 
 \begin{itemize}
-\item line edit: an edit field which allows to enter simple text (or restrict to 
+\item Line edit: an edit field which allows to enter simple text (or restrict to 
 numbers for numeric attributes).
-\item unique value: a list of unique attribute values of all pre-existing features
-is produced and presented in a combo box for selection.
-\item  unique value (editable): a combination of `line edit' and `unique value'.
-The edit field completes entered values to the unique value, but also allows
-to enter new values.
-\item value map: a combobox to select from a set of values specified in the
-\texttt{value} column the \tab{Attributes} tab.  The possible values are 
-delimited by a semicolon (e.g. \verb|high;medium;low|).  It is also possible
-to prepend a label to each value, which is delimited with an equal sign (e.g.
-\verb|high=1;medium=2;low=3|). The label is shown in the combobox instead of
-the value.
-\item classification: if a unique value renderer is selected for the layer, the
-values used for the classes are presented for selection in a combobox.
-\item range (editable): A edit field that allows to restrict numeric values to a
-given range.  That range is specified by entering minium and maximum value
-delimited by a semicolon (e.g. \verb|0;360|) in the \texttt{value} column of
-the \tab{Attributes} tab.
-\item range (slider): A slider widget is presented that allows selection of a value
-in a given range and precision.  The range is specifed by minimum, maximum
-value and a step width (e.g. \verb|0;360;10|) in the \texttt{value} column of
-the \tab{Attributes} tab.
-\item file name: the line edit widget is accompanied by a push button. When pressed
-it allows to select a filename using the standard file dialog.
+\item Classification: Displays a combo box with the values used for classification, if you have chosen 'unique value' as legend type in the symbology tab of the properties dialog.
+\item Range: Allows to set numeric values from a specific range. The edit widget can be either a slider or a spin box.
+\item Unique value: The user can select one of the values already used in the attribute table. If editable is activated, a line edit is shown with autocompletion support, otherwise a combo box is used. 
+\item File name: Simplifies the selection by adding a file chooser dialog.
+\item Value map: a combo box with predefined items. The value is stored in the attribute, the description is shown in the comboo box. You can define values manually or load them from a layer or a csv file. 
+\item Enumeration: Opens a combo box with values that can be used within the columns type. This is currently only supported by the postgres provider.
+\item Immutable: The immutable attribute column is read-only. The user is not able to modify the content. 
 \end{itemize}
 
+\subsubsection{Diagram Tab}\label{sec:diagram}
+\index{vector layers!diagram}
+
+The \tab{Diagram} tab allows you to add a grahic overlay to a vector layer.
+To activate this feature, open the Plugin Manager and select the Diagram Overlay' 
+plugin. After this, there is a new tab in the vector \dialog{Layer
+Properties} dialog where the settings for diagrams may be entered (see
+figure~\ref{fig:diagramtab}).
+
+\begin{figure}[ht]
+   \begin{center}
+   \caption{Vector properties dialog with diagram tab \nixcaption}\label{fig:diagramtab}\smallskip
+   \includegraphics[clip=true, width=13cm]{diagram_tab}
+\end{center}
+\end{figure}
+
+The current implementation of diagrams provides support for pie- and barcharts
+and for linear scaling of the diagram size according to a classification
+attribute. We will demonstrate an example and overlay the alaska boundary
+layer a barchart diagramm showing some temperature data from a climate vector
+layer. Both vector layers are part of the QGIS sample dataset (see
+Section~\ref{label_sampledata}.
+
+\begin{enumerate}
+\item First click on the \toolbtntwo{mActionAddOgrLayer}{Load Vector} icon,
+browse to the QGIS sample dataset folder and load the two vector shape layers
+\filename{alaska.shp} and \filename{climate.shp}.
+\item Double click the \filename{climate} layer in the map legend to open the
+\dialog{Layer Properties} dialog.
+\item Click on the \tab{Diagram Overlay} and select \button{Bar chart} as
+Diagram type.
+\item In the diagram we want to display the values of the three columns
+\filename{T\_F\_JAN, T\_F\_JAN} and \filename{T\_F\_MEAN}. First select
+\filename{T\_F\_JAN} as Attributes and click \button{Add attribute}, then
+\filename{T\_F\_JUL} and finally \filename{T\_F\_MEAN}.  
+\item For linear scaling of the diagram size we define \filename{T\_F\_JUL}
+as classification attribute.
+\item Now click on \button{find maximum value}, choose a size value and unit
+and click \button{Apply} to display the diagram in the QGIS main window.
+\item You can now adapt the chart size, or change the attribute colors double
+clicking on the color values in the attribute field.
+Figure~\ref{fig:climatediagram} gives an impression.
+\item Finally click \button{Ok}. 
+\end{enumerate}
+
+\begin{figure}[ht]
+   \begin{center}
+   \caption{Diagram from temperature data overlayed on a map \nixcaption}\label{fig:climatediagram}\smallskip
+   \includegraphics[clip=true, width=13cm]{climate_diagram}
+\end{center}
+\end{figure}
+
 \subsection{Editing}\index{editing}
 
 QGIS supports basic capabilities for editing vector geometries.  Before reading any
@@ -817,9 +956,15 @@
 \textbf{Note} - the procedure for editing GRASS layers is different - see
 Section \ref{grass_digitising} for details.
 
-\subsubsection{Setting the Snapping Tolerance and Search Radius}
+\begin{Tip}[ht]\caption{\textsc{Concurrent Edits}}
+\qgistip{This version of QGIS does not track if somebody else is editing a
+feature at the same time as you. The last person to save their edits wins.
+}
+\end{Tip}
 
-Before we can edit vertices, it is very important to set the snapping
+\subsubsection{Setting the Snapping Tolerance and Search Radius}\label{snapping_tolerance}
+
+Before we can edit vertices, we must set the snapping
 tolerance and search radius to a value that allows us an optimal editing of
 the vector layer geometries. 
 
@@ -830,23 +975,28 @@
 connect when you set a new vertex or move an existing vertex. If you aren't
 within the snap tolerance, QGIS will leave the vertex where you release the
 mouse button, instead of snapping it to an existing vertex and/or segment. 
+The snapping tolerance setting affects all tools which work with tolerance. 
 
 \begin{enumerate}
 \item A general, project wide snapping tolerance can be defined choosing
-\mainmenuopt{Settings} > \dropmenuopttwo{mActionOptions}{Options}
+\mainmenuopt{Settings} > \dropmenuopttwo{mActionOptions}{Options}. 
+(On Mac: go to  \mainmenuopt{QGIS} > Preferences, on Linux: \mainmenuopt{Edit} > \dropmenuopttwo{mActionOptions}{Options}.)
 In the \tab{Digitizing} tab you can select between to vertex, to segment or
 to vertex and segment as default snap mode. You can also define a default
-snapping tolerance and a search radius for vertex edits. Remember the
-tolerance is in layer units. In our digitizing project (working with the
-Alaska dataset), the units are in feet. Your results may vary, but something
-on the order of 300ft should be fine at a scale of 1:10 000 should be a
-reasonable setting.
+snapping tolerance and a search radius for vertex edits. The tolerance an be 
+set either in map units or in pixels. The advantage of choosing pixels, is 
+that the snapping tolerance doesn't have to be changed after zoom operations. 
+In our small digitizing project (working with the Alaska dataset), we define 
+the snapping units in feet. Your results may vary, but something on the order 
+of 300ft should be fine at a scale of 1:10 000 should be a reasonable 
+setting.
 \item A layer based snapping tolerance can be defined by choosing
-\mainmenuopt{Settings} > \dropmenuopttwo{mActionOptions}{Project
+\mainmenuopt{Settings} (or \mainmenuopt{File}) > \dropmenuopttwo{mActionOptions}{Project
 Properties\dots}. In the \tab{General} tab, section \classname{Digitize} you
 can click on \button{Snapping options\dots} to enable and adjust snapping
 mode and tolerance on a layer basis (see Figure~\ref{fig:snappingoptions}).
 \end{enumerate}
+Note that this layer based snapping overrides the global snapping option set in the Digitizing tab. So if you need to edit one layer, and snap its vertices to another layer, then enable snapping only on the \usertext{snap to} layer, then decrease the global snapping tolerance to a smaller value.  Furthermore, snapping will never occur to a layer which is not checked in the snapping options dialog, regardless of the global snapping tolerance. So be sure to mark the checkbox for those layers that you need to snap to.
 
 \begin{figure}[H]
    \begin{center}
@@ -861,7 +1011,7 @@
 vertex you are trying to move when you click on the
 map. If you aren't within the search radius, QGIS won't find and select
 any vertex for editing and it will pop up an annoying warning to that effect.
-Snap tolerance and search radius are set in map units so you may find you
+Snap tolerance and search radius are set in map units or pixels, so you may find you
 need to experiment to get them set right. If you specify too big of a
 tolerance, QGIS may snap to the wrong vertex, especially if you are dealing
 with a large number of vertices in close proximity. Set search radius too
@@ -872,6 +1022,40 @@
 \dropmenuopttwo{mActionOptions}{Options}. The same place where you define the
 general, project wide snapping tolerance.
 
+\subsubsection{Zooming and Panning}
+
+Before editing a layer, you should zoom in to your area of interest. This
+avoids waiting while all the vertex markers are rendered across the entire
+layer.
+
+Apart from using the \toolbtntwo{mActionPan}{pan} and
+\toolbtntwo{mActionZoomIn}{zoom-in}/\toolbtntwo{mActionZoomOut}{zoom-out}
+icons on the toolbar with the mouse, navigating can also be done with the
+mouse wheel, spacebar and the arrow keys.
+
+\minisec{Zooming and panning with the mouse wheel}
+
+While digitizing you can press the mouse wheel to pan inside of the main
+window and you can roll the mouse wheel to zoom in and out on the map. For
+zooming place the mouse cursor inside the map area and roll it forward (away
+from you)
+to zoom in and backwards (towards you) to zoom out. The mouse cursor position
+will
+be the center of the zoomed area of interest. You can customize the behavior
+of the mouse wheel zoom using the \tab{Map tools} tab under the
+\mainmenuopt{Settings} >\dropmenuopt{Options} menu.
+
+\minisec{Panning with the arrow keys}
+
+Panning the Map during digitizing is possible with the arrow keys. Place
+the mouse cursor inside the map area and click on the right arrow key to
+pan east, left arrow key to pan west, up arrow key to pan north and down
+arrow key to pan south.
+
+You can also use the spacebar to temporarily cause mouse movements to pan
+then map. The PgUp and PgDown keys on your keyboard will cause the map
+display to zoom in or out without interrupting your digitising session.
+
 \subsubsection{Topological editing}
 
 Besides layer based snapping options the \tab{General} tab in menu 
@@ -895,138 +1079,96 @@
 one such that both intersect and qgis then cuts the second polygon to the common boundary. 
 The advantage is that users don't have to digitize all vertices of the common boundary.
 
-\subsubsection{Editing an Existing Layer}
-\index{vector layers!editing}
-\index{editing!an existing layer}
+\subsubsection{Digitizing an existing layer}
+\index{vector layers!digitizing}
+\index{digitizing!an existing layer}
 \label{sec:edit_existing_layer}
 
 By default, QGIS loads layers read-only: This is a safeguard
 to avoid accidentally editing a layer if there is a slip of the mouse.
-However, you can choose to edit any layer as long as the data provider supports it,
-and the underlying data source is writable (i.e. its files are not read-only).
-
-Layer editing is most versatile when used on PostgreSQL/PostGIS data sources. 
+However, you can choose to edit any layer as long as the data provider
+supports it, and the underlying data source is writable (i.e. its files are
+not read-only). Layer editing is most versatile when used on
+PostgreSQL/PostGIS data sources.
 
-\begin{Tip}[ht]\caption{\textsc{Data Integrity}}
-\qgistip{It is always a good idea to back up your data source before you start 
-editing. While the authors of QGIS have made every effort to preserve the 
-integrity of your data, we offer no warranty in this regard.
-}
-\end{Tip}
+In general, editing vector layers is divided into a digitizing and an advanced
+digitizing toolbar, described in Section \ref{sec:advanced_edit}. You can
+select and unselect both under \mainmenuopt{Settings} > \dropmenuopt{Toolbars}.
+Using the basic digitizing tools you can perform the following functions:
 
-\begin{Tip}[ht]\caption{\textsc{Manipulating Attribute data}}
-\qgistip{Currently only PostGIS layers are supported for adding or dropping attribute
-columns within this dialog. In future versions of QGIS, other datasources 
-will be supported, because this feature was recently implemented in GDAL/OGR > 1.6.0
-}
-\end{Tip}
+\begin{table}[h]\index{vector layers!basic editing tools}
+\centering
+\caption{Vector layer basic editing toolbar}\label{tab:vector_editing}\medskip
+\small
+\begin{tabular}{|l|p{6.9cm}|l|p{6.9cm}|}
+\hline \textbf{Icon} & \textbf{Purpose} & \textbf{Icon} & \textbf{Purpose} \\
+\hline \includegraphics[width=0.7cm]{mActionToggleEditing}
+   & Toggle editing
+   & \includegraphics[width=0.7cm]{mActionCapturePoint}
+   & Adding Features: Capture Point \\
+\hline \includegraphics[width=0.7cm]{mActionCaptureLine}
+   & Adding Features: Capture Line
+   & \includegraphics[width=0.7cm]{mActionCapturePolygon}
+   & Adding Features: Capture Polygon \\
+\hline \includegraphics[width=0.7cm]{mActionMoveFeature}
+   & Move Features
+   & \includegraphics[width=0.7cm]{mActionMoveVertex}
+   & Move Vertex \\
+\hline \includegraphics[width=0.7cm]{mActionAddVertex}
+   & Add Vertex
+   & \includegraphics[width=0.7cm]{mActionDeleteVertex}
+   & Delete Vertex \\
+\hline \includegraphics[width=0.7cm]{mActionDeleteSelected}
+   & Delete Selected
+   & \includegraphics[width=0.7cm]{mActionEditCut}
+   & Cut Features \\
+\hline \includegraphics[width=0.7cm]{mActionEditCopy}
+   & Copy Features
+   & \includegraphics[width=0.7cm]{mActionEditPaste} 
+   & Paste Features \\
+\hline
+\end{tabular}
+\end{table}
 
+All editing sessions start by choosing the
+\dropmenuopttwo{mActionToggleEditing}{Toggle editing} option.
+This can be found in the context menu after right clicking on the legend
+entry for that layer.\index{Allow Editing}
 
+Alternately, you can use the \index{Toggle Editing}
+\toolbtntwo{mActionToggleEditing}{Toggle editing} button from the digitizing
+toolbar to start or stop the editing mode.\index{editing!icons} Once the
+layer is in edit mode, markers will appear at the vertices, and additional
+tool buttons on the editing toolbar will become available.
 
 \begin{Tip}[ht]\caption{\textsc{Save Regularly}}
-\qgistip{Remember to toggle \toolbtntwo{mActionToggleEditing}{Toggle editing} off regularly.  
-This allows you to save your recent changes,
-and also confirms that your data source can accept all
-your changes.
-}
-\end{Tip}
-
-\begin{Tip}[ht]\caption{\textsc{Concurrent Edits}}
-\qgistip{This version of QGIS does not track if somebody else is editing a feature at the same time
-as you.  The last person to save their edits wins.
-}
-\end{Tip}
-
-\begin{Tip}[ht]\caption{\textsc{Zoom in Before Editing}}
-\qgistip{Before editing a layer, you should
-zoom in to your area of interest. This 
-avoids waiting while all the vertex markers are rendered across the entire layer.
-}
-\end{Tip}
-
-\begin{Tip}[ht]\caption{\textsc{Vertex Markers}}
-\qgistip{
-The current version of QGIS supports two kinds of vertex-markers -
-a semi-transparent circle or a cross. To change the marker style, choose
-\dropmenuopttwo{mActionOptions}{Options} from the
-\mainmenuopt{Settings} menu and click on the \tab{Digitizing} tab and select
-the appropriate entry.
+\qgistip{Remember to toggle \toolbtntwo{mActionToggleEditing}{Toggle editing}
+off regularly. This allows you to save your recent changes, and also confirms
+that your data source can accept all your changes.
 }
 \end{Tip}
 
-All editing sessions start by choosing the \dropmenuopttwo{mActionToggleEditing}{Toggle editing} option.
-This can be found in the context menu after right clicking on the legend
-entry for that layer.\index{Allow Editing}
-Alternately, you can use the \index{Toggle Editing}
-\toolbtntwo{mActionToggleEditing}{Toggle editing} button from the toolbar to start 
-or stop the editing mode.\index{editing!icons} Once the layer is in edit mode, 
-markers will appear at the vertices, and additional tool buttons on the editing 
-toolbar will become available.
-
-\minisec{Zooming with the mouse wheel}
-
-While digitizing you can use the mouse wheel to zoom in and out on the map 
-Place the mouse cursor inside the map area and roll it forward (away from you) 
-to zoom in and backwards (towards you) to zoom out. The mouse cursor position will 
-be the center of the zoomed area of interest. You can customize the behavior 
-of the mouse wheel zoom using the \tab{Map tools} tab under the \mainmenuopt{Settings} 
->\dropmenuopt{Options} menu.
-
-\minisec{Panning with the arrow keys}
-
-Panning the Map during digitizing is possible with the arrow keys. Place
-the mouse cursor inside the map area and click on the right arrow key to
-pan east, left arrow key to pan west, up arrow key to pan north and down arrow 
-key to pan south.
-
-You can also use the spacebar to temporarily cause mouse movements to pan 
-then map. The PgUp and PgDown keys on your keyboard will cause the map 
-display to zoom in or out without interrupting your digitising session.
-
-You can perform the following editing functions:
-
-\begin{itemize}
-\item Add Features: \toolbtntwo{mActionCapturePoint}{Capture Point},
-  \toolbtntwo{mActionCaptureLine}{Capture Line} and
-  \toolbtntwo{mActionCapturePolygon}{Capture Polygon}
-\item \toolbtntwo{mActionAddRing}{Add Ring}
-\item \toolbtntwo{mActionAddIsland}{Add Island}
-\item \toolbtntwo{mActionSplitFeatures}{Split Features}
-\item \toolbtntwo{mActionMoveFeature}{Move Features}
-\item \toolbtntwo{mActionMoveVertex}{Move Vertex}
-\item \toolbtntwo{mActionAddVertex}{Add Vertex}
-\item \toolbtntwo{mActionDeleteVertex}{Delete Vertex}
-\item \toolbtntwo{mActionDeleteSelected}{Delete Selected}
-\item \toolbtntwo{mActionEditCut}{Cut Features}
-\item \toolbtntwo{mActionEditCopy}{Copy Features}
-\item \toolbtntwo{mActionEditPaste}{Paste Features}
-\end{itemize}
-
-\minisec{Adding Features}
+\minisec{Adding and Moving Features}
 \index{vector layers!adding!feature}
+\index{vector layers!move!feature}
 
-Before you start adding features, use the \toolbtntwo{mActionPan}{pan}
-and \toolbtntwo{mActionZoomIn}{zoom-in}/\toolbtntwo{mActionZoomOut}{zoom-out} 
-tools to first navigate to the area of interest.
-
-Then you can use the \toolbtntwo{mActionCapturePoint}{Capture point},
+You can use the \toolbtntwo{mActionCapturePoint}{Capture point},
 \toolbtntwo{mActionCaptureLine}{Capture line} or
-\toolbtntwo{mActionCapturePolygon}{Capture polygon} icons on the toolbar to put the QGIS cursor
-into digitizing mode.
+\toolbtntwo{mActionCapturePolygon}{Capture polygon} icons on the toolbar to
+put the QGIS cursor into digitizing mode.  
 
 For each feature, you first digitize the geometry, then enter its attributes.
-
-To digitize the geometry, left-click on the map area to create the
-first point of your new feature.
+To digitize the geometry, left-click on the map area to create the first
+point of your new feature.
 
 For lines and polygons, keep on left-clicking for each additional
 point you wish to capture.  When you have finished adding points,
 right-click anywhere on the map area to confirm you have finished entering
 the geometry of that feature.
 
-The attribute window will appear, allowing you to enter the information for the new feature.
-Figure \ref{fig:vector_digitising} shows setting attributes for a fictitious
-new river in Alaska.
+The attribute window will appear, allowing you to enter the information for
+the new feature. Figure \ref{fig:vector_digitising} shows setting attributes
+for a fictitious new river in Alaska.
 
 \begin{figure}[ht]
    \begin{center}
@@ -1036,6 +1178,9 @@
 \end{center}  
 \end{figure}
 
+With the \toolbtntwo{mActionMoveFeature}{Move Feature} icon on the toolbar
+you can move existing features.
+
 \begin{Tip}[ht]\caption{\textsc{Attribute Value Types}}
 \qgistip{
 At least for shapefile editing the attribue types are validated during the
@@ -1046,26 +1191,14 @@
 }
 \end{Tip}
 
-\minisec{Move Feature}
-\index{vector layers!move!feature}
-
-You can move features using the \toolbtntwo{mActionMoveFeature}{Move Feature} icon
-on the toolbar.
-
-\minisec{Split Feature}
-\index{vector layers!split!feature}
-
-You can split features using the \toolbtntwo{mActionSplitFeatures}{Split Features} icon
-on the toolbar.
-
-\minisec{Editing Vertices of a Feature}
+\minisec{Adding, Moving and Deleting Vertices of a Feature}
 \index{vector layers!editing!vertex}
 
-For both PostgreSQL/PostGIS and shapefile-based layers, the vertices of features can be edited. 
+For both PostgreSQL/PostGIS and shapefile-based layers, the vertices of
+features can be edited. 
 
-Vertices can be directly edited, that is, you don't
-have to choose which feature to edit before you can change
-its geometry.
+Vertices can be directly edited, that is, you don't have to choose which
+feature to edit before you can change its geometry.
 In some cases, several features may share the same vertex
 and so the following rules apply when the mouse is pressed
 down near map features:
@@ -1085,64 +1218,41 @@
                           on that polygon is the editing target.
 \end{itemize}
 
-You will need to set the property
-\mainmenuopt{Settings}>\dropmenuopttwo{mActionOptions}{Options}>\tab{Digitizing}>\selectnumber{Search Radius}{10}
-to a number greater than zero.  Otherwise QGIS will not be able to tell which feature is being edited.
-
-
-\minisec{Adding Vertices of a Feature}
-\index{vector layers!adding!vertex}
+You will need to set the property \mainmenuopt{Settings} >
+\dropmenuopttwo{mActionOptions}{Options} >
+\tab{Digitizing}>\selectnumber{Search Radius}{10} to a number greater than
+zero. Otherwise QGIS will not be able to tell which feature is being edited.
 
-You can add new vertices to a feature by using the
-\toolbtntwo{mActionAddVertex}{Add Vertex} icon
-on the toolbar.
+With the \toolbtntwo{mActionAddVertex}{Add Vertex} icon you can add new
+vertices to a feature.\index{vector layers!adding!vertex} Please note, it
+doesn't make sense to add more vertices to a Point feature!
 
-Note, it doesn't make sense to add more vertices to a Point feature!
+\begin{Tip}[ht]\caption{\textsc{Vertex Markers}}
+\qgistip{The current version of QGIS supports two kinds of vertex-markers -
+a semi-transparent circle or a cross. To change the marker style, choose
+\dropmenuopttwo{mActionOptions}{Options} from the \mainmenuopt{Settings} menu
+and click on the \tab{Digitizing} tab and select the appropriate entry.
+}
+\end{Tip}
 
-In this version of QGIS, vertices can only be added to an \textit{existing} line
-segment of a line feature.  If you want to extend a line beyond its end,
+In this version of QGIS, vertices can only be added to an \textit{existing}
+line segment of a line feature. If you want to extend a line beyond its end,
 you will need to move the terminating vertex first, then add a new vertex where
 the terminus used to be.
 
-\minisec{Moving Vertices of a Feature}
-\index{vector layers!moving!vertex}
-
-You can move vertices using the \toolbtntwo{mActionMoveVertex}{Move Vertex} icon
-on the toolbar.
-
-\minisec{Deleting Vertices of a Feature}
-\index{vector layers!deleting!vertex}
-
-You can delete vertices by using the \toolbtntwo{mActionDeleteVertex}{Delete Vertex} icon
-on the toolbar.
-
-Note, it doesn't make sense to delete the vertex of a Point feature!
-Delete the whole feature instead.
-
-Similarly, a one-vertex line or a two-vertex polygon is also
-fairly useless and will lead to unpredictable results elsewhere
-in QGIS, so don't do that.
-
-\textbf{Warning:} A vertex is identified for deletion as
-soon as you click the mouse near an eligible
-feature.  To undo, you will need to toggle
-Editing off and then discard your changes.
-(Of course this will mean that other unsaved changes will be lost, too.)
-
-\minisec{Add Ring}
-\index{vector layers!add!ring}
+With the \toolbtntwo{mActionMoveVertex}{Move Vertex} icon on the toolbar you
+can move vertices.\index{vector layers!moving!vertex}
 
-You can create ring polygons using the \toolbtntwo{mActionAddRing}{Add Ring}
-icon in the toolbar. This means inside an existing area it is
-possible to digitize further polygons, that will occur as a 'whole', so only 
-the area in between the boundaries of the outer and inner polygons remain as 
-a ring polygon. 
+With the \toolbtntwo{mActionDeleteVertex}{Delete Vertex} icon on the toolbar
+you can delete vertices.\index{vector layers!deleting!vertex} Please note, it
+doesn't make sense to delete the vertex of a Point feature! Delete the whole
+feature instead.
 
-\minisec{Add Island}
-\index{vector layers!add!island}
+Similarly, a one-vertex line or a two-vertex polygon is also fairly useless
+and will lead to unpredictable results elsewhere in QGIS, so don't do that.
 
-You can \toolbtntwo{mActionAddIsland}{add island} polygons to a selected multipolygon. 
-The new island polygon has to be digitized outside the selected multipolygon. 
+\textbf{Warning:} A vertex is identified for deletion as soon as you click
+the mouse near an eligible feature.  
 
 \minisec{Cutting, Copying and Pasting Features}
 \index{vector layers!cut!feature}
@@ -1160,7 +1270,6 @@
 the features are represented in CSV format with the geometry data appearing 
 in the OGC Well-Known Text (WKT) format.
 
-
 However in this version of QGIS, text features from outside QGIS cannot 
 be pasted to a layer within QGIS. When would the copy and paste function 
 come in handy? Well, it turns out that you can edit more than one layer 
@@ -1174,7 +1283,7 @@
 \begin{enumerate}
 \item Load the layer you want to copy from (source layer)
 \item Load or create the layer you want to copy to (target layer) 
-\item Start editing for both layers 
+\item Start editing for target layer
 \item Make the source layer active by clicking on it in the legend 
 \item Use the \toolbtntwo{mActionSelect}{Select} tool to select the feature(s) on the source layer
 \item Click on the \toolbtntwo{mActionEditCopy}{Copy Features} tool
@@ -1207,9 +1316,7 @@
 If we want to delete an entire polygon, we can do that by first selecting 
 the polygon using the regular \toolbtntwo{mActionSelect}{Select Features} tool. You can select 
 multiple features for deletion. Once you have the selection set, use the 
-\toolbtntwo{mActionDeleteSelected}{Delete Selected} tool to delete the features. There is no undo function, 
-but remember your layer isn't really changed until you stop editing and choose 
-to save your changes. So if you make a mistake, you can always cancel the save.
+\toolbtntwo{mActionDeleteSelected}{Delete Selected} tool to delete the features. 
 
 The \toolbtntwo{mActionEditCut}{Cut Features} tool on the digitizing toolbar can
 also be used to delete features. This effectively deletes the feature but
@@ -1226,13 +1333,6 @@
 }
 \end{Tip}
 
-\minisec{Snap Mode}
-\index{editing!snap}
-QGIS allows digitized vertices to be snapped to other vertices of the same layer. To 
-set the snapping tolerance, go to
-\mainmenuopt{Settings}>\dropmenuopttwo{mActionOptions}{Options}->\tab{Digitizing}.
-Note that the snapping tolerance is in map units.
-
 \minisec{Saving Edited Layers}
 \index{editing!saving changes}
 
@@ -1246,6 +1346,205 @@
 values that are out of range), the QGIS in-memory state is preserved.  This
 allows you to adjust your edits and try again.
 
+\begin{Tip}[ht]\caption{\textsc{Data Integrity}}
+\qgistip{It is always a good idea to back up your data source before you
+start
+editing. While the authors of QGIS have made every effort to preserve the
+integrity of your data, we offer no warranty in this regard.
+}
+\end{Tip}
+
+\subsubsection{Advanced digitizing}
+\index{vector layers!advanced digitizing}
+\index{advanced digitizing!an existing layer}
+\label{sec:advanced_edit}
+
+\begin{table}[h]\index{vector layers!advanced editing tools}
+\centering
+\caption{Vector layer advanced editing toolbar}\label{tab:advanced_editing}\medskip
+\small
+\begin{tabular}{|l|p{6.9cm}|l|p{6.9cm}|}
+\hline \textbf{Icon} & \textbf{Purpose} & \textbf{Icon} & \textbf{Purpose} \\
+\hline \includegraphics[width=0.7cm]{mActionUndo}
+   & Undo 
+   & \includegraphics[width=0.7cm]{mActionRedo}
+   & Redo \\
+\hline \includegraphics[width=0.7cm]{mActionSimplify}
+   & Simplify Feature
+   & \includegraphics[width=0.7cm]{mActionAddRing}
+   & Add Ring \\
+\hline \includegraphics[width=0.7cm]{mActionAddIsland}
+   & Add Island
+   & \includegraphics[width=0.7cm]{mActionDeleteRing}
+   & Delete Ring \\
+\hline \includegraphics[width=0.7cm]{mActionDeletePart}
+   & Delete Part
+   & \includegraphics[width=0.7cm]{mActionReshape}
+   & Reshape Features \\
+\hline \includegraphics[width=0.7cm]{mActionSplitFeatures}
+   & Split Features
+   & \includegraphics[width=0.7cm]{mActionMergeFeatures}
+   & Merge Selected Features \\
+\hline \includegraphics[width=0.7cm]{mActionNodeTool}
+   & Node Tool
+   &
+   & \\
+\hline
+\end{tabular}
+\end{table}
+
+
+\minisec{Undo and Redo}
+\index{vector layers!undo}
+\index{vector layers!redo}
+
+The \toolbtntwo{mActionUndo}{Undo} and \toolbtntwo{mActionRedo}{Redo} tools
+allow the user to undo or redo the last or a certain step within the vector editing 
+operations. Basic view of Undo/Redo operations is a widget, where all operations 
+are shown (see Figure~\ref{fig:vector_redoundo}). This widget is not displayed by 
+default. Widget can be displayed by right clicking on toolbar and activating the 
+Undo/Redo check box. Undo/Redo is however active, even if the widget is not 
+displayed. 
+
+When Undo is hit, the state of all features and attributes are reverted to the 
+state before the reverted operation happened. Changes which are done elsewhere 
+(for example from some plugin), can show unspecific behavior for some operations 
+which appears in this box. The operations can be reverted or they stay the same. 
+
+An action can be triggered by clicking on Undo or Redo buttons or by clicking 
+directly on the item to which you want to return to. Another possibility to 
+trigger an undo operation is to click on the \button{undo/redo} buttons in 
+the advanced digitizing tool bar.
+
+\begin{figure}[ht]
+   \begin{center}
+   \caption{Redo and Undo digitizing steps \nixcaption}\label{fig:vector_redoundo}\smallskip
+   \includegraphics[clip=true, width=14cm]{redo_undo}
+\end{center}
+\end{figure}
+
+\minisec{Simplify Feature}
+\index{vector layers!simplify}
+
+The \toolbtntwo{mActionSimplify}{Simplify Feature} tool allows to reduce the
+number of vertices of a feature, as long as the geometry doesn't change. You 
+need to select one or several features, they will be highlighted by a red 
+rubber band and a slider appears. Moving the slider, the red rubber band is 
+changing its shape to show how the feature is being simplified. Clicking \button{OK} the new, simplified geometry will be stored. If a feature cannot be 
+simplified, a message shows up.
+
+\minisec{Add Ring}
+\index{vector layers!add!ring}
+
+You can create ring polygons using the \toolbtntwo{mActionAddRing}{Add Ring}
+icon in the toolbar. This means inside an existing area it is
+possible to digitize further polygons, that will occur as a 'hole', so only
+the area in between the boundaries of the outer and inner polygons remain as
+a ring polygon.
+
+\minisec{Add Island}
+\index{vector layers!add!island}
+
+You can \toolbtntwo{mActionAddIsland}{add island} polygons to a selected
+multipolygon. The new island polygon has to be digitized outside the selected
+multipolygon.
+
+\minisec{Delete Ring}
+\index{vector layers!delete!ring}
+
+The \toolbtntwo{mActionDeleteRing}{Delete Ring} tool allows to delete ring
+polygons inside an existing area. This tool only works with polygon layers. 
+It doesn't change anything when it is used on the outer ring of the polygon. 
+This tool can be used on polygon and mutli-polygon features.
+
+\minisec{Delete Part}
+\index{vector layers!delete!part}
+
+The \toolbtntwo{mActionDeletePart}{Delete Part} tool allows to delete parts
+from multifeatures (e.g. to delete polygons from a multipolygon feature). It 
+won't delete the last part of the feature, this last part will stay untouched. This tool works with all multi-part geometries point, line and polygon.
+
+\minisec{Reshape Features}
+\index{vector layers!reshape!feature}
+
+You can reshape line and polygon features using the 
+\toolbtntwo{mActionReshape}{Reshape Features} icon on the toolbar. It
+replaces the line or polygon part from the first to the last intersection 
+with the original line. With polygons this can sometime lead to unintended 
+results. It is mainly useful to replace smaller parts of a polygon, not major 
+overhauls and the reshapeline is not allowed to cross several polygon rings
+as this would generate an invalide polygon.
+
+\textbf{Note}: The reshape tool may alter the starting position of a polygon
+ring or a closed line. So the point that is represented 'twice' will not be
+the same any more. This may not be a problem for most applications, but it is
+something to consider.
+
+\minisec{Split Features}
+\index{vector layers!split!feature}
+
+You can split features using the \toolbtntwo{mActionSplitFeatures}{Split
+Features} icon on the toolbar
+
+\minisec{Merge selected features}
+\index{vector layers!merge!features}
+
+The \toolbtntwo{mActionMergeFeatures}{Merge Selected Features} tool allows to
+merge features that have common boundaries and the same attributes.  
+
+\minisec{Node Tool}
+\index{vector layers!node!tool}
+
+The \toolbtntwo{mActionNodeTool}{Node Tool} provides manipulation capabilites
+of feature vertices similar to CAD programs. It is possible to simply select
+multiple vertices at once and to move, add or delete them alltogether. The node
+tool also works with 'on the fly' projection turned on and supports
+the topological editing feature. This tool is, unlike other tools in Quantum GIS, 
+persistent, so when some operation is done, selection stays active for this 
+feature and tool.
+
+\minisec{Basic operations}\index{vector layers!Node Tool}
+
+Start by activating the \toolbtntwo{mActionNodeTool}{Node Tool} and selecting 
+some features by clicking on it. Red boxes appear at each vertex of this feature. 
+This is basic select of the feature. Functionalities are:
+
+\begin{itemize}
+\item \textbf{Selecting vertex}: Selecting is easy just click on vertex and 
+color of this vertex will change to blue. When selecting more vertices 
+\keystroke{Shift} key can be used to select more vertices. Or also the 
+\keystroke{Ctrl} key can be used to invert selection of vertices (if selected then 
+it will be unselected and when not selected vertex will be selected). Also more 
+vertices can be selected at once when clicking somewhere outside feature and opening a rectangle where all vertices inside will be selected. Or just click on an edge and 
+both adjacent vertices should be selected.
+\item \textbf{Adding vertex}: Adding vertex is simple, too. Just double click near 
+some edge and a new vertex will appear on the edge near to the cursor. Note that 
+vertex will appear on edge not on cursor position, there it has to be moved if 
+necessary.
+\item \textbf{Deleting vertex}: After selecting vertices for deletion, click the 
+\keystroke{Delete} key and vertices will be deleted. Note that according to 
+standard Quantum GIS behavior, it will leave a necessary number of vertices for 
+the feature type you are working on. To delete a complete feature, another tool 
+has to be used.
+\item \textbf{Moving vertex}: Select all vertices you want to move. All selected 
+vertices are moving in the same direction as the cursor. If snapping is enabled, 
+the whole selection can jump to the nearest vertex or line.
+\end{itemize}
+
+The \button{Release} button stores all changes and a new entry appears in the undo 
+dialog. Remember that all operations support topological editing when turned on. On 
+the fly projections are also supported.
+
+
+%%FIXME (not yet implemented in QGIS 1.2)
+%
+%\minisec{Reshape Tool}
+%\index{vector layers!reshape!tool}
+%
+%The reshape tool replaces parts of linear or polygonal features. The part 
+%between the first and last intersection of the reshape line and the feature 
+%will be replaced.
+
 \subsubsection{Creating a New Layer}\label{sec:create shape}\index{editing!creating a new layer}
 
 To create a new layer for editing, choose \toolbtntwo{mActionNewVectorLayer}{New Vector Layer} from the
@@ -1272,22 +1571,96 @@
 
 To complete the creation of the new layer, add the desired attributes by
 clicking on the \button{Add} button and specifying a name and type for the
-attribute. Only \selectstring{Type}{real}, \selectstring{Type}{integer}, and \selectstring{Type}{string} attributes are supported. Once you
-are happy with the attributes, click \button{OK} and provide a name for the shapefile.
-QGIS will automatically add a \filename{.shp} extension to the name you specify.  Once
+attribute. Only \selectstring{Type}{real}, \selectstring{Type}{integer}, and
+\selectstring{Type}{string} attributes are supported. Additionally and
+according to the attribute type you can also define the width and precision
+of the new attribute column. Once you are happy with the attributes, click
+\button{OK} and provide a name for the shapefile. QGIS will automatically add
+a \filename{.shp} extension to the name you specify. Once
 the layer has been created, it will be added to the map and you can edit it in
 the same way as described in Section \ref{sec:edit_existing_layer} above. 
 
+\subsubsection{Working with the Attribute Table}\label{sec:attribute table}\index{editing!working with the attribute table}
+
+The attribute table displays features of a selected layer. Each row in the table 
+represents one map feature with its attributes shown in several columns. The 
+features in the table can be searched, selected, moved or even edited.
+
+To open the attribute table for a vector layer, make the layer active by clicking 
+on it in the map legend area. Then use \mainmenuopt{Layer} from the main menu 
+and and choose \dropmenuopttwo{mActionOpenTable}{Open Attribute Table} 
+from the menu. It is also possible to rightlick on the layer and 
+choose \dropmenuopttwo{mActionOpenTable}{Open Attribute Table} from the 
+dropdown menu. This will open a new window which displays the attributes for 
+every feature in the layer (figure \ref{fig:attributetable}).
+
+\begin{figure}[ht]
+   \begin{center}
+   \caption{Attribute Table for Alaska layer \nixcaption}\label{fig:attributetable}\smallskip
+   \includegraphics[clip=true, width=12cm]{vectorAttributeTable}
+\end{center} 
+\end{figure}
+
+\minisec{Selecting features in an attribute table}
+
+\textbf{A selected row} in the attribute table represents all attributes of a 
+selected feature in the layer. The attribute table reflects any changes 
+in the layer selection in the main window and vice versa. A changed selection 
+in the attribute table also causes a change in the selected feature set in the 
+main window and different layer feature selection means different rows are to be 
+selected.
+
+Rows can be selected by clicking on the row number on the left side of the 
+row. Selecting a row doesn't change the current cursor position. \textbf{Multiple 
+rows} can be marked by holding the \keystroke{Ctrl} key. A \textbf{continuous 
+selection} can be made by holding the \keystroke{Shift} key and clicking on several 
+row headers on the left side of the rows. All rows between the current cursor 
+position and the clicked row are selected.
+
+Each column can be sorted by clicking on its column header. A small arrow 
+indicates the sort order (downward pointing means descending values from the top 
+row down, upward pointing means ascending values from the top rown down).
+ 
+For a \textbf{simple search by attributes} on only one column the \button{Look for} 
+field can be used. Select the field (column) from which the search should be 
+performed from the dropdown menu and hit the \button{Search} button. For more 
+complex searches use the Advanced search \button{...}, which will lauch the 
+Search Query Builder described in Section \ref{sec:select_by_query}. 
+
+To show selected records only, use the checkbox \checkbox{Show selected records only}. To search selected records only, use the checkbox \checkbox{Search selected records only}. The other buttons at the bottom left of the attribute table window provide following functionality: 
+
+\begin{itemize}
+\item \toolbtntwo{mActionOpenTable}{Remove selection}
+\item \toolbtntwo{mActionSelectedToTop}{Move selected to top}
+\item \toolbtntwo{mActionInvertSelection}{Invert selection}
+\item \toolbtntwo{mActionCopySelected}{Copy selected rows to clipboard} also with \keystroke{Ctrl-C}
+\item \toolbtntwo{mActionZoomToSelected}{Zoom map to selected rows} also with \keystroke{Ctrl-J}
+\item \toolbtntwo{mActionToggleEditing}{toggle editing mode} to edit single values of attribute table.
+\end{itemize}
+
+\begin{Tip}[ht]\caption{\textsc{Manipulating Attribute data}}
+\qgistip{Currently only PostGIS layers are supported for adding or dropping
+attribute columns within this dialog. In future versions of QGIS, other
+datasources will be supported, because this feature was recently implemented
+in GDAL/OGR > 1.6.0
+}
+\end{Tip}
+
+
 \subsection{Query Builder}\label{sec:query_builder}
 \index{Query Builder}
 
-The Query Builder allows you to define a subset of a table and display
-it as a layer in QGIS. It can currently only be used with PostGIS layers. 
-For example, if you have a \filename{towns} layer with a
-\usertext{population} field you could select only larger towns by entering
+The \button{Advanced search\dots} button opens the Query Builder and allows you to 
+define a subset of a table using a SQL-like WHERE clause, display the result in the 
+main window and save it as a Shapefile. For example, if you have a 
+\filename{towns} layer 
+with a \usertext{population} field you could select only larger towns by entering
 \usertext{population > 100000} in the SQL box of the query builder. Figure
 \ref{fig:query_builder} shows an example of the query builder populated with
 data from a PostGIS layer with attributes stored in PostgreSQL. 
+The Fields, Values and Operators sections help the user to construct the SQL-like
+WHERE clause easily in the text field SQL where clause window.
+
 
 \begin{figure}[ht]
   \begin{center}
@@ -1296,20 +1669,30 @@
   \end{center}  
 \end{figure}
 
-The query builder\index{Query Builder} lists the layer's database
-fields in the list box on the left. You can get a sample of the data
-contained in the highlighted field by clicking on the \button{Sample} button\index{Query
-Builder!generating sample list}. This retrieves the first 25 distinct values
-for the field from the database. To get a list of all possible values for a
-field, click on the \button{All} button\index{Query Builder!getting all
-values}. To add a selected field or value to the query, double-click on
-it\index{Query Builder!adding fields}. You can use the various buttons to
-construct the query or you can just type it into the SQL box.
+The \textbf{Fields list} contains all attributes of the attribute table to be 
+searched. To add an attribute to the SQL where clause field, double click its 
+name in the Fields list. Generally you can use the various fields, values and 
+operators to construct the query or you can just type it into the SQL box. 
 
-To test a query, click on the \button{Test} button\index{Query Builder!testing
-queries}. This will return a count of the number of records that will be
-included in the layer. When satisfied with the query, click \button{OK}. The
-SQL for the where clause will be shown in the SQL column of the layer list.
+The \textbf{Values list} lists the values of an attribute. To list all possible 
+values of an attribute, select the attribute in the Fields list and click the 
+\button{All} button\index{Query Builder!getting all values}. To list all values 
+of an attribute that are present in the sample table, select the attribute in 
+the Fields list and click the \button{Sample} 
+button\index{Query Builder!generating sample list}. To add a value to the SQL 
+where clause field, double click its name in the Values list.   
+
+The \textbf{Operators section} contains all usable operators. To add an operator 
+to the SQL where clause field, click the appropriate button. Relational operators 
+( = , > , \dots), string comparison operator ( LIKE ), logical operators ( AND , OR 
+, \dots) are available. 
+
+The \button{Clear} button clears the text in the SQL where clause text field. The 
+\button{Test} button shows a message box with the number of features satisfying 
+the current query, which is usable in the process of query construction. The 
+\button{OK} button closes the window and selects the features satisfying the 
+query. The \button{Cancel} button closes the window without changing the current 
+selection. 
 
 \begin{Tip}\caption{\textsc{Changing the Layer Definition}}\index{Query
 Builder!changing layer definitions}
