# makefile to convert figures into eps format for the book

# Comments from Michel Wurtz:
# You will notice that the list given is the list of targets.  "all" just
# refer to this list.  The most important rule is the next rule, that give
# the generic rule for transforming a .fig into a .eps file.  Note the use
# of % (define the couple target:source) and the use of
# $< (source postfix, here .fig) and $@ (target postfix, here .eps)

# with .eps extension:
JPG=qgis_icon_new_verylarge.eps\
#	nextfile.eps

PNG=addshapefile.eps\
	addpostgis.eps\
	addraster.eps\
	digitising_attributes.eps\
	editable.eps\
	inoverview.eps\
	map_composer_blank.eps\
	map_composer.eps\
	newpostgisconnectiondialog.eps\
	newvectorlayer.eps\
	no_pyramid.eps\
	pluginmanager_50pct.eps\
	pluginmanager_80pct.eps\
	pluginmanager.eps\
	plugintoolbar.eps\
	pyramid.eps \
	qgis-icon-16x16.eps\
	querybuilder.eps\
	rastercontextmenu.eps\
	raster_properties.eps\
	shapefileloaded.eps\
	shapefileopendialog.eps\
	spiticon.eps\
	startup.eps\
	vectorLayerSymbology.eps
	
	
##### TARGETS #####

all: $(PNG) $(JPG)
	if [ ! -d ../finalpix/ ]; then mkdir ../finalpix; fi
	#bitte nicht mv machen:
	cp *.eps ../finalpix/

#$(EPS):	%.eps: %.fig
#	fig2dev -L eps $< > $@

#$(FIGPNG): %.png: %.fig
#	fig2dev -L png -m 2 $< > $@

$(PNG): %.eps: %.png
	# Workaround: für das PDF
	#convert -geometry 300x -depth 1 $< $@
	convert $< $@ 

$(JPG): %.eps: %.jpg
	# Workaround for the PDF
	#convert -geometry 300x -depth 1 $< $@
	convert $< $@

clean:
	rm -f *.bak *~ *.pdf $(PNG) $(JPG)
