%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionAddRasterLayer.eps)
%%CreationDate: (Sat Jan 24 07:56:22 2009)
%%BoundingBox: 0 0 101 101
%%HiResBoundingBox: 0 0 101.464 101
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 101 101
userdict begin
DisplayImage
0 0
101.464 101.464
12.000000
32 32
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000
040F050A1B0B0F21110D1E0E061707010803000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff000000030C04152F18206B2321812225902124931E
1E841C1866180A1A0B000200ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
00000007150A1C4D212278232C82232D87232E8D222E92202E951E2A961B1B8B180F300F
030C03ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff030C041D50242575262A7724
2B7D23499340539E4A54A24A3D992F2D951D2C971A1E96170C280E000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000143119246F282B74272A76262A7824C0D7BEF7F7F7F7F7F7
7EB9752E931F2D961C2B9719168215061307000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff051507
225F2A2970292A72282A74272A7725C0D5BEF7F7F7F7F7F77DB6762E90212E941E2D961C
249718114A12000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff0B210F23682B2A6D2A2A70292A7327
2B7526C0D5BFF7F7F7F7F7F77DB4762E8E222F92202E951D2B961B167017030B03ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000122D17256A2B69976AC4D5C4C4D6C4C4D6C4EAEFE9F7F7F7F7F7F7
D9E6D7C5DCC2C6DDC2C5DEC23D9D2F1B861A061508ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000173B1C
26682C7FA681F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
449F3720911C09190Affffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000102B1523652C7FA482F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7449C371D811E071608ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff0B220E24622C346F38497F4C4A824B4A844AC9D9C9F7F7F7F7F7F7
8EB58A4B90454D95454D9B453090251D6D20030903ffffffffffffffffffffffffffffff
030608241D11292012292012282012282012391A1B4F1C27521E27551E28451921030D04
215A2B25652C27662C29692B296C2BC0D3C0F7F7F7F7F7F77BA9782A78242B7E232E8523
268B2218441B000000ffffffffffffffffffffffffffffff01010267512EC99C54C99C55
C99C55C99C5674483CDE5571DE5571DE5572DB5471423B52112E1523602C27642D27682C
296A2BC0D2C0F7F7F7F7F7F77BA8792A77252A79232B8023206E23081509ffffffffffff
ffffffffffffffffffffffff000000362A17CA9D57C99D57C99D57C99E58B99252A14256
DF5673DF5673DE5673B34B64182B3B1B4E2424632C27662C29692B7EA57F9DBB9D9DBC9D
5790542B7526287725207623122816000000ffffffffffffffffffffffffffffffffffff
ffffff0E0C0AB0894BC99D57C99D58C99E58C99E58744442DF5673DF5673DE5674DE5674
74415A0B24231A482123622D25662C276A2B296C2A296E2A2871292574271F6626122715
020A02ffffffffffffffffffffffffffffffffffffffffffffffff0306033E4718656526
656626646626636525545520B24755DE546ADE546ADE546ADB5368463B3215301E112D16
1F5628235F2C23662B23662A225F291B4A220A1A0C000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffff0000002D480B4C75114C75114C75114C75114C7511
6D492DE15867E15867E15867E15867B34D523C5D1A3464161D3A0D10280A0E250F0D250D
061104000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0000001A2B074A73104C75114C75114C75114C7511475E13C64F5AE15867E15867
E15867E15867784437376D18386E18386F19386F19386F192D580F081207000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0C1504416D0D
4C75114C75114C75114C75114C7511774833E15867E15867E15867E15867DC56654F4A23
386F18386F19386F19386F19386F1923440C040906ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff0000002A380D5D65215F65225E6423606623
6065244B4221D25065DE546BDE546BDE546BDE546BAC465726453C1E50451D50471D5049
1C514A1B4C45081108000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000120E09BB9251C89E59C89E59C89E59C89E59C69C59823F4FDE5775
DE5775DD5775DD5775DD57766B425C19669C1868A01669A21569A4146AA60F5382010407
000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff020608
76623CC89E59C89E59C89E59C89E59C89E5A694B40DB5673DE5775DD5775DD5776DD5776
D855733D47681768A11669A3146AA6136BA8126BAA0A4067010509000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000463B26C89E59C89E59C89E59
C89E5AC89E5AB893548E4156DD5775DD5775DD5776DD5776DD5776A84A651E5989156AA5
146AA7126BA9116CAB106CAD052A4301060A000000ffffffffffffffffffffffffffffff
ffffffffffffffffff00000026211F806B52846E54856F54856E54856E54846E545F4B4C
8C535F8C535F8B535F8B535F8B535F8A5360604C57415B70415B72405B72405B73405C73
405B723D3D4217161Affffffffffffffffffffffffffffffffffffffffffffffffffffff
2523249484809D8A839D8A839D8A839D8A839D8A839886829880849F82869F82869F8286
9F82869F82879E82868C808588848C88848C88848D88848D87858D87838B554D4F0D0B0B
ffffffffffffffffffffffffffffffffffffffffffffffff0808087A6D6B9D8A839D8A83
9D8A839D8A839D8A839D8A839280819F82869F82869F82869F82879F82879F8287998085
89828988848D88848D87858D87858D87858E8782893D3839000000ffffffffffffffffff
ffffffffffffffffffffffff0000004C44419C89839D8A839D8A839D8A839D8A839D8A83
9584819A80849F82869F82869F82879F82879F82879F828791808488848D88858D87858D
87858D87858E87858E857F85292829000000ffffffffffffffffffffffffffffffffffff
ffffff1A1A1C685A488870528770528770528771528771538771525E454C914F5E914E5E
924F5E924E5E924F5D914F5E8F4E5C41475B2E597A2E5A7B2D597C2B5A7D2A5A7F295B80
21324001060A000000ffffffffffffffffffffffffffffffffffff0001014F4833C89E5A
C79E5BC79F5BC79F5BC79F5BC79F5C6E5A45C24F6BDC5777DC5777DC5877DC5877DC5878
DC5878A14966155E970B6FB50A70B70871B90771BB0672BD0570BB011625000508ffffff
ffffffffffffffffffffffffffffff0000001C1810C29A58C79E5AC79E5AC79E5BC79E5B
C69F5BC09A58734053DC5776DC5777DC5777DC5777DC5777DC5777DC58785E40600A6BAF
096CB2086DB4066EB6056EB8046FBB0265AA00070D000000ffffffffffffffffffffffff
ffffffffffff0205082A20112C22112A2011281F10261D10241C0F221A0E2212103C151D
38141B3513193212182F11162C1016290F14240D12010102000102000102000102000203
00020300020300020300080D
end
%%PageTrailer
%%Trailer
%%EOF
