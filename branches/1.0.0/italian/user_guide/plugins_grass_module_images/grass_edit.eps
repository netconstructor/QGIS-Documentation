%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (grass_edit.eps)
%%CreationDate: (Sat Jan 24 07:56:33 2009)
%%BoundingBox: 0 0 101 101
%%HiResBoundingBox: 0 0 101.471 101
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 101 101
userdict begin
DisplayImage
0 0
101.471 101.471
12.000000
31 31
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
BF0000C20F0FC51414C71C1CC92222CC2222ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffC20E0EC61717CE3939D14141D24242D13E3E
CF3333D03535ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffC90D0D
C51313CB2A2AD65757DA6565DC6969DB6565D95B5BD95858D54444ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000000000C51010C71B1BD24545DA6464DC6969DC6868D64F4F
D33F3FD54444D74A4AD94F4FDF5050ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff000000030200650D0C
C92828D75858DB6868DC6D6DD95858D43F3FD54343D74A4AD95050DB5656DC5B5BDD6363
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000B71111B51818CF3939DA6464DC6B6BDD6C6CD64E4ED44242
D64949D84F4FDA5555DC5B5BDE6161E06767E76D6Dffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff65110DBE201F
D44C4CDC6969DD6E6EDD6868D64848D64747D84E4EDA5454DC5A5ADE6161E06767E06C6C
9E5050ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffB62424C61C1CCC2C2CD85C5CDC6C6CDE7171DB6060D54646D74C4C
DA5252DC5959DE6060E06666E26C6CC465613A2D1D000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffC61313C81F1FD03A3A
DB6767DE6F6FDF7272D95656D74949D95050DB5757DD5E5EDF6565E26B6BE371718D5848
5D92200C1304ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffC61A1AC92323D44C4CDC6C6CDE7272DE6E6ED74F4FD84D4DDA5454
DC5B5BDF6262E16969E37070E47676483425609F212B480E000000ffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffC81212C81B1BCB2A2AD85C5C
DD6E6EDF7474DC6565D74C4CD95151DB5858DE5F5FE06666E26D6DE5747492524C1C150E
3A601361A1213C6315020300ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffC61818C91F1FCE3232DA6464DE7070DF7474DA5C5CD84D4DDA5454DD5C5C
DF6363E16A6AE47171D5746F88973C253D0C070C025F9E2061A121172708000000ffffff
000000000000ffffffffffffffffffffffffffffffffffffC61818C92121D03B3BDC6A6A
DE7272DF7171D85252D95050DB5858DE5F5FE06767E36E6EE57575E57B7B24271061A121
4D801A0A110361A1215F9E200E1705ffffffffffff080E03000000ffffffffffffffffff
ffffffffffffC71B1BCA2323D34646DD6D6DDF7474DD6868D84E4EDA5353DC5A5ADF6262
E16A6AE47171DB7572715E390C13050A110361A12161A021101C0661A12161A121142007
ffffff050A02030501000000ffffffffffffffffffffffffFF0000CA2525D54D4DDE7070
E07575DA5C5CD84D4DDA5555DD5D5DE06565E26D6DE57575BF66664C631F5F9E20111D06
0509025B971E61A121111D0661A12161A1211B2D090000000E1605132006ffffffffffff
ffffffffffffBFBFBFBCB6B6CD3939DC6868DF7272D95353D94F4FDB5858DE6060E06868
E36F6FE57777E78080050703395F1361A121395E13060B02385C1361A121121D0661A121
61A121406A16080D03457218121F06ffffffffffffffffffffffffBBBBBBBCBCBCD28181
DB6161D85151D95151DC5959DE6262E16A6AE47272E57A7AEA8383ffffff0000002A460E
61A1215F9E20080E031B2C0961A121121E0661A12161A1215A951E1727085C991F101A06
ffffffffffffffffff837474C2C2C2DFDFDFF0DFDFD64E4EDA5353DC5B5BDF6363E26C6C
E47474E87B7BFFAAAAffffffffffff00000015240761A12161A121121D060A110361A121
131F0661A12161A12127410E4B7D19487719070C02ffffffffffff552525873434E2D2D2
DADADAA0A0A07E6363C46565DE6F6FE07575E47777EA8080ffffffffffffffffffffffff
ffffff0D150461A12161A121385E13060902609F2113200761A1215B981F15230761A121
1F330A000000ffffff5224249A3131AB1C1CBB2C2C8781814B4B4BC6C6C6C6C6C6C9C9C9
ffffffffffffffffffffffffffffffffffffffffffffffff090E034C7E1A61A12161A121
040701568F1D13200761A1213557123A611461A1210F1805ffffffffffff4F1515A21313
BF0000CD2C2CA34C4CBAB3B3C5C5C5ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff04080015230761A12161A121233A0C33531114210761A1211E320A
5F9E2057911E0C1404ffffffffffffffffff790A0AA42F2F964545000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0B1204
4D801A61A12160A0211D310B17260861A121263E0D61A1212E4C10050B03ffffffffffff
ffffffffffff000000000000000000000000000000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff0000000F19055C991F61A121487818182A08
61A1215C991F61A1210D1605000000ffffffffffffffffffffffffffffffffffff000000
000000000000000000000000000000000000000000000000ffffffffffffffffffffffff
ffffffffffff04090015230761A02160A021192A0961A12161A1214B7D1A090E03ffffff
ffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000000000000000000000000000000000000000000ffffffffffff080D03253D0C
61A121263F0D61A12161A121162607000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000
000000000000000000000000000000000000070C0244721633541161A1214D801B070C02
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff000000000000000000000000000000000000000000000000
000000000000192B084C7F1A58911E1C2D0A010100ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffff000000000000000000000000000000000000000000050902304E110F1705
000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
000000000000000000000000000000000000000000000000000000ffffffffffffffffff
ffffff
end
%%PageTrailer
%%Trailer
%%EOF
