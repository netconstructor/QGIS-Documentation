%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mapcalc_select.eps)
%%CreationDate: (Sat Jan 24 07:56:34 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22.005 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22.005 22.005
12.000000
22 22
0
0
505050505050505050ffffffffffffffffffffffffffffffffffff505050505050505050
ffffffffffffffffffffffffffffffffffff505050505050505050ffffff505050505050
505050FFFFFF505050FFFFFF505050FFFFFF505050505050505050505050505050FFFFFF
505050FFFFFF505050FFFFFF505050505050505050ffffff505050505050FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFF505050505050ffffffffffffFFFFFFFFFFFF7F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7E7E7E
F1F1F1FFFFFFffffffffffffffffff505050FFFFFF7F7F7FB2B2B2B2B2B2B2B2B2B2B2B2
B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2AFADABF6F6F6505050
ffffffffffffffffffFFFFFFFFFFFF7F7F7FB2B2B2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F0EDEBAFAAA6FFFFFFFFFFFFffffffffffff
ffffff505050FFFFFF7F7F7FB2B2B2F2F2F2FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFDFBF9FBF5F1ADA7A1FFFFFF505050ffffffffffffffffffFFFFFF
FFFFFF7F7F7FB2B2B2F2F2F2FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FDFCFAFBF6F2F9F1EAACA49DFFFFFFFFFFFFffffffffffff505050505050FFFFFF7F7F7F
B2B2B2F2F2F2FFFFFFFFFFFFFFFFFFFFFFFF363636363636FEFEFEFCFBFAFAF5F1F8F1EA
F7ECE3ABA198FFFFFF505050505050ffffff505050505050FFFFFF7F7F7FB2B2B2F2F2F2
FFFFFFFFFFFFFFFFFFFFFFFF363636FFFFFF363636EEEAE7EBE4DEF1E6DDF4E7DBA99D93
FFFFFF505050505050ffffff505050505050FFFFFF7F7F7FB2B2B2F2F2F2FFFFFFFFFFFF
FFFFFFFFFFFF363636FFFFFFFFFFFF363636CEC5BEDDD1C7ECDBCEA7998DFFFFFF505050
505050ffffffffffffFFFFFFFFFFFF7F7F7FB2B2B2F2F2F2FFFFFFFFFFFFFFFFFFFFFFFF
363636FFFFFFFFFFFFFFFFFF363636C5B8ACD9C7B8A19284FDFDFDFFFFFFffffffffffff
ffffff505050FFFFFF7F7F7FB2B2B2F2F2F2FFFFFFFFFFFFFFFFFFFFFFFF363636FFFFFF
FFFFFFFFFFFFFFFFFF363636BFAD9E958476F6F6F64F4F4FffffffffffffffffffFFFFFF
FFFFFF7F7F7FB2B2B2F2F2F2FFFFFFFFFFFFFFFFFFFDFCFA363636FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF363636837466E2E2E2F6F6F6000000ffffffffffff505050FFFFFF7F7F7F
B2B2B2F2F2F2FFFFFFFFFFFFFEFDFCFCF7F3363636FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF363636C8C8C8474747000000000000ffffffFFFFFFFFFFFF7F7F7FB2B2B2B2B2B2
B2B2B2B1B1B0AFADABAEA9A4363636FFFFFFFFFFFFFFFFFFFFFFFF000000000000000000
B6B6B6C8C8C8000000000000505050505050FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF363636FFFFFFFFFFFF000000FFFFFFFFFFFF000000ADADADAFAFAF393939
404040000000505050505050505050FFFFFF505050FFFFFF505050FFFFFF565656FFFFFF
505050363636363636000000FFFFFFFFFFFF000000ADADADB4B4B4404040404040000000
505050505050505050ffffffffffffffffffffffffffffffFFFFFFFFFFFF5050504F4F4F
000000000000000000FFFFFFFFFFFF000000B5B5B53F3F3F444444000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffFFFFFFffffff000000000000000000
000000FFFFFFFFFFFF0000000A0A0A000000000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000
000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000
000000000000000000000000
end
%%PageTrailer
%%Trailer
%%EOF
