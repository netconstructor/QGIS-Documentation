%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (randompoints.eps)
%%CreationDate: (Sat Jan 24 07:56:41 2009)
%%BoundingBox: 0 0 106 103
%%HiResBoundingBox: 0 0 106.466 103
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 106 103
userdict begin
DisplayImage
0 0
106.466 103.139
12.000000
32 31
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0000002C0303580404760303570101260000ffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff3803036B0808760808
8E0505A00303810101210000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffff2402024903035B0202
440101180000ffffffffffff0000006505057507077108087C0707930404A00202450000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff2E02026208087A0707920404A10202670101120000ffffff
0000007C04047C07077408087008088306069804044F0101ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffEFEBA3
5E0606730808700808810707960404A102023D0000ffffff000000750202850505790707
7208087008088405053D0101ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffF9F5AAF9F5AAffffff88855C7904047B0606730808700808
8706069B0303510101ffffffffffff3D0000880303810505780707710808480606150000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffDCB98EC0916B
E1CF98ffffffffffffCCC98F7902028305057907077208087308088A0505440202ffffff
ffffffffffff3100005C02025A04043E0303110000ffffffffffffffffffffffffffffff
F9F5AAF9F5AAffffffffffffF2E4A2D08A6EB32B2AB5332CD8A98EE1D1A1ffffffC4C188
8D5E458A03038006067607077108085B0606210000ffffffffffffffffffffffffffffff
ffffff2402024903035B0202440101180000ffffffffffffF9F5AAF9F5AAF9F5AAF6EFAA
DF997CC33636C84640BB2727C2514ACD6E629855571B1B139680636A382D6E0303690505
4C0505230202ffffffD64949ffffffffffffffffffEEA39C3307066208087A0707920404
A10202670101120000ffffffffffffffffffF9F5AAF6F0AFE8BDA8C3616ACA6D74C75655
B8100FC30808C00D13C44262CCC98Fffffff868570C1BE91F8FD53ffffffffffffffffff
ffffffffffffffffffD952537A1E1F730808700808810707960404A102023D0000ffffff
ffffffffffffC8BE92B8A09DE9D4D2E3C7C7C97C7FBF2223C00603BE0205C5040ABA2729
C4C188ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffD61C1F
9013137B06067308087008088706069B0303510101ffffff96936EDCD29BC69A90E3AEB7
EFD8D7F1CCCFE9CAC5CF7372C42022B90406B61D17B4291DDB6F6EC96E7F6A382D6E0303
ffffffffffff230202ffffffD64949F38A95F4BFBFD73135961818830505790707720808
7308088A0505440202ffffffffffffF2CFA8E78B92E4A1A2E3C7C0E6A9ABF1A9A8F3B8BA
DF8582C43935CE6366D56A6FB21916C11A28E5E2AB868570ffffffF8FD53CE605FD9231F
E33737EC616CD47276C7756CA748488A03038006067607077108085B0606210000ffffff
E9D2ADE98D87EB6B6BE87A78E9898CF29091F68E8FF59AA2EAB3AFDA847FC7464DCD535A
C43A38DB3131DB4949DB5358DB3941E33535EC1F20F12C30EE6364DA5E5ECC3331DB3734
D652534800006E03036905054C0505230202ffffffffffffDEA78CE76D6EF76661F66463
F36D72F2827DF28D85F88F8CED979BDF7D83DF4C45E04642CD5753D03C36E42C27EF2A2C
F42928E93023EF302AEC3236EB454AE83C3EE9271EEE190FD61C1Fffffff000000000000
ffffffffffffffffffffffffE46163EE5E5EF8645DF76460F06767F46B6AF37473F38382
F58A8EE65F63EE7266EB7F7DE95A61F1444BF24541F24E50F55050F34843F33F42F1353C
EF302BEC282AE6353BE74442D73135961818ffffffffffffffffffffffffffffffffffff
DF664EE54E47F25550F7615CF96465F76564F56261F16B62F1756BE85851EB6159F2ABA4
F5CECBF6BDC1EB9289ED6C67F3514BF33D39F03133ED2F2DEB302BDD3538DE9696ECC6C3
D2656B922C2EffffffffffffffffffffffffffffffffffffBC6E69C15F63E1484EE94F4A
F3605DE66D6DE06866F26860F95B61ED4552EB444AF17678F6C9C7EAC6C2DD5954E34F51
ED6C74E64B56E93D3CEA372CEA2E2AE13B3DE2A7A8F0DDDED17575C05A59480000ffffff
ffffffffffffffffffffffffFFFF009F8785C8626CDF484BE55455E8A49EDDA099EE6262
E74A4CDE4F54E94449F15257F2A09FEDCACADC5353DE867AEEDFDBE69CA4E54D4FEE3834
E92E28EB2A2EE14F56E0666BD74245CB575Bffffffffffffffffffffffffffffffffffff
ffffffFFFFFFAF7F87DD757ACF5256E38786E49B96E6414AD94D4DE47574E6575AEC4446
F27C7AF4BDC2E06260E3867DF1DCD7EBA2A2E64E51EF3334EB3028ED2C2DEC2D2CE73028
E23433C74C54ffffffffffffffffffffffffffffffffffffffffffffffff7E6F79D1797E
D17B7FD45A66D7383DE04147E97578F57A7FE56D77E44E52E85C59F1A5A8E56F6EE84C52
EA6B6DEA5557E94444E93531ED2E2BE72D32E3332BE6352ADF3B3CC04F50ffffffffffff
ffffffffffffffffffffffffffffffffffff67736DA76F71D67B7ECE8F8FDE6362E16163
CC7075BD8286CA898BD7706CE25A5BF0818BEA7373EF3F46EA3D3AF33939F1383AEB2D2C
EE2C2CEB2F31EA2F2DE92726DF3339CB4546ffffffffffffffffffffffffffffffffffff
ffffffffffffffffff79777794686B87767692696B9272726A68699D849AA97B7BD5635B
E44F46F15E63EE726FEF3D44F43F3EF93C3CF13232EB2E2EEA2F2BE92F25E33234E66164
DD6E70C6524Fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffFFFFFFF9FAF99D8499D3ABB0D45557EF3D3FF44C4BF16860F03F3E
F04038E83E39E73232E83030E7322DE92E27D7504FE6CBCCE9DADABB7A6Fffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
FFFFFFffffffC3AAA8CB6367E8373DF2463BF25047F04042DB464DDB8483D57371D53536
EE2F2FF5252CDE3E40ED9B95EBADAABD665Affffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffD6B5AEB57272
D4454EF23E3BF63F3DEA4245CD5C67EED8DCE9C5C8CC4446E4302BEC2D31E03531D7514B
CB5E62C15F58ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffFFFF00B6968DB65F5FDA3D45F83639E93936
CF494CDA9B98DC8B8ADA383AE7322EDD4844D76361D06C6FDDA990996666ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff7F7F7FAE817DC15558DE3A3AE9322CE02E2DDD3A3BDA3F3FDC4D4E
DA6666C98684DDA19CE6D9A6000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
7F7F7F9B5855C8343AEF212EE3272FCB3F45C7656AAF787EffffffDDD8D9FFFFFFffffff
ffffffffffffffffffffffffffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
