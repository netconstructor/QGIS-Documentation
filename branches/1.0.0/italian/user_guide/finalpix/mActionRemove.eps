%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionRemove.eps)
%%CreationDate: (Sat Jan 24 07:56:23 2009)
%%BoundingBox: 0 0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12.000000
16 16
0
0
C5CAD6D5D8E2D3D7E1D3D7E1D3D7E1D1D6E1C9CEDAC4C8D5B0B6C6ACB1C49FA4B8ffffff
ffffffffffffffffffffffffCCD0DCFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDF5F7FBF2F3FB
CFD2DEDBDDE7B8BDCE9CA3B7ffffffffffffffffffffffffCCD0DCFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEF7F9FBF3F5F9D1D5E0F3F6FBF8F8FBC3C8D6A8AEC2ffffffffffffffffff
CCD0DCFEFEFEFEFEFEFEFEFEFEFEFEFDFEFEF8F9FBF9FBFDB0B5C3BBBEC9C5C9D1BFC3CE
9A9FB27B8195ffffffffffffCCD0DCFEFEFEFEFEFEFEFEFEFEFEFEFDFEFEF9FBFCFBFCFD
C5C9D5B5BCCAAEB1C29BA0B1A0A7B86F7585ffffffffffffCCD0DCFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFBFCFDF7F7F9F2F9FDECF1F8D8E4F1C6CBD8CBD0DE6A6F7Dffffffffffff
CCD0DCFEFEFEFEFCFBFED5C8FED7CBFCFEFEF7FBFDF3FCFEE6D7DBEE7B6ADDA19FCBD5E3
D1D6E36D7280ffffffffffffCCD0DCFEFEFEFEE0D5FE9C80FE9170FBB9A9ECF5FDEBD6D7
F76851FE2509F74330D8CCD5DAE2F06E7380ffffffffffffCCD0DCFEFEFEFEF9F8FEBBA7
FE7755FE6A48F7856EF9614AFE240BF93E2BE6AFB1DBE0ECE0E3EE6E7381ffffffffffff
CCD1DCFEFEFEF6FBFCF7F9FBF8B1A0FD5938FE3F21FE2910F94E3BE7CCD0E1EDF8DEE1EC
E3E7F26F7482ffffffffffffCED1DCFEFEFEF2F8FCF3FDFEF7B3A8FE3E22FE240CFE1704
F93328E8CAD1E2F3FDE1E2ECE6E8F26F7481ffffffffffffCCD1DCFEFEFEF3F3F6F9A091
FE3C20FE2913FB5644FC2217FE0000FB1616E9A9B0E1EBF6E7E9F36F7482ffffffffffff
CCD1DCFEFEFEF7B7AEFE3519FE240CF88276EEF7FDF1AFB1FD0E0FFE0000F91C1DE3D5DE
E6EEF96F7482ffffffffffffCED1DCFEFEFEF3EDF0F87767F7938BF1F7FCEDF6FCECFCFE
EDB9C0F72F30EC969AE1E2EDE6E9F56F7481ffffffffffffCCD0DCFEFEFEFEFEFEFEFEFE
FDFEFEFCFEFEF9FBFEF8FBFEF5FDFEF1FEFEEDF9FDECEEF7F0F2FC707582ffffffffffff
BDC2CE848791868995868995858993868995858893848793838792838793828692828591
838693646775ffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
