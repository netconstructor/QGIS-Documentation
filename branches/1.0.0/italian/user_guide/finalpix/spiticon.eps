%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (spiticon.eps)
%%CreationDate: (Sat Jan 24 07:56:36 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0031E00B35DE4969E37A8BE81A3FC20015C60027CC002ACB0017ABffffffffffffffffff
ffffffffffffffffffffffffffffff002EE00024D80947E51856E7175DE71560E92879F2
4998FA91B9FA6A9DEE488DED5091ED4E8AE9497BE43C6BE02955D4062BBC000000ffffff
ffffffffffff0039E4094BE83A8BF23C99F53B9EF736A5F931A9FE27A4FF118AFF2E86FF
B2E2FF58CBFF6DD4FF82DDFF96E4FF9BDCFC86BEF54D88E90331B5000D28ffffffffffff
0027D82B7EF266CEFE54C5FF43BDFF38B7FF30AFFF28A7FF1E99FF0C80FF86C1FF3EBAFF
2CB0FF31B2FF36B5FF4CC1FF81DBFFACE3FD5896E90D379C000000ffffff023CE23799F7
53C5FF3FBAFF36B4FF31B3FF2FB1FF2BADFF25A3FF128BFF5AAEFF4AC1FF2BB0FF2FB2FF
2FB2FF2DB1FF2AB0FF60C9FFA4DEFC3469C70000000000000F53E73BA4F844BDFF37B6FF
31B3FF2FB2FF30B2FF2EAFFF28A7FF1893FF46AAFF3DBAFF2DB1FF2FB2FF2FB2FF2FB2FF
2EB2FF30B3FF8EE1FF598FE20008310000001465EC37A8FA39B6FF33B2FF31B2FF34B4FF
33B3FF2DAEFF29A9FF1E9BFF37ACFF2FB2FF2FB2FF30B2FF30B2FF30B2FF30B2FF2DB1FF
60CCFF79C0F7000F880001041668EE35ADFD34B4FF34B6FF3BB9FF39B6FF2EADFF29ACFF
2AABFF25A2FF2EAEFF31B3FF33B4FF35B4FF37B5FF37B6FF37B6FF31B2FF4AC2FF7CC4F6
00119B000B4B196AEC34B3FF2DA7FA2084E6238EF22CAAFF28A8FF29ABFF2FB0FF34B2FF
39B5FF3FB9FF44BBFF48BEFF4CC0FF50C2FF51C2FF48BEFF43BDFF78C1F600177B00168B
196FEC31B0FF115AC20118580943A92D99F736B2FF2EAFFF3AB5FF43B9FF4DBDFF59C3FF
61C7FF6ACDFF72D1FF7AD6FF7FD9FF66CDFF40BCFF6CB2EF0013630019B8197BF01F88EE
03173B00000001247E287DE94EBDFE33B0FF3BB2FF61C2FF7BD0FF94DCFFA2E4FFB0EBFF
BAF2FFBCF4FF96E2FF40B5FF41B9FF5896E6000629001065187FF3196FD7010A22000000
0019AD2669E669C8FC44BAFF29A8FF309DFD4A8EEF76ABF58ABBFB8EB9F97EADF653A8FE
2394FF1B99FF47B9FF4079D30001050000001777EF1664CF0007210000000015C62D6BEA
89D9FC62CAFF33B0FF1D8FF508379710257B152D901429840831C1036AFB0D83FF1E9AFF
48B3FE2C60B30000000000001366E8125ED4010A27000000001DCF3874ECA6E5FD83DCFF
43BAFF2293F30935860000000000000000000039D40D7DFC1B98FF25A6FF379EF6183E87
0000000000000642C90434BB000823000000001BAB1949C85888E191DFFC5ECAFE2594EF
0733840000000000000000000032BC0745CE1573E91F85ED2260C1051540000000ffffff
00000000020B000001000000ffffff0000000D287D4378CC4B92CD1A54AB0A1A40000000
ffffffffffff000000000414001153020F58090B14000000000000ffffffffffff000000
000000ffffffffffffffffff000000000000000000000000000000000000ffffffffffff
ffffff000000000000000000000000000000ffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
