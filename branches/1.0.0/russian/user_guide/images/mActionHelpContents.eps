%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionHelpContents.eps)
%%CreationDate: (Sat Jan 24 07:56:23 2009)
%%BoundingBox: 0 0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12.000000
16 16
0
0
197FE7ffffffffffffffffffffffffffffffffffff7383C07888C3ffffffffffffffffff
ffffffffffffffffffffffff177DE74B80D07A84BEffffffffffffffffff6D7FBD9FAAD7
B5BFE17281BEffffffffffff0240B7ffffffffffffffffff2687E9658FD27682BD7484C0
ffffffffffff7C8CC5E9EDF8E9ECF7818EC5677BBE1555C00444B8ffffffffffffffffff
2488EB6A9BDC7C87C27987C3ffffff6E7FBEB7C0E0FEFEFEFBFCFEB0B9DDB3BBDE6B8FD1
1B5BC40033ABffffffffffff1579E4519BE88D9BCF99A3D26F81BE8897CBF6F7FCFEFEFE
FEFEFEC4CBE6D6D7EEA3B0DA356CC80034ABffffffffffffffffff2A86E67390CEAEB5DB
A6B0DAC2CAE6FEFEFEFEFEFEF9F9FEE3E6F6C5CBE7B7BBDC638CD2053DB1ffffffffffff
ffffff136DDB6197DD96A0CFCFD7EED1D8EDFEFEFEFCFCFEF2F2FCF0F0F9B9C0E1CED1E9
879ED31950B900259Fffffffffffff1067D63381DB7B8DC6CCD2E8BDC4E2FCFCFEF7F7FD
EEEEF9E7E7F5CBD0EBC5CBE69EA8D34778CE001F9Affffffffffffffffff186AD57096D5
A8AFD7D0D6EED8DCF1F8F8FEE9E9F7E3E3F3D7DAEEB3BBDEC2C5E3678CCF042FA6001A96
ffffffffffff0D5ECF4882D38996CAD6DBEDC0C6E4F3F5FCE6E6F3E2E2F2C2C8E6BCC3E2
DBDAEC8399D02856BE00118Fffffffffffff054FC32970D17B95CFB8BFE0D2D7EDD8DAEE
E4E3F3DCDDF0AFB7DDDCDDF0E3E1F2A9B2DA476FC5011B98ffffffffffffffffff0951C3
5987D2929CCEBCC3E1CED1E8E9E8F6BEC3E2CED0E9E8E7F5CCD0E899A1CE799BD71338AA
ffffffffffffffffff0446BB175AC4728FCF98A0CCC0C6E1D2D5ECBCC2E1CFD2EB9FA8D3
808FC6748CC86A92D81340B0ffffffffffffffffffffffff003CB52C67C88B9CCE99A0C9
B8BFDDA1A9D08895C6758FCB5177C62B57BE01219B00108Dffffffffffffffffffffffff
ffffff0031AB4A79CAA0AFD3A1AACB8FA4D24B70C31C3CAA00269F000F8Cffffffffffff
ffffffffffffffffffffffffffffffffffff0435AA285EBF3D70C91239A8001D97000F8C
ffffffffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
