%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mapcalc_open.eps)
%%CreationDate: (Sat Jan 24 07:56:34 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22.005 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22.005 22.005
12.000000
22 22
0
0
3995E5449DE84BA0EA479BE74395E53F8FE23A89E03683DD327DDB2D77D82971D6246BD3
2065D11B5FCE1759CC1253C90E4DC70A47C40742C2053FBF0238B20032A4449DE88BCFFF
84C9FF7DC1FF75BAFF6DB2FF65AAFF5DA1FF5499FF4B90FF4287FF397FFF3076FF276DFF
1E64FF155BFF0C52FF044AFF0349FF0349FF0340F10032AB4DA3EC84C8FF7EC2FF77BBFF
70B4FF68ADFF60A5FF589DFF5095FF488DFF3F84FF367BFF2D73FF246AFF1C61FF1358FF
0A4FFF0349FF0349FF0349FF0343F60132B15BA8EBBFE1FFBCDEFFB9DBFFB5D7FFB1D4FF
AED0FFAACCFFA6C8FFA2C4FF9DC0FF99BCFF95B8FF90B3FF8CAFFF87AAFF82A5FE7FA2FE
7EA1FD7DA0FD7A9AF51D48B36AAFEBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFFFDFDFEFBFBFCF9F9FBF7F7FAF6F6F9
F0EFF4385EB569AEEAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFEFEFFFDFDFEFBFBFCF9F9FBF7F7FAF6F6F9F4F4F8EEEDF3385DB4
69ACE9FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FEFEFFFDFDFEFBFBFDF9F9FBF7F7FAF6F6F9F4F4F8F2F2F7ECEBF2375CB468AAE8FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFFFDFDFEFBFBFD
F9F9FBF7F7FAF6F6F9F4F4F8F2F2F7F1F1F6E9E9F0365BB367A9E7FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF45EF2F45EF2F45EF2F45EF2FECECEDF7F7F8FBFBFDF9F9FBF8F8FBF6F6F9
F4F4F8F3F3F7F1F1F6EFEFF5E7E7EE355AB266A7E6FFFFFFFFFFFFFFFFFFFFFFFF45EF2F
BAF2A7BAF2A7BAF2A7BAF2A71DA116DEDEE0F3F3F6F8F8FBF6F6F9F4F4F8F3F3F7F1F1F6
EFEFF5EDEDF4E5E5ED3459B265A6E5FFFFFFFFFFFFFFFFFFFFFFFF45EF2F88E96A61E23E
61E23E61E23E61E23E61E23E61E23E61E23E61E23E61E23E61E23E1DA116E7E7EEECECF3
E3E3EC3358B164A5E4FFFFFFFFFFFFFFFFFFFFFFFF45EF2F83E7645ADF375ADF3745DB36
45DB3645DB3645DB3645DB3645DB3645DB3645DB3645DB3645DB3645DB3645DB3645DB36
63A3E3FFFFFFFFFFFFFFFFFFFFFFFF45EF2F7DE55E54DC3245DB36B0F29795ED7495ED74
95ED7495ED7495ED7495ED7495ED747CF228D9FAB6D9FAB6D9FAB645DB3662A2E2FFFFFF
FFFFFFFFFFFFFFFFFF45EF2F75E3584AD92B45DB3684E86586EA6286EA6286EA6286EA62
86EA6286EA6286EA6273ED27C5F895C5F895C5F89545DB3662A0E1FFFFFFFFFFFFFFFFFF
FFFFFF45EF2F6FE15345DB3684E86576E75576E75576E75576E75576E75576E75576E755
76E75569E725B0F475B0F47545DB362D4D99619FE1FFFFFFFFFFFFFFFFFFFDFDFE45EF2F
65DD4A45DB3684E8655DE03A5DE03A5DE03A5DE03A5DE03A5DE03A5DE03A5DE03A57D923
7EED3B7EED3B45DB363155AC609DDFFFFFFFFFFFFFFDFDFEFBFBFD45EF2F45DB3677E55B
4EDD2F4EDD2F4EDD2F4EDD2F4EDD2F4EDD2F4EDD2F4EDD2F4EDD2F4ED12057D92345DB36
A9A8B23257B05E9ADEFAFAFBF9F9FAF7F6F9F5F4F745EF2F45DB3631C81D31C81D31C81D
31C81D31C81D31C81D31C81D31C81D31C81D31C81D31C81D31C81D45DB36B7B6C23257B0
357FD45791D7548CD45188D14E83CE45EF2F73C76ECCEDC8C5EBC2C5EBC2CDEEC9D4F0D0
E0F5DDE5F6E2EAF8E8F3FBF3F8FDF7FCFEFC45DB362B46892F52A40C3BA7ffffffffffff
ffffffffffffffffff45EF2FCCEDC8C5EBC2CCEDC8C5EBC2CDEEC9D4F0D0E0F5DDE5F6E2
EAF8E8F3FBF3F8FDF7FCFEFC45DB36171717171717ffffffffffffffffffffffffffffff
ffffff1DA1161DA1161DA1161DA1161DA1161DA1161DA1161DA1161DA1161DA1161DA116
1DA1161DA116171717171717ffffffffffffffffffffffffffffffffffffffffff171717
171717171717171717171717171717171717171717171717171717171717171717171717
171717ffffffffffffffffff
end
%%PageTrailer
%%Trailer
%%EOF
