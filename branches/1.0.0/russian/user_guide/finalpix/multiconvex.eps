%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (multiconvex.eps)
%%CreationDate: (Sat Jan 24 07:56:40 2009)
%%BoundingBox: 0 0 8 8
%%HiResBoundingBox: 0 0 7.92002 8
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 8 8
userdict begin
DisplayImage
0 0
7.92002 7.68002
12.000000
33 32
0
0
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000
000000000000000000000000000000000000000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffff0000000500002D090C640A0B730606530A0D
1E0C10000000000000000000000000000000000000000000000000000000000000ffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000190101AD4255E51E24F01112D7222A8C445A060B0F0C151C
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff000000
000000320202E51E24F40D0DF40D0DF01112C53E50152A39182E3D4DAAEB48A7E944A4E7
3B9EE23A9CDF153850000000000000000000000000000000000000000000000000000000
000000000000000000000000ffffffffffffffffffffffff000000000000220101B3171C
F40D0DF40D0DF01112631F280811172F5A794DAAEB48A7E944A4E73B9EE23B9EE2379BE0
3298DE2D95DC2991DA248ED8208BD61B88D40C283D02131F02121E02192A010C13000000
000000ffffffffffffffffff000000000000000000212F3E1D0D12E51E24F01112561217
0B080B04080C2B58774DAAEB48A7E944A4E73FA1E43B9EE2369BE03298DE2D95DC2991DA
248ED8208BD61B88D40F0E151D0609B40E12B1161E86486C140000000000ffffffffffff
ffffff0000000000000000000A111606080A20171E0000000E0B0F05080B305B7951ADED
4DAAEB48A7E944A4E73D9ADA3B9EE2369BE03298DE2D95DC2991DA248ED8208BD6000000
4D0F17F10E0EF30D0DF30D0DE0161C3C0202000000ffffffffffff000000000000000000
65B3EA6CBFF9365F7C05090C152632101D27478FC054ADEB51ADED4DAAEB48A7E944A4E7
3D9ADB3B9EE2369BE03298DE2D95DC2991DA248ED8208BD60D446A73090CF30D0DF40D0D
F40D0DF30D0D603958000000ffffffffffff0000000000000000006CBFF96CBFF96CBFF9
68BCF764BAF55FB6F35AB3F156B0EF51ADED4DAAEB48A7E944A4E73FA1E43B9EE2369BE0
3298DE2D95DC2991DA248ED8208BD6051A29AD151DF30D0DF40D0DF40D0DEE0F11535686
000000000000ffffff00000000000042769B6CBFF96CBFF96CBFF968BCF763B9F55FB6F3
5AB3F156B0EF51ADED4DAAEB48A7E944A4E73FA1E43B9EE2369BE03298DE2D95DC2991DA
248ED8208BD6051A29562C45E0171DF30D0DEE0F11AE2F45173656000000000000ffffff
000000000000070D1113232D152530355E7B68BCF763B9F55FB6F359B2F054ADEB51ADED
4DAAEB48A7E944A4E73FA1E43B9EE2369BE03298DE2D95DC2991DA248ED8208BD6051A29
09121C24304B2E2C471F263D040B11030D14000000000000ffffff201116000000B33746
A3354241303D1E2A375296C563B9F55FB6F35AB3F156B0EF51ADED4DAAEB48A7E944A4E7
3FA1E43B9EE2369BE03298DE2D95DC2991DA248ED8208BD61B88D41785D2042034032034
084168094168105F9601060A000000ffffff2D0D11000000F01112F01112D8303C1D1921
0F1D2663B9F55FB6F35AB3F156B0EF51ADED4DAAEB48A7E944A4E73FA1E43B9EE2369BE0
3298DE2D95DC2991DA248ED8208BD61B88D41785D21282D11383D10F82D2117CC6167CC3
000000000000ffffff0500009B0A0BF40D0DF40D0DF011128A546C13243063B9F55FB6F3
59B2F054ADEB51ADED4DAAEB48A7E944A4E73FA1E43B9EE2369BE03298DE2D95DC2991DA
248ED8208BD61B88D41785D2117CC60F82D20E80D01282D01785D21B88D4000000000000
36080BE51A1FF40D0DF40D0DE61F25503B4C00000063B9F55FB6F35AB3F156B0EF51ADED
4DAAEB48A7E944A4E73FA1E43B9EE2369BE03298DE2D95DC2991DA248ED8208BD61B88D4
1785D21282D00E80D00E81D11282D11785D21B88D4000000000000000000B5303DE51E24
E51E2494475A101319345E7B63B9F55FB6F35AB3F156B0EF51ADED4DAAEB48A7E944A4E7
3FA1E43B9EE2369BE03298DE2D95DC2991DA248ED8208BD61B88D41785D21282D10E81D1
0E82D2117CC61785D21B88D40000000000000D141B1803036456723E496117212C375C78
68BCF768BCF75FB6F359B2F054ADEB51ADED4DAAEB48A7E944A4E73FA1E43B9EE2369BE0
3298DE2D95DC2991DA248ED8208BD61B88D41785D2117CC60E82D20E80D01282D00B4269
0D446A000000000000000000000000000000182B386CBFF96BBDF768BCF763B9F55FB6F3
5AB3F156B0EF51ADED4DAAEB48A7E944A4E73D9ADA3B9EE2369BE03298DE2D95DC2991DA
248ED8208BD61B88D41785D21282D00E80D00533530319280B42690D446A122735000000
0000000000000000000000006CBFF96BBDF768BCF763B9F55FB6F35AB3F156B0EF51ADED
4DAAEB48A7E944A4E73D9ADB3B9EE2369BE03298DE2D95DC2991DA248ED8208BD61B88D4
1785D20E68A80004070205082423387F4C74715683380B0F050000ffffff000000000000
0000003F739769BBF368BBF363B9F55FB6F359B2F054ADEB51ADED4DAAEB48A7E944A4E7
3FA1E43B9EE2369BE03298DE2D95DC2991DA248ED8208BD61B88D41785D20D639F000306
573E62C62433EE0F11DD1921961B23170101ffffffffffff000000000000000000579ECE
68BBF363B9F55FB6F359B2F054ADEB51ADED4DAAEB48A7E944A4E73FA1E43B9EE2369BE0
3298DE2D95DC2991DA248ED8208BD61B88D41785D21180CD000000B02E45EE0F11F40D0D
F40D0DDD0E0F2A0202ffffffffffffffffff00000000000000000063B5EE63B9F55FB6F3
5AB3F156B0EF51ADED4DAAEB48A7E944A4E73FA1E43B9EE2369BE03298DE2D95DC2991DA
248ED8208BD61B88D41785D21282D00000008F2638EE0F11F40D0DF40D0DDF11132A0202
ffffffffffffffffffffffff0000000000000000005EB0EA5FB6F35AB3F156B0EF51ADED
4DAAEB48A7E92E6F9E3B99D83B9EE2369BE03298DE2D95DC2991DA248ED8208BD61B88D4
1785D20D67A601090F2F2134CE1F29EF0E10DD161B951318170101ffffffffffffffffff
ffffffffffff00000000000000000059ABE45AB3F156B0EF51ADED4DAAEB4096D208131C
18405B010204369BE03298DE2D95DC2991DA248ED8208BD61A87D31785D21180CE063251
07070C5504047306066105052C0202060000ffffffffffffffffffffffffffffffffffff
00000000000000000055ABE65AB3F15DB4F24DAAEB0A161F000000080A10090E140F2334
194B6E2D94DB2991DA248ED81B88D41A87D31785D21280CD000000000000000000000000
000000000000ffffffffffffffffffffffffffffffffffffffffffffffff000000000000
0000005CB1ED5FB6F30E1B24000000140608BD0F11AC1C25452D400B1B272073AE248DD7
278FD91B86D01981CA0F629C00131E000000000000000000ffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffff0000000000000000000000005BAFEB
060D121C0A0EEC1316F40D0DF40D0DD6242F070C1212476C238CD51B79BA000000000000
000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffff000000000000000000000000162A39651820F20E0E
F40D0DF40D0DEC131605070A0C314B1F7BBA000000000000000000000000ffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffff000000000000000000010202AA394DE21B21F20E0EEC1316BD3548
0F090E000000000000000000000000ffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffff0000000000000000002602027E0606BC1012A41B224F161D0B0204000000000000
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

end
%%PageTrailer
%%Trailer
%%EOF
