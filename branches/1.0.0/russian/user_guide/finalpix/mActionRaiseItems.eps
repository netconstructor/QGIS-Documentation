%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionRaiseItems.eps)
%%CreationDate: (Sat Jan 24 07:56:27 2009)
%%BoundingBox: 0 0 22 22
%%HiResBoundingBox: 0 0 22 22
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 22 22
userdict begin
DisplayImage
0 0
22 22
12.000000
22 22
0
0
ffffffFF8B00FF8B00F88500F18000EA7B00E47600DD7100D76C00D06700C96200C35C00
BC5700B55200AF4D00A84800ffffffffffffffffffffffffffffffffffffffffffFF9500
FABE22F7BD25F3B822F0B21EECAD1CE9A718E4A115E09C13DC9610D9900DD3890AD08408
C57403AC5300ffffffffffffffffffffffffffffffffffffffffffF9A500FFFD92FFFCA0
FFF992FFF685FFF278FFEE6BFFEA5EFFE551FFE044FFD936FFD329FFCB17F0AD02AA5200
ffffffffffffffffffffffffffffffffffffffffffF4A000FFFB86FFF993FFF470FFEC2D
FFE516FFE015FFDC14FFD813FFD20EFFCD0AFFC705FFC100EFA800A44D00ffffffffffff
ffffffffffffffffffffffffffffffF09B00FFF87AFFF686FFE90CFFE300FFDE00FFDA00
FFD500FFD000FFCB00FFC600FFC100FFBC00EEA3009F4800ffffffffffffffffffffffff
ffffffffffffffffffEB9600FFF46FFFF271FFE300E5D01A5586BE5586C35382BE517EB9
4F7BB54D77B04D74AC4C71A64669A22D53A31155C71052C20E50BB0D4DB6043FA1ffffff
ffffffE69100FFF164FFEC58FFDE00D7C4287EAEECE3F9FFD7F3FFC9EDFFBDE6FFB3E0FF
A9DBFF9ED4FF92CEFF87C6FE7ABFFE6DB7FE5EAEFE3081E1033A9AffffffffffffE18C00
FFEC58FFE955FFDA00D7C0287CACEBE6F7FFDBF2FFCEECFFB9E2FFA9DBFFA0D5FF96CEFF
8AC8FE7CC0FE6EB8FE5CADFE47A1FE2B7CDF022F7A000000ffffffDD8700FFE74DFFE551
FFD501D7BC2772A6E7DAF2FFC9EAFF91D3FF7EC9FF75C2FF6DBCFF64B6FE5CB1FE54ABFE
4CA5FE44A0FE3C9AFE2577DD022867000000ffffffD78200FFE342FFE045FFD106D7B825
699FE3CFEDFFB1DFFF7EC9FF75C2FF6CBCFF64B6FE5CB0FE54ABFE4CA5FE44A0FE3C9AFE
3494FE2074DB022861000000ffffffD37E00FFDE38FFDA38FFCB04D7B324629AE0C6E8FF
9CD5FF75C2FF6CBCFF64B6FE5CB0FE54ABFE4CA5FE449FFE3C9AFE3494FE2D8FFE1B70D8
02265C000000ffffffCE7900FFD82DFFD32CFFC601D7AE235D95DCBBE2FF92CEFF6CBCFF
63B6FE5CB0FE54AAFE4CA5FE449FFE3C9AFE3494FE2D8FFE268AFE166CD6022356000000
ffffffC97400FFD223FFCC1EFFC100D7AA22578FD8AFDBFF8DCBFF63B6FE5BB0FE53AAFE
4CA5FE449FFE3B9AFE3494FE2D8FFE268AFE1F86FE156AD4022352000000ffffffC46F00
FFCB18FFC208FFBC00D7A621528BD5A2D4FF87C6FE5BB0FE53AAFE4BA5FE439FFE3B99FE
3394FE2C8FFE268AFE2286FE2688FE186BD402214E000000ffffffB86000E59D02E39800
E19300BC83224B84D195CCFE7CC0FE53AAFE4BA5FE439FFE3B99FE3394FE2C8FFE268AFE
2588FE298AFE2D8BFE1B6CD3021F47000000ffffffA84B00A349009E4400983F00723B29
3E7BD088C5FE6DB7FE4BA4FE439FFE3B99FE3394FE2C8FFE258AFE2789FE2B8AFE308DFE
3790FE1E6DD1021D43000000ffffffffffffffffffffffffffffff0046BF347AD879BDFE
5FAEFE439FFE3B99FE3393FE2C8EFE258AFE298BFE2E8CFE338FFE3A91FE4296FE2370D1
021D3D000000ffffffffffffffffffffffffffffff0046B92F75D469B3FE4AA2FE3B99FE
3393FE2C8EFE288BFE2C8CFE318DFE3690FE3D93FE4597FE539EFE3376D3021B39000000
ffffffffffffffffffffffffffffff0040B32970D04DA3FE3A99FE3293FE2B8EFE2A8DFE
2E8EFE348FFE3991FE4095FE4899FE5BA3FE79B0FE437CD4021B32000000ffffffffffff
ffffffffffffffffff0042A80A47AC0D4BAB0B48A30A469D094397084192073F8D063D87
063B8305397C06387707377308346E052D5F02192D000000ffffffffffffffffffffffff
ffffffffffffffffff000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffff
ffffff000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000
end
%%PageTrailer
%%Trailer
%%EOF
