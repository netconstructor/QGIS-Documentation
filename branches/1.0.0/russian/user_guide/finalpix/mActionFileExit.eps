%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (mActionFileExit.eps)
%%CreationDate: (Sat Jan 24 07:56:23 2009)
%%BoundingBox: 0 0 15 15
%%HiResBoundingBox: 0 0 15.3639 15
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 15 15
userdict begin
DisplayImage
0 0
15.3639 15.3639
12.000000
16 16
0
0
ffffffA11708A01105B14030AF3829AE3829AF3526AC3525AC3423AC3122AC3120AA2E20
AC34219F1005A41A0CffffffA11708AF3829DDB593C6714CC77954C87C54C87E58CA8158
C98159CC855ACA875CCA8A5ECE8F63D5A576A72718A41A0DA01105DCB492B23E18B8532E
B95831BC5C36BD6038D39173D59376C06B43C26E48C4724BC4754EC67953D39E72A01205
B03F2FC87C57B8522CBB5E37C46B49F7D4C5FFFFFFFFFFFFFFFFFFFFFFFFF3D0BFCA815D
C67B54C77E57D09468A82B19AF3829C77753B95831C46B49FFFFFFFFFFFFF8D7C8DCA288
E3B097FFEFE5FFFFFFFFFAF3CD8863C8825CCF9469A72413AE3829C87C54BC5C36F7D4C5
FFFFFFE2AB93C26D46F2CFBDEEC6B3C57750E5B59EFFFFFFF0CDBAC98661D1956BA72312
AF3526C87E58C87754FFFFFFF8D7C8C26D46C3714AFFEFE5FFF0E6C67B54C77E57FFF2E8
FFFFFFCA8963D0976DA52110AC3525CA8158D39173FFFFFFD8997BC3714AC4744DFFF0E6
FFF0E7C77E57C8815AECC5B1FFFFFFD7A07FD19B72A51F0EAC3423C98159D59376FFFFFF
D89B7EC4744DC57750FFF0E7FFF1E7C8815AC98560EDC7B2FFFFFFDCAC90D29D76A51D0C
AC3122CC855ACC815EFFFFFFF3D0BFC57750C67B54FFF1E7FFF2E8C98560CA8862FFF5EC
FFFFFFD39977D79F79A21B09AC3120CA875CC26E48FFEFE5FFFFFFDBA285C77E57FADFD1
F1CFBCCA8862E9C0A9FFFFFFF9DED0D59E7FD4A17DA21907AA2E20CA8A5FC4724BCF8B6A
FFFFFFFFFFFFFADFD1E2B39AE3B59BFCE4D5FFFFFFFFFFF9D9A185D5A283D7A685A21705
AC3422CC8A5FC5764FC67B54CD8863FADFD1FFFFFFFFFFFFFFFFFFFFFFFFFDE7DAD9A185
D49E7FDAA98DD7A585A219059F1005D5A677C67953C77E57C8825CC98661CF926EE1B195
E1B59AD39977D59E7FD5A283D9A88BE5C8AEC77C579F1105A41A0CA72718D39E72D09468
CF9469D1956BD0976DD19B72D29D76D79F79D4A17DD7A582DBB092C77955A01201A51F10
ffffffA41A0DA01205A82B19A72413A72312A52110A51F0EA51D0CA21B09A21907A21705
A117039F1105A51F10ffffff
end
%%PageTrailer
%%Trailer
%%EOF
